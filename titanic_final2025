{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "mount_file_id": "13a57TL058a0a8xJaMwDBS2--qVAuE0Cy",
      "authorship_tag": "ABX9TyPPLvWfexwW+xNThBx8zsVh",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Be4hape/code/blob/main/titanic_final2025\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 701
        },
        "id": "Q1cscXaHWSDF",
        "outputId": "b40d5c79-35c7-42bc-ea02-e5cb916c6146"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Load the dataset\n",
        "data = pd.read_csv('train.csv')  # 파일명을 적절히 변경하세요\n",
        "\n",
        "# Select numeric columns and drop rows with missing values\n",
        "numeric_data = data.select_dtypes(include=['float64', 'int64'])\n",
        "numeric_data_clean = numeric_data.dropna()\n",
        "\n",
        "# Compute the correlation matrix\n",
        "correlation_matrix = numeric_data_clean.corr()\n",
        "\n",
        "# Plot the heatmap\n",
        "plt.figure(figsize=(10, 8))\n",
        "sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=\".2f\", linewidths=0.5)\n",
        "plt.title('Correlation Heatmap (Excluding Missing Values)', fontsize=16)\n",
        "plt.show()\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import re\n",
        "\n",
        "# Load the Titanic dataset\n",
        "data = pd.read_csv('train.csv')  # 파일 경로에 맞게 변경\n",
        "\n",
        "# Function to extract middle names only (ignore titles or parenthetical names)\n",
        "def extract_middle_name(name):\n",
        "    # Match patterns for titles or parenthetical names\n",
        "    match = re.search(r', ([^\\.]+)\\.', name)\n",
        "    if match:\n",
        "        return match.group(1).strip()\n",
        "    return 'Unknown'\n",
        "\n",
        "# Apply the function to extract middle names\n",
        "data['MiddleName'] = data['Name'].apply(extract_middle_name)\n",
        "\n",
        "# Split data into survival groups and count occurrences of each middle name\n",
        "middle_name_survival = data.groupby(['MiddleName', 'Survived']).size().unstack(fill_value=0)\n",
        "\n",
        "# Rename columns for clarity\n",
        "middle_name_survival.columns = ['Non_Survived_Count', 'Survived_Count']\n",
        "\n",
        "# Sort the results by Survived_Count and Non_Survived_Count\n",
        "middle_name_survival = middle_name_survival.sort_values(by=['Survived_Count', 'Non_Survived_Count'], ascending=False)\n",
        "\n",
        "# Display or save the results\n",
        "print(middle_name_survival)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qcH08HoIZuEo",
        "outputId": "04e78c17-aabc-4b5f-d086-3738c321e89c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              Non_Survived_Count  Survived_Count\n",
            "MiddleName                                      \n",
            "Miss                          55             127\n",
            "Mrs                           26              99\n",
            "Mr                           436              81\n",
            "Master                        17              23\n",
            "Dr                             4               3\n",
            "Mlle                           0               2\n",
            "Col                            1               1\n",
            "Major                          1               1\n",
            "Lady                           0               1\n",
            "Mme                            0               1\n",
            "Ms                             0               1\n",
            "Sir                            0               1\n",
            "the Countess                   0               1\n",
            "Rev                            6               0\n",
            "Capt                           1               0\n",
            "Don                            1               0\n",
            "Jonkheer                       1               0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import re\n",
        "\n",
        "# Load the Titanic dataset\n",
        "data = pd.read_csv('train.csv')  # 파일 경로에 맞게 변경\n",
        "\n",
        "# Function to extract middle names only (ignore titles or parenthetical names)\n",
        "def extract_middle_name(name):\n",
        "    match = re.search(r', ([^\\.]+)\\.', name)\n",
        "    if match:\n",
        "        return match.group(1).strip()\n",
        "    return 'Unknown'\n",
        "\n",
        "# Apply the function to extract middle names\n",
        "data['MiddleName'] = data['Name'].apply(extract_middle_name)\n",
        "\n",
        "# Split data into survival groups and count occurrences of each middle name\n",
        "middle_name_survival = data.groupby(['MiddleName', 'Survived']).size().unstack(fill_value=0)\n",
        "\n",
        "# Rename columns for clarity\n",
        "middle_name_survival.columns = ['Non_Survived_Count', 'Survived_Count']\n",
        "\n",
        "# Sort by Non_Survived_Count in descending order and reset index\n",
        "middle_name_survival = middle_name_survival.sort_values(by='Non_Survived_Count', ascending=False).reset_index()\n",
        "\n",
        "# Assign a new rank/ID to each middle name based on Non_Survived_Count\n",
        "middle_name_survival['Non_Survived_Rank'] = range(0, len(middle_name_survival))\n",
        "\n",
        "# Display or save the results\n",
        "print(middle_name_survival)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "c8kM79S0a9lm",
        "outputId": "a4b8214b-d702-431f-a493-3fd9f7305dfe"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "      MiddleName  Non_Survived_Count  Survived_Count  Non_Survived_Rank\n",
            "0             Mr                 436              81                  0\n",
            "1           Miss                  55             127                  1\n",
            "2            Mrs                  26              99                  2\n",
            "3         Master                  17              23                  3\n",
            "4            Rev                   6               0                  4\n",
            "5             Dr                   4               3                  5\n",
            "6            Col                   1               1                  6\n",
            "7           Capt                   1               0                  7\n",
            "8          Major                   1               1                  8\n",
            "9       Jonkheer                   1               0                  9\n",
            "10           Don                   1               0                 10\n",
            "11          Mlle                   0               2                 11\n",
            "12           Mme                   0               1                 12\n",
            "13          Lady                   0               1                 13\n",
            "14            Ms                   0               1                 14\n",
            "15           Sir                   0               1                 15\n",
            "16  the Countess                   0               1                 16\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Load the Titanic dataset\n",
        "data = pd.read_csv('train.csv')  # 파일 경로에 맞게 변경\n",
        "\n",
        "# Calculate survival and mortality rates by gender\n",
        "gender_stats = data.groupby('Sex')['Survived'].value_counts(normalize=True).unstack().fillna(0)\n",
        "gender_stats.columns = ['Mortality_Rate', 'Survival_Rate']\n",
        "\n",
        "# Plot survival and mortality rates by gender\n",
        "gender_stats.plot(\n",
        "    kind='bar',\n",
        "    stacked=True,\n",
        "    figsize=(10, 6),\n",
        "    color=['blue', 'yellow'],\n",
        "    alpha=0.85,\n",
        "    edgecolor = 'black'\n",
        ")\n",
        "\n",
        "plt.title('Survival Rates by Gender', fontsize=16)\n",
        "plt.xlabel('Gender', fontsize=12)\n",
        "plt.ylabel('Rate', fontsize=12)\n",
        "plt.ylim(0, 1)  # Rate ranges from 0 to 1\n",
        "plt.legend(['Mortality Rate', 'Survival Rate'], loc='upper right')\n",
        "plt.xticks(rotation=0)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 570
        },
        "id": "N8dhO1w4bemL",
        "outputId": "256c721c-b28d-40c4-a23c-35fc0e4b3b48"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "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/fqpX79++u677yRJBw4cyFMNedW/f3/79UolSpRQmzZtdPDgQX366aeaOnVqruNOnDihuXPn6vnnn7ev/NevXz/t3bv3purcsGGDrly5oiZNmigkJCTHPlnXU23atMnelnVtUO/evbVx40ZlZGSY2m9O6tSpo7p162Zrr127turVqyebzabvv//e3h4cHKxu3bopJSVFn3zyicOY2bNnS5JiYmLyXVeWY8eOacGCBdkehw4dsve52fczi5ubm8Npl1mCgoLk7++vtLQ0h+u9sq5L7N69u9zd3bONi46OzrGGVatWyTAMPfLII/Lx8TFdZ5kyZfTAAw/kOA5A0cTy5wCKhIYNG9q/CBuGoR07duiNN97QokWLtG7dOr399tv6xz/+ccv2d6OL0CtWrKhmzZopPj5eS5cuVa9evSRJO3bs0K5duxQcHKzWrVvneV8DBgzQ999/r/nz56tnz5729qxQlnVd1vXmzp2rESNG6NKlS7nOm3Xt0q3SpEkTVa5cWZJ0+vRp/fe//9WFCxc0ePBgValSJcdFDKZMmaJXXnlF165du2V1HjlyRNKf1zzdaEGRrDqzxMbGavfu3Vq9erVWr14tLy8vRUREqHnz5urdu/cNF/3ITYUKFW64bfv27Tp+/LhD+7PPPqt//etfmj17tp555hlJ0u7du7Vx40YFBgbeMMT/VenSpSU5vs7rtW/f3uEGvFFRUdmuN7zZ9zNL2bJlcwxEkuTr66tz587p6tWr9ras9yO3987f319+fn5KSUnJsc6PPvpIH330kek6WVgCwF8RpAAUORaLRREREfrXv/6ly5cva/ny5Vq2bJmpIGWz2W643cvL64bbBwwYoPj4eMXFxdmDVFbw6du3r1xdXfNcy2OPPaZhw4Zp/fr1On78uEJDQ7V9+3bt3r1bISEh2ULZtm3bNGjQILm6uuq1115Thw4dVK5cOXl7e8tiseiDDz7QoEGDHL5A3wp/vY9USkqKOnfurA0bNqh79+7at2+fw32ylixZosmTJ6t48eKaNWuWWrZsqeDgYHl5eclisWjs2LGKjY01XWfWz65y5cr2hSlyU716dfufg4KC9NNPP+m7777TunXr9MMPP+jHH3/UDz/8oGnTpik2NlYvvPCCqVry4q+v7/7771fDhg21ZcsWfffdd2rWrJn9aNTTTz8tDw+PPM8dERGhTz75RNu3b5fNZpOLi/kTVW72/cxyM/u8GVl11q1b12HhlZw0atQoW9vf/Z0GUPQQpAAUaa1bt9by5ct15swZh3Z3d3ddu3ZNFy5cyPE0oN9++y1f++3atatiYmK0fv16HTt2TIGBgfZlqHM6gnQj3t7e6t69uz766CMtWLBA48aNU1xcnKQ/T3P66xfVL774QoZhaNiwYRo9enS2+Q4ePHhzL8okPz8/LV68WNWrV9dvv/2mGTNmaPz48fbtn3/+uSTplVde0dNPP33L6gwLC5P052mfWe9TXmUtg511CtjVq1cVFxenoUOHauzYserWrZsqVaqU5/kSEhJy3ZaYmChJCg0Nzbbt2WefVZ8+fTRr1izVqVNHn332mdzc3OxHqPKqffv2ev7553Xu3DmtWrXqplbuy8/7eTOyTh/Men/+6vz589mORkn/V2eTJk00a9as21YfgKKDa6QA3LXycqTi6NGjkrJ/Wc36svbLL79kG7N79+4c7zdjhre3t3r06CGbzaaPP/5Y33zzjc6ePasmTZqoatWqpufLuqZqwYIFSktLs4ey648AZfnjjz8kSeXLl8+27erVq9mWFL+dAgIC7OFp+vTpOn/+vH3bjepMTk7Wt99+m+OcWUdkcruG6aGHHpKHh4fi4+OVnJycn/Ll6empZ555Rvfee69sNpt2795tavzu3btzHLN3715t375dLi4uevDBB7Nt7969u8qWLatly5bplVde0aVLl9S5c2cFBweb2n/lypXty4WPHDkyxwDyd27l+5kXzZo1k/Rn0M7plM+PP/44x3GPPPKIJGn58uUOpwoCwM0iSAG4a7333nuKjo7O8cJxwzC0ZMkS+/9MP/744w7bo6KiJP15jU5aWpq9PTExUdHR0bfktLes8BMXF6d58+ZJMn80Kkvjxo1VrVo1HTx4UC+88ILOnj2rpk2b5nifm6xreRYsWKALFy7Y269evaohQ4bc8CjJ7TBkyBCVK1dOKSkpevPNN7PV+cEHHzgsBpKSkqLo6Ohcv/RnheLcbqobGBioYcOG6dKlS+rQoYN+/vnnbH3S0tK0fPly7d+/3942ffp0e/C+3v79++1Hx3IKfTdiGIYGDx7scPPdlJQUDR48WIZhqGvXrvYjKddzd3fX4MGDlZGRoenTp0u6+UUmZs+ercqVK+vgwYNq3LixfbGRv0pMTMx2vZZ08+/nzerWrZtCQkJ09OhRjRkzxuE02z179ujll1/OcVy9evXUtWtXHTt2TF26dMnxiNalS5f02Wef5XhzaADIpmAWCwSA2+/6ZZADAgKM1q1bG7169TLatm1rhIeH27f16dPHyMzMdBh75MgRo0SJEoYko1y5ckbXrl2NBx980PDy8jKioqLs9/nJbfnzv7bnpkaNGvY6ihUrZly4cCHHfnlZevzVV191WN593rx5OfY7d+6cfUnyUqVKGZ06dTK6du1qlClTxvDx8TGee+65HJcPvx33kcoyb948Q5Lh4+NjX6r9+p9BSEiI0bVrV6Njx46Gn5+fUbZsWft9hiZNmuQwV1pamhEcHGxIMurVq2f07dvXePLJJ43XX3/d3ufatWv2ewq5uLgY9erVM7p27Wr06NHDaNKkiVGsWDFDkrF69Wr7GD8/P0OSUb16daNz585Gr169jObNmxtubm6GJKNv3755fk+ylj/v2LGjUbFiRaNEiRJG586djS5duhglS5a038/or/c6ul5SUpJhtVrt9zfKj6SkJOOhhx6y/+6EhoYa7du3N/r06WN07drVuPfeew2LxWJIMmrXrm38/PPPDuNv5v3MWv68fPnyudaV9bvz1/tBxcfHG97e3oYko1KlSsbjjz9utGrVynB3dze6dOmS67jU1FT76/Tw8DDuu+8+o3v37sZjjz1m3HfffYaHh4chyfjll1/sY2729x7A3Y8gBeCulZqaaixbtswYNmyY0bBhQyM0NNRwd3c3vLy8jEqVKhk9e/Z0+GL3V/v27TO6dOli+Pv7G1ar1ahWrZrx8ssvG+np6X97H6m8BqnXX3/d/uX1RjeQzcuXuRMnTthvbnujUGYYf974d8iQIUalSpUMq9VqBAcHG3369DEOHjyY632YbmeQysjIsN+n6cUXX7S3JyQkGL179zbKlStnWK1Wo3z58sYzzzxjnDp1ypg0aVKOQcowDOPnn382OnbsaAQEBBguLi651r1q1SqjS5cuRkhIiOHu7m6UKFHCqFGjhvH4448bCxcuNC5dumTv++mnnxr9+/c3atWqZZQsWdJezyOPPGIsXbrUsNlseX5Prn+Pk5OTjUGDBhmhoaGGh4eHERYWZjz77LN5uvdX1j3S3n///Tzv+0bWrVtnDBgwwKhWrZrh6+truLm5Gf7+/kZERIQxaNAg49tvv832nw7XM/N+5idIGcafP+Os4Gm1Wo0aNWoYsbGxxrVr1244LjMz01i4cKHRtm1bIzAw0HB3dzdKlSpl1KpVy+jfv7+xdOlSh/tTEaQA5MZiGLd4WSYAAHDb/frrr6pevbr8/Pz0+++/O6x4CAC4/bhGCgCAQmjixIn2a6wIUQBw53FECgCAQmL58uX6+uuvtXfvXv34448KCgrSL7/8ohIlShR0aQBQ5HBECgCAQmL79u2aN2+e9u3bp6ioKP373/8mRAFAAXGqIPX999+rQ4cOCg4OlsVi0bJly/52THx8vCIiImS1WlW5cuU7cjNAAAAKwuTJk2UYhlJTU/Xtt9+qdu3aBV0SABRZThWkLl26pDp16mj27Nl56p+QkKB27dqpRYsW2rlzp4YPH66nnnpKa9euvc2VAgAAACjKnPYaKYvFoqVLl6pTp0659nnhhRe0cuVK7dmzx972+OOP6/z581qzZs0dqBIAAABAUeRW0AXkx+bNmxUVFeXQ1qZNGw0fPjzXMWlpaUpLS7M/t9ls+uOPP1SqVClZLJbbVSoAAAAAJ2cYhi5cuKDg4GC5uNz45L1CHaROnTqlwMBAh7bAwEClpqbqypUr8vLyyjYmNjZWU6ZMuVMlAgAAAChkjh07ptDQ0Bv2KdRB6maMGTNGI0eOtD9PSUlRuXLldOzYMfn6+hZgZUXXL7/8ot692+uVV9wUHu5e0OUABSIx8ZrGjcvQZ5+tUI0aNQq6HKBA8HmAoo7PgoKXmpqqsLAw+fj4/G3fQh2kgoKClJSU5NCWlJQkX1/fHI9GSZLVapXVas3W7uvrS5AqIMWLF5erq4tq1bLqnnuy/2yAoqB4cRe5utpUvHhx/i1CkcXnAYo6PgucR14u+XGqVfvMioyM1Pr16x3avv32W0VGRhZQRQAAAACKAqcKUhcvXtTOnTu1c+dOSX8ub75z504dPXpU0p+n5fXt29fe/5lnntGRI0c0evRo7d+/X++9954+//xzjRgxoiDKBwAAAFBEOFWQ+umnn1SvXj3Vq1dPkjRy5EjVq1dPEydOlCSdPHnSHqokqUKFClq5cqW+/fZb1alTR2+++aY+/PBDtWnTpkDqBwAAAFA0ONU1Us2bN9eNbmsVFxeX45gdO3bcxqoAAADgDAzDoowMH2VmesvJjgfcEjZbuoKDr8pms+nq1asFXc5dy93dXa6urvmex6mCFAAAAJCT9HR/nTzZXZcv3yMp/1+CnZFhGBo3zpBhGEpISCjocu5aFotFoaGhKl68eL7mIUgBAADAqdlsrkpIeF6urmEKDvaWh4eUh0XVCp2rVw1JNpUrV06enp4FXc5dyTAMnT59WsePH1eVKlXydWSKIAUAAACnlp4eIJuthMLCvOXtffed0pfFMGxycbHIarUSpG6jgIAAJSYm6tq1a/kKUnfvbyIAAADuEi6SLHLhmytugbzcIyov+HUEAAAAAJM4tQ8AAACF1okTyTp3LvWO7Mvf31fBwWXuyL7g/AhSAAAAKJROnEhW8+YxSklJuyP78/OzKj5+1l0VpuLi4jR8+HCdP39ekjR58mQtW7ZMO3fuLNC6CgOCFAAAAAqlc+dSlZKSJje3N+TuXuG27uvatQSlpPxD586lmgpS/fqN04IFyzVo0GOaM2eiw7ahQ1/We+8tVnR0R8XFvZKv+m5VABo1apSGDRtmf96vXz+dP39ey5Yty9e8cXFx6t+/v6Q/r1EKDAzUgw8+qDfeeEPlypXL8zzOFPQIUgAAACjU3N0ryGqtedv3k5Fxc+PCwoK0aNEavfXWaHl5/bka39WraVq4cJXKlSubr5oMw1BmZma+5rhe8eLF831/pdz4+vrqwIED9vtkDRkyRI899ph+/PHH27K/243FJgAAAIDbKCKihsLCArVkyTp725Il61SuXFnVq1fdoW96erqef/55lSlTRp6enmratKm2bt1q3x4fHy+LxaLVq1erfv36slqt+vTTTzVlyhTt2rVLFotFFotFcXFxkqQZM2aodu3aKlasmMLCwjRkyBBdvHgx11onT56sunXr2v+8YMECff311/Z54+Pj1bJlS8XExDiMO336tDw8PLR+/fpc57ZYLAoKClLZsmXVuHFjPfnkk9qyZYtSU//vGrcXXnhBVatWlbe3typWrKgJEybo2rVrkv48qpXb6zx//ryeeuopBQQEyNfXVy1bttSuXbty/6HcAgQpAAAA4DYbMKCz5s9fZn8+b95S9e/fKVu/GTNmatmyZVqwYIG2b9+uypUrq02bNvrjjz8c+r344ot69dVX9csvv6hVq1Z6/vnndc899+jkyZM6efKkevToIUlycXHRO++8o71792rBggX6z3/+o9GjR+ep5lGjRql79+56+OGH7fM2btxYTz31lBYu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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "# Load the Titanic dataset\n",
        "data = pd.read_csv('train.csv')  # 파일 경로에 맞게 변경\n",
        "\n",
        "# Function to process ticket data\n",
        "def preprocess_ticket(ticket):\n",
        "    # If the ticket contains alphabetic characters, retain only alphabetic characters\n",
        "    if any(char.isalpha() for char in ticket):\n",
        "        return ''.join([char for char in ticket if char.isalpha()])\n",
        "    # Otherwise, return the ticket as is\n",
        "    return ticket\n",
        "\n",
        "# Apply the preprocessing function to the 'Ticket' column\n",
        "data['ProcessedTicket'] = data['Ticket'].apply(preprocess_ticket)\n",
        "\n",
        "# Rename the column 'ProcessedTicket' to 'ticketnew'\n",
        "data.rename(columns={'ProcessedTicket': 'ticketnew'}, inplace=True)\n",
        "\n",
        "# Display the processed data\n",
        "print(data[['Ticket', 'ticketnew']].head())\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xK7vrCPFeTN7",
        "outputId": "f40bf8c8-8361-423d-a822-54264fede9ac"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "             Ticket ticketnew\n",
            "0         A/5 21171         A\n",
            "1          PC 17599        PC\n",
            "2  STON/O2. 3101282     STONO\n",
            "3            113803    113803\n",
            "4            373450    373450\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "# Load the Titanic dataset\n",
        "data = pd.read_csv('train.csv')  # 파일 경로에 맞게 변경\n",
        "\n",
        "# Fill missing values in 'Embarked' with the mode (most frequent value)\n",
        "most_frequent_embarked = data['Embarked'].mode()[0]  # Find the mode\n",
        "data['Embarked'].fillna(most_frequent_embarked, inplace=True)  # Fill missing values\n",
        "\n",
        "# Display the updated data\n",
        "print(f\"The most frequent value in 'Embarked' is: {most_frequent_embarked}\")\n",
        "print(data['Embarked'].value_counts())\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zaXIk_QRkaCX",
        "outputId": "9044acaa-33c4-496f-edc9-24083231677a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "The most frequent value in 'Embarked' is: S\n",
            "Embarked\n",
            "S    646\n",
            "C    168\n",
            "Q     77\n",
            "Name: count, dtype: int64\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-6-ebfac9d231ee>:8: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n",
            "The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n",
            "\n",
            "For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n",
            "\n",
            "\n",
            "  data['Embarked'].fillna(most_frequent_embarked, inplace=True)  # Fill missing values\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import re\n",
        "\n",
        "# Load the Titanic dataset\n",
        "data = pd.read_csv('train.csv')  # 파일 경로에 맞게 변경\n",
        "\n",
        "# 1. Name의 Middle Name 추출 및 non-survival count 내림차순으로 번호 부여\n",
        "def extract_middle_name(name):\n",
        "    match = re.search(r', ([^\\.]+)\\.', name)\n",
        "    return match.group(1).strip() if match else 'Unknown'\n",
        "\n",
        "data['MiddleName'] = data['Name'].apply(extract_middle_name)\n",
        "non_survival_counts = data[data['Survived'] == 0]['MiddleName'].value_counts()\n",
        "middle_name_rank = {name: rank for rank, name in enumerate(non_survival_counts.index)}\n",
        "data['MiddleNameRank'] = data['MiddleName'].map(middle_name_rank).fillna(len(middle_name_rank)).astype(int)\n",
        "\n",
        "# 2. 남성은 0, 여성은 1로 번호 부여\n",
        "data['SexEncoded'] = data['Sex'].map({'male': 0, 'female': 1})\n",
        "\n",
        "# 3. Ticket의 문자만 추출, 숫자만 있는 데이터는 그대로 유지\n",
        "def preprocess_ticket(ticket):\n",
        "    if any(char.isalpha() for char in ticket):\n",
        "        return ''.join([char for char in ticket if char.isalpha()])\n",
        "    return ticket\n",
        "\n",
        "data['ProcessedTicket'] = data['Ticket'].apply(preprocess_ticket)\n",
        "\n",
        "# 4. Embarked 결측치는 최빈값으로 채우고, 가장 많은 데이터부터 내림차순으로 번호 부여\n",
        "most_frequent_embarked = data['Embarked'].mode()[0]\n",
        "data['Embarked'].fillna(most_frequent_embarked, inplace=True)\n",
        "embarked_counts = data['Embarked'].value_counts()\n",
        "embarked_rank = {embarked: rank for rank, embarked in enumerate(embarked_counts.index)}\n",
        "data['EmbarkedRank'] = data['Embarked'].map(embarked_rank)\n",
        "\n",
        "# Display the processed data\n",
        "print(data[['Name', 'MiddleName', 'MiddleNameRank', 'Sex', 'SexEncoded',\n",
        "            'Ticket', 'ProcessedTicket', 'Embarked', 'EmbarkedRank']].head())\n",
        "\n",
        "# Save the processed data to a new CSV file\n",
        "data.to_csv('process1.csv', index=False)\n",
        "\n",
        "print(\"The processed data has been saved as 'process1.csv'.\")\n",
        "\n",
        "# Overwrite the original columns with the processed values\n",
        "data['Name'] = data['MiddleNameRank']       # Replace 'Name' with 'MiddleNameRank'\n",
        "data['Sex'] = data['SexEncoded']            # Replace 'Sex' with 'SexEncoded'\n",
        "data['Ticket'] = data['ProcessedTicket']    # Replace 'Ticket' with 'ProcessedTicket'\n",
        "data['Embarked'] = data['EmbarkedRank']     # Replace 'Embarked' with 'EmbarkedRank'\n",
        "\n",
        "# Drop the temporary processed columns\n",
        "data.drop(columns=['MiddleNameRank', 'SexEncoded', 'ProcessedTicket', 'EmbarkedRank'], inplace=True, errors='ignore')\n",
        "\n",
        "# Save the updated DataFrame to process1.csv\n",
        "data.to_csv('process1.csv', index=False)\n",
        "\n",
        "print(\"The original columns, including 'Name', have been overwritten with processed values and saved to 'process1.csv'.\")\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CdsXLeeilSkV",
        "outputId": "98fcc73c-a48e-4f89-93ca-48bde6f703cd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                                                Name MiddleName  \\\n",
            "0                            Braund, Mr. Owen Harris         Mr   \n",
            "1  Cumings, Mrs. John Bradley (Florence Briggs Th...        Mrs   \n",
            "2                             Heikkinen, Miss. Laina       Miss   \n",
            "3       Futrelle, Mrs. Jacques Heath (Lily May Peel)        Mrs   \n",
            "4                           Allen, Mr. William Henry         Mr   \n",
            "\n",
            "   MiddleNameRank     Sex  SexEncoded            Ticket ProcessedTicket  \\\n",
            "0               0    male           0         A/5 21171               A   \n",
            "1               2  female           1          PC 17599              PC   \n",
            "2               1  female           1  STON/O2. 3101282           STONO   \n",
            "3               2  female           1            113803          113803   \n",
            "4               0    male           0            373450          373450   \n",
            "\n",
            "  Embarked  EmbarkedRank  \n",
            "0        S             0  \n",
            "1        C             1  \n",
            "2        S             0  \n",
            "3        S             0  \n",
            "4        S             0  \n",
            "The processed data has been saved as 'process1.csv'.\n",
            "The original columns, including 'Name', have been overwritten with processed values and saved to 'process1.csv'.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-7-2781d5205128>:30: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n",
            "The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n",
            "\n",
            "For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n",
            "\n",
            "\n",
            "  data['Embarked'].fillna(most_frequent_embarked, inplace=True)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "## 데이터 전처리 (name, sex, ticket, cabin, embarked) 이후\n",
        "## 상관관계 - 피어슨 방식\n",
        "\n",
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Load the processed dataset\n",
        "data = pd.read_csv('process1.csv')\n",
        "\n",
        "# Convert 'Ticket' to numeric if possible, otherwise set to NaN\n",
        "data['TicketNumeric'] = pd.to_numeric(data['Ticket'], errors='coerce')\n",
        "\n",
        "# Select rows where 'TicketNumeric' is not NaN (valid numeric tickets)\n",
        "numeric_ticket_data = data.dropna(subset=['TicketNumeric'])\n",
        "\n",
        "# Select all numeric columns for correlation calculation, including 'TicketNumeric'\n",
        "numeric_columns = numeric_ticket_data.select_dtypes(include=['number'])\n",
        "\n",
        "# Calculate the correlation matrix\n",
        "correlation_matrix = numeric_columns.corr()\n",
        "\n",
        "# Plot the heatmap\n",
        "plt.figure(figsize=(10, 8))\n",
        "sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=\".2f\", linewidths=0.5)\n",
        "plt.title('Correlation Heatmap (Including Numeric Tickets)', fontsize=16)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 786
        },
        "id": "Ne11erbxnuUd",
        "outputId": "cb9d4382-1898-49ad-e81d-eeab903b9483"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "## 데이터 전처리 (name, sex, ticket, cabin, embarked) 이후\n",
        "## 상관관계 - 스피어만 방식\n",
        "\n",
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Load the processed dataset\n",
        "data = pd.read_csv('process1.csv')\n",
        "\n",
        "# Convert 'Ticket' to numeric if possible, otherwise set to NaN\n",
        "data['TicketNumeric'] = pd.to_numeric(data['Ticket'], errors='coerce')\n",
        "\n",
        "# Select rows where 'TicketNumeric' is not NaN\n",
        "numeric_ticket_data = data.dropna(subset=['TicketNumeric'])\n",
        "\n",
        "# Select all numeric columns for correlation calculation, including 'TicketNumeric'\n",
        "numeric_columns = numeric_ticket_data.select_dtypes(include=['number'])\n",
        "\n",
        "# Calculate the correlation matrix using Spearman method\n",
        "correlation_matrix_spearman = numeric_columns.corr(method='spearman')\n",
        "\n",
        "# Plot the heatmap\n",
        "plt.figure(figsize=(10, 8))\n",
        "sns.heatmap(correlation_matrix_spearman, annot=True, cmap='coolwarm', fmt=\".2f\", linewidths=0.5)\n",
        "plt.title('Spearman Correlation Heatmap (Including Numeric Tickets)', fontsize=16)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 786
        },
        "id": "8J1H74-DpqHh",
        "outputId": "bae07501-d61b-47a7-a255-5789c30a8f69"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "# 가족 생존률 계산 함수\n",
        "def find_family_groups_with_sibsp_parch(data):\n",
        "    # Step 1: 가족 크기 계산\n",
        "    data['Count'] = data['SibSp'] + data['Parch'] + 1\n",
        "\n",
        "    # Step 2: 티켓, Fare, Embarked를 기반으로 가족 그룹 판별\n",
        "    data['Family_Group'] = data.groupby(['Ticket', 'Fare', 'Embarked']).ngroup()\n",
        "\n",
        "    # Step 3: 가족별로 Count를 분배\n",
        "    family_counts = data.groupby('Family_Group')['Count'].transform('sum')\n",
        "    data['Count'] = family_counts - 1  # 가족 크기에서 본인 제외\n",
        "\n",
        "    # Step 4: 가족 내 여성 비율 계산\n",
        "    family_female_ratio = data.groupby('Family_Group')['Sex'].transform('mean')\n",
        "\n",
        "    # Step 5: 가족 생존률 설정\n",
        "    # 학습 데이터에서는 Survived를 사용\n",
        "    if 'Survived' in data.columns:\n",
        "        family_survival_rate = data.groupby('Family_Group')['Survived'].transform('mean')\n",
        "        data['Family_Survival_Rate'] = family_survival_rate.fillna(0.5)\n",
        "    else:\n",
        "        # 테스트 데이터에서는 여성 비율 기반 생존률 적용\n",
        "        data['Family_Survival_Rate'] = 0.5 + 0.5 * family_female_ratio\n",
        "\n",
        "    return data\n",
        "\n",
        "def calculate_survival_score(data):\n",
        "    # Define correlation coefficients for high-correlation columns\n",
        "    correlation_coefficients = {\n",
        "        'Pclass': -0.33,\n",
        "        'Name': 0.33,\n",
        "        'Sex': 0.54,\n",
        "        'Parch': 0.12,\n",
        "        'Fare': 0.29,\n",
        "        'TicketNumeric': -0.12  # Numerical Ticket 값만 사용\n",
        "    }\n",
        "\n",
        "    # Ensure Ticket is converted to numeric for Survival Score\n",
        "    if 'Ticket' in data.columns:\n",
        "        data['TicketNumeric'] = pd.to_numeric(data['Ticket'], errors='coerce').fillna(0)\n",
        "\n",
        "    # 스케일링: Normalize (0~1) or Standardize (Z-score)\n",
        "    if 'Fare' in data.columns:\n",
        "        data['Fare'] = (data['Fare'] - data['Fare'].mean()) / data['Fare'].std()\n",
        "    if 'TicketNumeric' in data.columns:\n",
        "        data['TicketNumeric'] = (data['TicketNumeric'] - data['TicketNumeric'].mean()) / data['TicketNumeric'].std()\n",
        "\n",
        "    # Initialize Survival Score with 0\n",
        "    data['SurvivalScore'] = 0\n",
        "\n",
        "    # Calculate Survival Score by summing (column value * correlation coefficient)\n",
        "    for column, coefficient in correlation_coefficients.items():\n",
        "        if column in data.columns and pd.api.types.is_numeric_dtype(data[column]):\n",
        "            data['SurvivalScore'] += data[column] * coefficient\n",
        "\n",
        "    # Debug: Print the contribution of each column to Survival Score\n",
        "    for column, coefficient in correlation_coefficients.items():\n",
        "        if column in data.columns:\n",
        "            data[f'{column}_Score'] = data[column] * coefficient\n",
        "\n",
        "    return data\n",
        "\n",
        "# Survival Score 업데이트 함수 (가족 생존률 적용)\n",
        "def update_survival_score_with_family(data):\n",
        "    # 가족 생존률을 Survival Score에 추가\n",
        "    data['SurvivalScore'] += data['Family_Survival_Rate']\n",
        "    return data\n",
        "\n",
        "# 메인 실행 함수\n",
        "def main():\n",
        "    # 데이터 로드\n",
        "    data = pd.read_csv('process1.csv')  # Input file\n",
        "\n",
        "    # 가족 그룹 및 생존률 계산 (모든 Ticket 데이터 사용)\n",
        "    data = find_family_groups_with_sibsp_parch(data)\n",
        "\n",
        "    # 생존 점수 계산 (Numerical Ticket만 사용)\n",
        "    data = calculate_survival_score(data)\n",
        "\n",
        "    # 가족 생존률 적용\n",
        "    data = update_survival_score_with_family(data)\n",
        "\n",
        "    # 결과 저장\n",
        "    data.to_csv('process1_result.csv', index=False)  # Output file\n",
        "\n",
        "    # 주요 결과 확인\n",
        "    print(data[['Survived', 'Family_Survival_Rate', 'SurvivalScore']].head())\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6J6oGwnFMU0w",
        "outputId": "737b1e48-d750-4c1e-b9fb-60a28b91201c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   Survived  Family_Survival_Rate  SurvivalScore\n",
            "0         0              0.000000      -1.080688\n",
            "1         1              1.000000       2.152997\n",
            "2         1              0.538462       0.331713\n",
            "3         1              0.500000       1.514508\n",
            "4         0              0.000000      -1.182259\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# 데이터 로드\n",
        "data = pd.read_csv('process1_result.csv')  # 파일 경로 수정 필요\n",
        "\n",
        "# Survival Score 분포 시각화\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.hist(data['SurvivalScore'], bins=50, alpha=0.75, edgecolor='black')\n",
        "plt.title('Distribution of Survival Score', fontsize=16)\n",
        "plt.xlabel('Survival Score', fontsize=12)\n",
        "plt.ylabel('Frequency', fontsize=12)\n",
        "plt.grid(axis='y', linestyle='--', alpha=0.7)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 570
        },
        "id": "ipcJbeARad7L",
        "outputId": "9ee9697c-1d85-4401-8996-1faeeb38ea49"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# 데이터 로드\n",
        "data = pd.read_csv('process1_result.csv')  # 파일 경로 수정 필요\n",
        "\n",
        "# Survival Score의 중앙값 계산\n",
        "median_value = data['SurvivalScore'].median()\n",
        "\n",
        "# Survival Score 분포 시각화\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.hist(data['SurvivalScore'], bins=50, alpha=0.75, edgecolor='black', label='SurvivalScore')\n",
        "plt.axvline(median_value, color='red', linestyle='--', linewidth=2, label=f'Median: {median_value:.2f}')\n",
        "plt.title('Distribution of Survival Score with Median Threshold', fontsize=16)\n",
        "plt.xlabel('Survival Score', fontsize=12)\n",
        "plt.ylabel('Frequency', fontsize=12)\n",
        "plt.grid(axis='y', linestyle='--', alpha=0.7)\n",
        "plt.legend(fontsize=12)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 570
        },
        "id": "9GW58Zklaxzg",
        "outputId": "041165bc-a280-477e-c804-3d03393b3a11"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.metrics import accuracy_score\n",
        "\n",
        "# 데이터 로드\n",
        "data = pd.read_csv('process1_result.csv')  # 파일 경로 수정 필요\n",
        "\n",
        "# Survival Score의 중앙값 계산\n",
        "median_value = data['SurvivalScore'].median()\n",
        "\n",
        "# 예측 결과 추가\n",
        "data['PredictedSurvival'] = (data['SurvivalScore'] > median_value).astype(int)\n",
        "\n",
        "# 정확도 계산 (Survived 열이 있는 경우에만)\n",
        "if 'Survived' in data.columns:\n",
        "    accuracy = accuracy_score(data['Survived'], data['PredictedSurvival'])\n",
        "    print(f\"Accuracy of Prediction: {accuracy * 100:.5f}%\")\n",
        "\n",
        "# Survival Score 분포 시각화\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.hist(data['SurvivalScore'], bins=50, alpha=0.75, edgecolor='black', label='SurvivalScore')\n",
        "plt.axvline(median_value, color='red', linestyle='--', linewidth=2, label=f'Median: {median_value:.2f}')\n",
        "plt.title('Distribution of Survival Score with Median Threshold', fontsize=16)\n",
        "plt.xlabel('Survival Score', fontsize=12)\n",
        "plt.ylabel('Frequency', fontsize=12)\n",
        "plt.grid(axis='y', linestyle='--', alpha=0.7)\n",
        "plt.legend(fontsize=12)\n",
        "plt.show()\n",
        "\n",
        "\n",
        "# 주요 결과 확인\n",
        "print(data[['Survived', 'PredictedSurvival']].head())\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 699
        },
        "id": "wgk4ihKWbP23",
        "outputId": "e2db601c-b7a0-4f9c-c893-1ede1f305ed3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Accuracy of Prediction: 83.05275%\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   Survived  PredictedSurvival\n",
            "0         0                  0\n",
            "1         1                  1\n",
            "2         1                  1\n",
            "3         1                  1\n",
            "4         0                  0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "# Ticket 전처리 함수\n",
        "def preprocess_ticket(ticket):\n",
        "    if any(char.isalpha() for char in ticket):\n",
        "        return ''.join([char for char in ticket if char.isalpha()])\n",
        "    return ticket\n",
        "\n",
        "# 데이터 전처리 함수\n",
        "def preprocess_data(data):\n",
        "    # Ticket 데이터 전처리\n",
        "    data['Ticket'] = data['Ticket'].apply(preprocess_ticket)\n",
        "\n",
        "    # 나머지 기본 전처리\n",
        "    data['Age'] = data['Age'].fillna(data['Age'].median())\n",
        "    data['Embarked'] = data['Embarked'].fillna(data['Embarked'].mode()[0])\n",
        "    data['Sex'] = data['Sex'].map({'male': 0, 'female': 1}).astype(float)\n",
        "\n",
        "    # Name 열: Middle Name 추출 및 랭크 부여\n",
        "    data['MiddleName'] = data['Name'].str.extract(r', ([^\\.]+)\\.', expand=False).fillna('Unknown')\n",
        "    middle_name_counts = data['MiddleName'].value_counts()\n",
        "    middle_name_rank = {name: rank for rank, name in enumerate(middle_name_counts.index)}\n",
        "    data['Name'] = data['MiddleName'].map(middle_name_rank).fillna(len(middle_name_rank)).astype(int)\n",
        "\n",
        "    return data\n",
        "\n",
        "# 가족 생존률 계산 함수\n",
        "def find_family_groups_with_sibsp_parch(data):\n",
        "    # Step 1: 가족 크기 계산\n",
        "    data['Count'] = data['SibSp'] + data['Parch'] + 1\n",
        "\n",
        "    # Step 2: 티켓, Fare, Embarked를 기반으로 가족 그룹 판별\n",
        "    data['Family_Group'] = data.groupby(['Ticket', 'Fare', 'Embarked']).ngroup()\n",
        "\n",
        "    # Step 3: 가족별로 Count를 분배\n",
        "    family_counts = data.groupby('Family_Group')['Count'].transform('sum')\n",
        "    data['Count'] = family_counts - 1  # 가족 크기에서 본인 제외\n",
        "\n",
        "    # Step 4: 가족 내 여성 비율 계산\n",
        "    family_female_ratio = data.groupby('Family_Group')['Sex'].transform('mean')\n",
        "\n",
        "    # Step 5: 가족 생존률 설정\n",
        "    if 'Survived' in data.columns:\n",
        "        family_survival_rate = data.groupby('Family_Group')['Survived'].transform('mean')\n",
        "        data['Family_Survival_Rate'] = family_survival_rate.fillna(0.5)\n",
        "    else:\n",
        "        data['Family_Survival_Rate'] = 0.5 + 0.5 * family_female_ratio\n",
        "\n",
        "    return data\n",
        "\n",
        "# Survival Score 계산 함수\n",
        "def calculate_survival_score(data):\n",
        "    correlation_coefficients = {\n",
        "        'Pclass': -0.33,\n",
        "        'Name': 0.33,\n",
        "        'Sex': 0.54,\n",
        "        'Parch': 0.12,\n",
        "        'Fare': 0.29,\n",
        "        'TicketNumeric': -0.12  # Numerical Ticket 값만 사용\n",
        "    }\n",
        "\n",
        "    if 'Ticket' in data.columns:\n",
        "        data['TicketNumeric'] = pd.to_numeric(data['Ticket'], errors='coerce').fillna(0)\n",
        "\n",
        "    if 'Fare' in data.columns:\n",
        "        data['Fare'] = (data['Fare'] - data['Fare'].mean()) / data['Fare'].std()\n",
        "    if 'TicketNumeric' in data.columns:\n",
        "        data['TicketNumeric'] = (data['TicketNumeric'] - data['TicketNumeric'].mean()) / data['TicketNumeric'].std()\n",
        "\n",
        "    data['SurvivalScore'] = 0\n",
        "    for column, coefficient in correlation_coefficients.items():\n",
        "        if column in data.columns and pd.api.types.is_numeric_dtype(data[column]):\n",
        "            data['SurvivalScore'] += data[column] * coefficient\n",
        "\n",
        "    return data\n",
        "\n",
        "# Survival Score 업데이트 함수\n",
        "def update_survival_score_with_family(data):\n",
        "    data['SurvivalScore'] += data['Family_Survival_Rate']\n",
        "    return data\n",
        "def main():\n",
        "    # 테스트 데이터 로드\n",
        "    data = pd.read_csv('test2.csv')  # 파일 경로 수정 필요\n",
        "\n",
        "    # 데이터 전처리\n",
        "    data = preprocess_data(data)\n",
        "\n",
        "    # 가족 그룹 및 생존률 계산\n",
        "    data = find_family_groups_with_sibsp_parch(data)\n",
        "\n",
        "    # 생존 점수 계산\n",
        "    data = calculate_survival_score(data)\n",
        "\n",
        "    # 가족 생존률 적용\n",
        "    data = update_survival_score_with_family(data)\n",
        "\n",
        "    # Median 기준으로 생존 여부 예측\n",
        "    median_value = data['SurvivalScore'].median()\n",
        "    data['Survived'] = (data['SurvivalScore'] > median_value).astype(int)  # 타이틀 이름 수정\n",
        "\n",
        "    # PassengerId와 Survived 열만 남김\n",
        "    submission = data[['PassengerId', 'Survived']]\n",
        "\n",
        "    # 결과 저장 (캐글 제출 형식)\n",
        "    submission.to_csv('.csv', index=False)\n",
        "\n",
        "    # 주요 결과 확인\n",
        "    print(submission.head())\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "K-wXZzP6cF3k",
        "outputId": "130b7e57-5fd5-468e-98ca-1fc2fcb78008"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   PassengerId  Survived\n",
            "0          892         0\n",
            "1          893         1\n",
            "2          894         0\n",
            "3          895         0\n",
            "4          896         0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "## test2에 대해, process2를 만드는 코드\n",
        "\n",
        "\n",
        "\n",
        "import pandas as pd\n",
        "import re\n",
        "\n",
        "# Load the Titanic test dataset\n",
        "test_data = pd.read_csv('test2.csv')  # 파일 경로에 맞게 변경\n",
        "\n",
        "# 1. Name의 Middle Name 추출 및 non-survival count 내림차순으로 번호 부여 (훈련 데이터 기반)\n",
        "def extract_middle_name(name):\n",
        "    match = re.search(r', ([^\\.]+)\\.', name)\n",
        "    return match.group(1).strip() if match else 'Unknown'\n",
        "\n",
        "test_data['MiddleName'] = test_data['Name'].apply(extract_middle_name)\n",
        "test_data['MiddleNameRank'] = test_data['MiddleName'].map(middle_name_rank).fillna(len(middle_name_rank)).astype(int)\n",
        "\n",
        "# 2. 남성은 0, 여성은 1로 번호 부여\n",
        "test_data['SexEncoded'] = test_data['Sex'].map({'male': 0, 'female': 1})\n",
        "\n",
        "# 3. Ticket의 문자만 추출, 숫자만 있는 데이터는 그대로 유지\n",
        "def preprocess_ticket(ticket):\n",
        "    if any(char.isalpha() for char in ticket):\n",
        "        return ''.join([char for char in ticket if char.isalpha()])\n",
        "    return ticket\n",
        "\n",
        "test_data['ProcessedTicket'] = test_data['Ticket'].apply(preprocess_ticket)\n",
        "\n",
        "# 4. Embarked 결측치는 최빈값으로 채우고, 가장 많은 데이터부터 내림차순으로 번호 부여 (훈련 데이터 기반)\n",
        "test_data['Embarked'].fillna(most_frequent_embarked, inplace=True)\n",
        "test_data['EmbarkedRank'] = test_data['Embarked'].map(embarked_rank)\n",
        "\n",
        "# Display the processed test data\n",
        "print(test_data[['PassengerId', 'Name', 'MiddleName', 'MiddleNameRank', 'Sex', 'SexEncoded',\n",
        "                 'Ticket', 'ProcessedTicket', 'Embarked', 'EmbarkedRank']].head())\n",
        "\n",
        "# Save the processed test data to a new CSV file\n",
        "test_data.to_csv('process2.csv', index=False)\n",
        "\n",
        "print(\"The processed test data has been saved as 'process2.csv'.\")\n",
        "\n",
        "# Overwrite the original columns with the processed values\n",
        "test_data['Name'] = test_data['MiddleNameRank']       # Replace 'Name' with 'MiddleNameRank'\n",
        "test_data['Sex'] = test_data['SexEncoded']            # Replace 'Sex' with 'SexEncoded'\n",
        "test_data['Ticket'] = test_data['ProcessedTicket']    # Replace 'Ticket' with 'ProcessedTicket'\n",
        "test_data['Embarked'] = test_data['EmbarkedRank']     # Replace 'Embarked' with 'EmbarkedRank'\n",
        "\n",
        "# Drop the temporary processed columns\n",
        "test_data.drop(columns=['MiddleNameRank', 'SexEncoded', 'ProcessedTicket', 'EmbarkedRank'], inplace=True, errors='ignore')\n",
        "\n",
        "# Save the updated test DataFrame to process2.csv\n",
        "test_data.to_csv('process2.csv', index=False)\n",
        "\n",
        "print(\"The original columns, including 'Name', have been overwritten with processed values and saved to 'process2.csv'.\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_CUPvkzUh4Fh",
        "outputId": "8bd5ade6-d993-4af0-b523-01e8e5eb7179"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   PassengerId                                          Name MiddleName  \\\n",
            "0          892                              Kelly, Mr. James         Mr   \n",
            "1          893              Wilkes, Mrs. James (Ellen Needs)        Mrs   \n",
            "2          894                     Myles, Mr. Thomas Francis         Mr   \n",
            "3          895                              Wirz, Mr. Albert         Mr   \n",
            "4          896  Hirvonen, Mrs. Alexander (Helga E Lindqvist)        Mrs   \n",
            "\n",
            "   MiddleNameRank     Sex  SexEncoded   Ticket ProcessedTicket Embarked  \\\n",
            "0               0    male           0   330911          330911        Q   \n",
            "1               2  female           1   363272          363272        S   \n",
            "2               0    male           0   240276          240276        Q   \n",
            "3               0    male           0   315154          315154        S   \n",
            "4               2  female           1  3101298         3101298        S   \n",
            "\n",
            "   EmbarkedRank  \n",
            "0             2  \n",
            "1             0  \n",
            "2             2  \n",
            "3             0  \n",
            "4             0  \n",
            "The processed test data has been saved as 'process2.csv'.\n",
            "The original columns, including 'Name', have been overwritten with processed values and saved to 'process2.csv'.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-15-2f3f79c7c3c1>:31: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n",
            "The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n",
            "\n",
            "For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n",
            "\n",
            "\n",
            "  test_data['Embarked'].fillna(most_frequent_embarked, inplace=True)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#process 전처리 이후 process2. 생존점수 코드\n",
        "\n",
        "import pandas as pd\n",
        "\n",
        "# 가족 생존률 계산 함수\n",
        "def find_family_groups_with_sibsp_parch(data):\n",
        "    # Step 1: 가족 크기 계산\n",
        "    data['Count'] = data['SibSp'] + data['Parch'] + 1\n",
        "\n",
        "    # Step 2: 티켓, Fare, Embarked를 기반으로 가족 그룹 판별\n",
        "    data['Family_Group'] = data.groupby(['Ticket', 'Fare', 'Embarked']).ngroup()\n",
        "\n",
        "    # Step 3: 가족별로 Count를 분배\n",
        "    family_counts = data.groupby('Family_Group')['Count'].transform('sum')\n",
        "    data['Count'] = family_counts - 1  # 가족 크기에서 본인 제외\n",
        "\n",
        "    # Step 4: 가족 내 여성 비율 계산\n",
        "    family_female_ratio = data.groupby('Family_Group')['Sex'].transform('mean')\n",
        "    data['Family_Survival_Rate'] = 0.5 + 0.5 * family_female_ratio\n",
        "\n",
        "    return data\n",
        "\n",
        "# Survival Score 계산 함수\n",
        "def calculate_survival_score(data):\n",
        "    # Define correlation coefficients for high-correlation columns\n",
        "    correlation_coefficients = {\n",
        "        'Pclass': -0.33,\n",
        "        'Name': 0.33,\n",
        "        'Sex': 0.54,\n",
        "        'Parch': 0.12,\n",
        "        'Fare': 0.29,\n",
        "        'TicketNumeric': -0.12  # Numerical Ticket 값만 사용\n",
        "    }\n",
        "\n",
        "    # Ensure Ticket is converted to numeric for Survival Score\n",
        "    if 'Ticket' in data.columns:\n",
        "        data['TicketNumeric'] = pd.to_numeric(data['Ticket'], errors='coerce').fillna(0)\n",
        "\n",
        "    # 스케일링: Normalize (0~1) or Standardize (Z-score)\n",
        "    if 'Fare' in data.columns:\n",
        "        data['Fare'] = (data['Fare'] - data['Fare'].mean()) / data['Fare'].std()\n",
        "    if 'TicketNumeric' in data.columns:\n",
        "        data['TicketNumeric'] = (data['TicketNumeric'] - data['TicketNumeric'].mean()) / data['TicketNumeric'].std()\n",
        "\n",
        "    # Initialize Survival Score with 0\n",
        "    data['SurvivalScore'] = 0\n",
        "\n",
        "    # Calculate Survival Score by summing (column value * correlation coefficient)\n",
        "    for column, coefficient in correlation_coefficients.items():\n",
        "        if column in data.columns and pd.api.types.is_numeric_dtype(data[column]):\n",
        "            data['SurvivalScore'] += data[column] * coefficient\n",
        "\n",
        "    return data\n",
        "\n",
        "# Survival Score 업데이트 함수 (가족 생존률 적용)\n",
        "def update_survival_score_with_family(data):\n",
        "    # 가족 생존률을 Survival Score에 추가\n",
        "    data['SurvivalScore'] += data['Family_Survival_Rate']\n",
        "    return data\n",
        "\n",
        "# 메인 실행 함수\n",
        "def main():\n",
        "    # 데이터 로드\n",
        "    data = pd.read_csv('process2.csv')  # Input file\n",
        "\n",
        "    # 성별 숫자로 변환 (0: 남성, 1: 여성)\n",
        "    data['Sex'] = data['Sex'].map({0: 0, 1: 1})  # 이미 인코딩된 데이터로 가정\n",
        "\n",
        "    # 가족 그룹 및 생존률 계산 (모든 Ticket 데이터 사용)\n",
        "    data = find_family_groups_with_sibsp_parch(data)\n",
        "\n",
        "    # 생존 점수 계산 (Numerical Ticket만 사용)\n",
        "    data = calculate_survival_score(data)\n",
        "\n",
        "    # 가족 생존률 적용\n",
        "    data = update_survival_score_with_family(data)\n",
        "\n",
        "    # 결과 저장\n",
        "    data.to_csv('process2_result.csv', index=False)  # Output file\n",
        "\n",
        "    # 주요 결과 확인\n",
        "    print(data[['PassengerId', 'Family_Survival_Rate', 'SurvivalScore']].head())\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HyhLGSA2nvt5",
        "outputId": "68c80278-e374-4066-db95-35f72cea57dd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   PassengerId  Family_Survival_Rate  SurvivalScore\n",
            "0          892                   0.5      -0.697441\n",
            "1          893                   1.0       0.986385\n",
            "2          894                   0.5      -0.324549\n",
            "3          895                   0.5      -0.687337\n",
            "4          896                   1.0       0.129272\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "## process2의 정확도를 구하기 위한 코드\n",
        "\n",
        "import pandas as pd\n",
        "\n",
        "# 가족 생존률 계산 함수\n",
        "def find_family_groups_with_sibsp_parch(data):\n",
        "    # Step 1: 가족 크기 계산\n",
        "    data['Count'] = data['SibSp'] + data['Parch'] + 1\n",
        "\n",
        "    # Step 2: 티켓, Fare, Embarked를 기반으로 가족 그룹 판별\n",
        "    data['Family_Group'] = data.groupby(['Ticket', 'Fare', 'Embarked']).ngroup()\n",
        "\n",
        "    # Step 3: 가족별로 Count를 분배\n",
        "    family_counts = data.groupby('Family_Group')['Count'].transform('sum')\n",
        "    data['Count'] = family_counts - 1  # 가족 크기에서 본인 제외\n",
        "\n",
        "    # Step 4: 가족 내 여성 비율 계산\n",
        "    family_female_ratio = data.groupby('Family_Group')['Sex'].transform('mean')\n",
        "    data['Family_Survival_Rate'] = 0.5 + 0.5 * family_female_ratio\n",
        "\n",
        "    return data\n",
        "\n",
        "# Survival Score 계산 함수\n",
        "def calculate_survival_score(data):\n",
        "    # Define correlation coefficients for high-correlation columns\n",
        "    correlation_coefficients = {\n",
        "        'Pclass': -0.33,\n",
        "        'Name': 0.33,\n",
        "        'Sex': 0.54,\n",
        "        'Parch': 0.12,\n",
        "        'Fare': 0.29,\n",
        "        'TicketNumeric': -0.12  # Numerical Ticket 값만 사용\n",
        "    }\n",
        "\n",
        "    # Ensure Ticket is converted to numeric for Survival Score\n",
        "    if 'Ticket' in data.columns:\n",
        "        data['TicketNumeric'] = pd.to_numeric(data['Ticket'], errors='coerce').fillna(0)\n",
        "\n",
        "    # 스케일링: Normalize (0~1) or Standardize (Z-score)\n",
        "    if 'Fare' in data.columns:\n",
        "        data['Fare'] = (data['Fare'] - data['Fare'].mean()) / data['Fare'].std()\n",
        "    if 'TicketNumeric' in data.columns:\n",
        "        data['TicketNumeric'] = (data['TicketNumeric'] - data['TicketNumeric'].mean()) / data['TicketNumeric'].std()\n",
        "\n",
        "    # Initialize Survival Score with 0\n",
        "    data['SurvivalScore'] = 0\n",
        "\n",
        "    # Calculate Survival Score by summing (column value * correlation coefficient)\n",
        "    for column, coefficient in correlation_coefficients.items():\n",
        "        if column in data.columns and pd.api.types.is_numeric_dtype(data[column]):\n",
        "            data['SurvivalScore'] += data[column] * coefficient\n",
        "\n",
        "    return data\n",
        "\n",
        "# Survival Score 업데이트 함수 (가족 생존률 적용)\n",
        "def update_survival_score_with_family(data):\n",
        "    # 가족 생존률을 Survival Score에 추가\n",
        "    data['SurvivalScore'] += data['Family_Survival_Rate']\n",
        "    return data\n",
        "\n",
        "# 메인 실행 함수\n",
        "def main():\n",
        "    # 데이터 로드\n",
        "    data = pd.read_csv('process2.csv')  # Input file\n",
        "\n",
        "    # 성별 숫자로 변환 (0: 남성, 1: 여성)\n",
        "    data['Sex'] = data['Sex'].map({0: 0, 1: 1})  # 이미 인코딩된 데이터로 가정\n",
        "\n",
        "    # 가족 그룹 및 생존률 계산 (모든 Ticket 데이터 사용)\n",
        "    data = find_family_groups_with_sibsp_parch(data)\n",
        "\n",
        "    # 생존 점수 계산 (Numerical Ticket만 사용)\n",
        "    data = calculate_survival_score(data)\n",
        "\n",
        "    # 가족 생존률 적용\n",
        "    data = update_survival_score_with_family(data)\n",
        "\n",
        "    # SurvivalScore의 median 값을 기준으로 생존 여부 판단\n",
        "    median_value = data['SurvivalScore'].median()\n",
        "    data['Survived'] = (data['SurvivalScore'] > median_value).astype(int)\n",
        "\n",
        "    # test2_result.csv 파일에 PassengerId와 Survived만 저장\n",
        "    result = data[['PassengerId', 'Survived']]\n",
        "    output_file_path = 'test2_result.csv'  # Output file path\n",
        "    result.to_csv(output_file_path, index=False)\n",
        "\n",
        "    print(f\"{output_file_path} has been created with PassengerId and Survived columns.\")\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "glpUBvt8o04D",
        "outputId": "e5061f62-0bbc-4676-9241-deaec8297430"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "test2_result.csv has been created with PassengerId and Survived columns.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "## process2 피어슨 > 스피어만\n",
        "import pandas as pd\n",
        "\n",
        "# 가족 생존률 계산 함수\n",
        "def find_family_groups_with_sibsp_parch(data):\n",
        "    # Step 1: 가족 크기 계산\n",
        "    data['Count'] = data['SibSp'] + data['Parch'] + 1\n",
        "\n",
        "    # Step 2: 티켓, Fare, Embarked를 기반으로 가족 그룹 판별\n",
        "    data['Family_Group'] = data.groupby(['Ticket', 'Fare', 'Embarked']).ngroup()\n",
        "\n",
        "    # Step 3: 가족별로 Count를 분배\n",
        "    family_counts = data.groupby('Family_Group')['Count'].transform('sum')\n",
        "    data['Count'] = family_counts - 1  # 가족 크기에서 본인 제외\n",
        "\n",
        "    # Step 4: 가족 내 여성 비율 계산\n",
        "    family_female_ratio = data.groupby('Family_Group')['Sex'].transform('mean')\n",
        "    data['Family_Survival_Rate'] = 0.5 + 0.5 * family_female_ratio\n",
        "\n",
        "    return data\n",
        "\n",
        "def calculate_survival_score(data):\n",
        "    # Define Spearman correlation coefficients\n",
        "    correlation_coefficients = {\n",
        "        #'Pclass': -0.33,\n",
        "        #'Name': 0.51,\n",
        "        'Sex': 0.54,\n",
        "        'SibSp': 0.12,\n",
        "        'Parch': 0.18,\n",
        "        #'Fare': 0.34,\n",
        "        'Embarked': 0.10,\n",
        "        'TicketNumeric': -0.24\n",
        "    }\n",
        "\n",
        "    # Rank Transformation for Spearman correlation\n",
        "    for column in correlation_coefficients.keys():\n",
        "        if column in data.columns and pd.api.types.is_numeric_dtype(data[column]):\n",
        "            data[column] = data[column].rank()\n",
        "\n",
        "    # Initialize Survival Score with 0\n",
        "    data['SurvivalScore'] = 0\n",
        "\n",
        "    # Calculate Survival Score by summing (column value * correlation coefficient)\n",
        "    for column, coefficient in correlation_coefficients.items():\n",
        "        if column in data.columns and pd.api.types.is_numeric_dtype(data[column]):\n",
        "            data['SurvivalScore'] += data[column] * coefficient\n",
        "\n",
        "    return data\n",
        "\n",
        "\n",
        "# Survival Score 업데이트 함수 (가족 생존률 적용)\n",
        "def update_survival_score_with_family(data):\n",
        "    # 가족 생존률을 Survival Score에 추가\n",
        "    data['SurvivalScore'] += data['Family_Survival_Rate']\n",
        "    return data\n",
        "\n",
        "# 메인 실행 함수\n",
        "def main():\n",
        "    # 데이터 로드\n",
        "    data = pd.read_csv('process1.csv')  # Input file\n",
        "\n",
        "    # 성별 숫자로 변환 (0: 남성, 1: 여성)\n",
        "    data['Sex'] = data['Sex'].map({0: 0, 1: 1})  # 이미 인코딩된 데이터로 가정\n",
        "\n",
        "    # 가족 그룹 및 생존률 계산 (모든 Ticket 데이터 사용)\n",
        "    data = find_family_groups_with_sibsp_parch(data)\n",
        "\n",
        "    # 생존 점수 계산 (Numerical Ticket만 사용)\n",
        "    data = calculate_survival_score(data)\n",
        "\n",
        "    # 가족 생존률 적용\n",
        "    data = update_survival_score_with_family(data)\n",
        "\n",
        "    # SurvivalScore의 median 값을 기준으로 생존 여부 판단\n",
        "    median_value = data['SurvivalScore'].median()\n",
        "    data['Survived'] = (data['SurvivalScore'] > median_value).astype(int)\n",
        "\n",
        "    # test2_result.csv 파일에 PassengerId와 Survived만 저장\n",
        "    result = data[['PassengerId', 'Survived']]\n",
        "    result.to_csv('test1_result.csv', index=False)  # Output file\n",
        "\n",
        "    print(\"test2_result.csv has been created with PassengerId and Survived columns.\")\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JZeOFRxVqW9P",
        "outputId": "d7b01baa-d1c4-4e97-c88e-d4af754d0a1a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "test2_result.csv has been created with PassengerId and Survived columns.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "from sklearn.metrics import accuracy_score\n",
        "\n",
        "# 가족 생존률 계산 함수\n",
        "def find_family_groups_with_sibsp_parch(data):\n",
        "    # Step 1: 가족 크기 계산\n",
        "    data['Count'] = data['SibSp'] + data['Parch'] + 1\n",
        "\n",
        "    # Step 2: 티켓, Fare, Embarked를 기반으로 가족 그룹 판별\n",
        "    data['Family_Group'] = data.groupby(['Ticket', 'Fare', 'Embarked']).ngroup()\n",
        "\n",
        "    # Step 3: 가족별로 Count를 분배\n",
        "    family_counts = data.groupby('Family_Group')['Count'].transform('sum')\n",
        "    data['Count'] = family_counts - 1  # 가족 크기에서 본인 제외\n",
        "\n",
        "    # Step 4: 가족 내 여성 비율 계산\n",
        "    family_female_ratio = data.groupby('Family_Group')['Sex'].transform('mean')\n",
        "    data['Family_Survival_Rate'] = 0.5 + 0.5 * family_female_ratio\n",
        "\n",
        "    return data\n",
        "\n",
        "def calculate_survival_score(data):\n",
        "    # Define Spearman correlation coefficients\n",
        "    correlation_coefficients = {\n",
        "        #'Pclass': -0.33,\n",
        "        #'Name': 0.51,\n",
        "        'Sex': 0.54,\n",
        "        'SibSp': 0.12,\n",
        "        'Parch': 0.18,\n",
        "        #'Fare': 0.34,\n",
        "        'Embarked': 0.10,\n",
        "        'TicketNumeric': -0.24\n",
        "    }\n",
        "\n",
        "    # Rank Transformation for Spearman correlation\n",
        "    for column in correlation_coefficients.keys():\n",
        "        if column in data.columns and pd.api.types.is_numeric_dtype(data[column]):\n",
        "            data[column] = data[column].rank()\n",
        "\n",
        "    # Initialize Survival Score with 0\n",
        "    data['SurvivalScore'] = 0\n",
        "\n",
        "    # Calculate Survival Score by summing (column value * correlation coefficient)\n",
        "    for column, coefficient in correlation_coefficients.items():\n",
        "        if column in data.columns and pd.api.types.is_numeric_dtype(data[column]):\n",
        "            data['SurvivalScore'] += data[column] * coefficient\n",
        "\n",
        "    return data\n",
        "\n",
        "\n",
        "# Survival Score 업데이트 함수 (가족 생존률 적용)\n",
        "def update_survival_score_with_family(data):\n",
        "    # 가족 생존률을 Survival Score에 추가\n",
        "    data['SurvivalScore'] += data['Family_Survival_Rate']\n",
        "    return data\n",
        "\n",
        "# 메인 실행 함수\n",
        "def main():\n",
        "    # 데이터 로드\n",
        "    data = pd.read_csv('process1_result.csv')  # Input file\n",
        "\n",
        "    # 성별 숫자로 변환 (0: 남성, 1: 여성)\n",
        "    data['Sex'] = data['Sex'].map({0: 0, 1: 1})  # 이미 인코딩된 데이터로 가정\n",
        "\n",
        "    # 가족 그룹 및 생존률 계산 (모든 Ticket 데이터 사용)\n",
        "    data = find_family_groups_with_sibsp_parch(data)\n",
        "\n",
        "    # 생존 점수 계산 (Numerical Ticket만 사용)\n",
        "    data = calculate_survival_score(data)\n",
        "\n",
        "    # 가족 생존률 적용\n",
        "    data = update_survival_score_with_family(data)\n",
        "\n",
        "    # SurvivalScore의 median 값을 기준으로 생존 여부 판단\n",
        "    median_value = data['SurvivalScore'].median()\n",
        "    data['PredictedSurvival'] = (data['SurvivalScore'] > median_value).astype(int)\n",
        "\n",
        "    # 정확도 계산\n",
        "    if 'Survived' in data.columns:\n",
        "        accuracy = accuracy_score(data['Survived'], data['PredictedSurvival'])\n",
        "        print(f\"Accuracy of Survival Prediction: {accuracy * 100:.2f}%\")\n",
        "    else:\n",
        "        print(\"No 'Survived' column found in the data.\")\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gWxp69SYuZew",
        "outputId": "c9d48152-8e91-4c3a-a102-c1aa92c646b6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Accuracy of Survival Prediction: 72.50%\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# 데이터\n",
        "results = {\n",
        "    'Test Set': ['Test1', 'Test2'],\n",
        "    'Previous Result': [0.77666, 0.67703],\n",
        "    'Current Result': [0.67003, 0.62918],\n",
        "    'Improved Result': [0.80584, 0.79425],\n",
        "    'New Result': [0.7295, 0.72488]  # 새로운 결과 추가\n",
        "}\n",
        "\n",
        "# 그래프 그리기\n",
        "x = range(len(results['Test Set']))\n",
        "width = 0.2  # 막대 폭\n",
        "\n",
        "# 막대 그래프\n",
        "plt.bar([i - 1.5 * width for i in x], results['Previous Result'], width=width, label='Previous Result', alpha=0.8, color='yellow', edgecolor='black', linewidth=1.5)\n",
        "plt.bar([i - 0.5 * width for i in x], results['Current Result'], width=width, label='Current Result', alpha=0.8, color='blue', edgecolor='black', linewidth=1.5)\n",
        "plt.bar([i + 0.5 * width for i in x], results['Improved Result'], width=width, label='Improved Result', alpha=0.8, color='green', edgecolor='black', linewidth=1.5)\n",
        "plt.bar([i + 1.5 * width for i in x], results['New Result'], width=width, label='New Result', alpha=0.8, color='red', edgecolor='black', linewidth=1.5)\n",
        "\n",
        "# x축 설정\n",
        "plt.xticks(x, results['Test Set'])\n",
        "\n",
        "# 그래프 꾸미기\n",
        "plt.ylabel('Accuracy')\n",
        "plt.title('Comparison of Results')\n",
        "plt.legend()\n",
        "\n",
        "# 그래프 표시\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "FkTdTphkvCYT",
        "outputId": "7888f870-2a26-4495-a53c-7c7d37ffa3af",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 452
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **2025begin, use titanic sample, change the model(knn, logistic regression, dicision tree)**\n"
      ],
      "metadata": {
        "id": "4s-q6WivMglt"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "#from sklearn.preprocessing import StandardScaler\n",
        "\n",
        "# 1. process1.csv 파일 로드\n",
        "data = pd.read_csv('process1.csv')\n",
        "\n",
        "# 2. 특징과 레이블 분리 (예: 'Survived'가 타겟 변수, 나머지 피처 사용)\n",
        "features = ['Pclass', 'Sex', 'Age', 'Fare', 'Embarked']\n",
        "X = data[features].values\n",
        "y = data['Survived'].values\n",
        "\n",
        "# (선택) 3. 스케일링: KNN은 거리 기반이므로 표준화 권장\n",
        "#scaler = StandardScaler()\n",
        "#X = scaler.fit_transform(X)\n",
        "\n",
        "# 4. KNN의 핵심 함수들 직접 구현\n",
        "def euclidean_distance(x1, x2):\n",
        "    return np.sqrt(np.sum((x1 - x2) ** 2))\n",
        "\n",
        "def majority_vote(neighbors):\n",
        "    values, counts = np.unique(neighbors, return_counts=True)\n",
        "    return values[np.argmax(counts)]\n",
        "\n",
        "def knn_predict(train_X, train_y, test_sample, k):\n",
        "    distances = []\n",
        "    for i in range(train_X.shape[0]):\n",
        "        distance = euclidean_distance(test_sample, train_X[i])\n",
        "        distances.append((distance, train_y[i]))\n",
        "    # 거리에 따라 정렬 후, k개의 이웃 선택\n",
        "    distances.sort(key=lambda x: x[0])\n",
        "    k_neighbors = [label for (dist, label) in distances[:k]]\n",
        "    return majority_vote(k_neighbors)\n",
        "\n",
        "# 5. 5-fold 교차검증으로 후보 k 값 평가하는 함수\n",
        "def cross_validate_knn(X, y, candidate_k_list, num_folds=5):\n",
        "    n_samples = X.shape[0]\n",
        "    indices = np.arange(n_samples)\n",
        "    np.random.shuffle(indices)  # 무작위로 섞기\n",
        "    fold_size = n_samples // num_folds\n",
        "    k_accuracy = {}\n",
        "\n",
        "    for k in candidate_k_list:\n",
        "        fold_accuracies = []\n",
        "        for fold in range(num_folds):\n",
        "            start = fold * fold_size\n",
        "            # 마지막 fold에는 남은 모든 데이터를 포함\n",
        "            end = n_samples if fold == num_folds - 1 else (fold + 1) * fold_size\n",
        "\n",
        "            # 현재 fold를 검증셋, 나머지를 학습셋으로 설정\n",
        "            val_indices = indices[start:end]\n",
        "            train_indices = np.concatenate((indices[:start], indices[end:]))\n",
        "\n",
        "            X_train, y_train = X[train_indices], y[train_indices]\n",
        "            X_val, y_val = X[val_indices], y[val_indices]\n",
        "\n",
        "            correct = 0\n",
        "            for i in range(X_val.shape[0]):\n",
        "                pred = knn_predict(X_train, y_train, X_val[i], k)\n",
        "                if pred == y_val[i]:\n",
        "                    correct += 1\n",
        "            accuracy = correct / X_val.shape[0]\n",
        "            fold_accuracies.append(accuracy)\n",
        "        k_accuracy[k] = np.mean(fold_accuracies)\n",
        "    return k_accuracy\n",
        "\n",
        "# 6. 후보 k 값 설정 및 교차검증 수행\n",
        "candidate_k = [3, 5, 7, 9, 11]\n",
        "accuracy_results = cross_validate_knn(X, y, candidate_k, num_folds=5)\n",
        "\n",
        "print(\"각 후보 k 값에 대한 평균 정확도:\")\n",
        "for k, acc in accuracy_results.items():\n",
        "    print(f\"k = {k}: Accuracy = {acc:.4f}\")\n",
        "\n",
        "# 7. 최적의 k 값 선택\n",
        "optimal_k = max(accuracy_results, key=accuracy_results.get)\n",
        "print(\"최적의 k 값:\", optimal_k)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 373
        },
        "id": "iQp3Gy4bMbkh",
        "outputId": "3c401dc6-3515-40dd-9219-ae44d3359da4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "KeyboardInterrupt",
          "evalue": "",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-21-58efa51de96f>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     67\u001b[0m \u001b[0;31m# 6. 후보 k 값 설정 및 교차검증 수행\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     68\u001b[0m \u001b[0mcandidate_k\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m5\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m7\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m9\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m11\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 69\u001b[0;31m \u001b[0maccuracy_results\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcross_validate_knn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcandidate_k\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnum_folds\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     70\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     71\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"각 후보 k 값에 대한 평균 정확도:\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-21-58efa51de96f>\u001b[0m in \u001b[0;36mcross_validate_knn\u001b[0;34m(X, y, candidate_k_list, num_folds)\u001b[0m\n\u001b[1;32m     57\u001b[0m             \u001b[0mcorrect\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     58\u001b[0m             \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_val\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 59\u001b[0;31m                 \u001b[0mpred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mknn_predict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX_val\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mk\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     60\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mpred\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0my_val\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     61\u001b[0m                     \u001b[0mcorrect\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-21-58efa51de96f>\u001b[0m in \u001b[0;36mknn_predict\u001b[0;34m(train_X, train_y, test_sample, k)\u001b[0m\n\u001b[1;32m     26\u001b[0m     \u001b[0mdistances\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     27\u001b[0m     \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrain_X\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 28\u001b[0;31m         \u001b[0mdistance\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0meuclidean_distance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtest_sample\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrain_X\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     29\u001b[0m         \u001b[0mdistances\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdistance\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrain_y\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     30\u001b[0m     \u001b[0;31m# 거리에 따라 정렬 후, k개의 이웃 선택\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-21-58efa51de96f>\u001b[0m in \u001b[0;36meuclidean_distance\u001b[0;34m(x1, x2)\u001b[0m\n\u001b[1;32m     17\u001b[0m \u001b[0;31m# 4. KNN의 핵심 함수들 직접 구현\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     18\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0meuclidean_distance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 19\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msqrt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx1\u001b[0m \u001b[0;34m-\u001b[0m \u001b[0mx2\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m**\u001b[0m \u001b[0;36m2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     20\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     21\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mmajority_vote\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mneighbors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/numpy/core/fromnumeric.py\u001b[0m in \u001b[0;36m_sum_dispatcher\u001b[0;34m(a, axis, dtype, out, keepdims, initial, where)\u001b[0m\n\u001b[1;32m   2170\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2171\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2172\u001b[0;31m def _sum_dispatcher(a, axis=None, dtype=None, out=None, keepdims=None,\n\u001b[0m\u001b[1;32m   2173\u001b[0m                     initial=None, where=None):\n\u001b[1;32m   2174\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mout\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "#from sklearn.preprocessing import StandardScaler\n",
        "\n",
        "# 1. process1.csv 파일 로드\n",
        "data = pd.read_csv('process1.csv')\n",
        "\n",
        "# 2. 특징과 레이블 분리 (예시: 'Survived'가 타겟 변수, 나머지 피처 사용)\n",
        "features = ['Pclass', 'Sex', 'Age', 'Fare', 'Embarked']\n",
        "X = data[features].values\n",
        "y = data['Survived'].values\n",
        "\n",
        "# 3. 스케일링: 거리 기반 KNN에서 피처 스케일 조정은 중요\n",
        "#scaler = StandardScaler()\n",
        "#X = scaler.fit_transform(X)\n",
        "\n",
        "# 4. KNN의 핵심 함수들 직접 구현하기\n",
        "\n",
        "def euclidean_distance(x1, x2):\n",
        "    return np.sqrt(np.sum((x1 - x2) ** 2))\n",
        "\n",
        "def majority_vote(neighbors):\n",
        "    # neighbors: k개의 이웃의 레이블 리스트\n",
        "    values, counts = np.unique(neighbors, return_counts=True)\n",
        "    return values[np.argmax(counts)]\n",
        "\n",
        "def knn_predict(train_X, train_y, test_sample, k):\n",
        "    distances = []\n",
        "    for i in range(train_X.shape[0]):\n",
        "        distance = euclidean_distance(test_sample, train_X[i])\n",
        "        distances.append((distance, train_y[i]))\n",
        "    # 거리에 따라 정렬 후, k개의 이웃 선택\n",
        "    distances.sort(key=lambda x: x[0])\n",
        "    k_neighbors = [label for (dist, label) in distances[:k]]\n",
        "    return majority_vote(k_neighbors)\n",
        "\n",
        "# 5. 5-fold 교차검증을 통해 1~30까지의 k값 평가\n",
        "\n",
        "def cross_validate_knn(X, y, candidate_k_list, num_folds=5):\n",
        "    n_samples = X.shape[0]\n",
        "    indices = np.arange(n_samples)\n",
        "    np.random.shuffle(indices)  # 데이터 무작위 섞기\n",
        "    fold_size = n_samples // num_folds\n",
        "    k_accuracy = {}\n",
        "\n",
        "    for k in candidate_k_list:\n",
        "        fold_accuracies = []\n",
        "        print(f\"\\n--- k = {k} ---\")\n",
        "        for fold in range(num_folds):\n",
        "            start = fold * fold_size\n",
        "            # 마지막 fold에는 남은 모든 데이터를 포함\n",
        "            end = n_samples if fold == num_folds - 1 else (fold + 1) * fold_size\n",
        "\n",
        "            # 현재 fold를 검증셋, 나머지를 학습셋으로 사용\n",
        "            val_indices = indices[start:end]\n",
        "            train_indices = np.concatenate((indices[:start], indices[end:]))\n",
        "\n",
        "            X_train, y_train = X[train_indices], y[train_indices]\n",
        "            X_val, y_val = X[val_indices], y[val_indices]\n",
        "\n",
        "            correct = 0\n",
        "            for i in range(X_val.shape[0]):\n",
        "                pred = knn_predict(X_train, y_train, X_val[i], k)\n",
        "                if pred == y_val[i]:\n",
        "                    correct += 1\n",
        "            accuracy = correct / X_val.shape[0]\n",
        "            fold_accuracies.append(accuracy)\n",
        "            print(f\"Fold {fold+1} accuracy: {accuracy:.4f}\")\n",
        "        avg_acc = np.mean(fold_accuracies)\n",
        "        k_accuracy[k] = avg_acc\n",
        "        print(f\"Average accuracy for k = {k}: {avg_acc:.4f}\")\n",
        "    return k_accuracy\n",
        "\n",
        "# 후보 k 값: 1부터 30까지\n",
        "candidate_k = list(range(1, 31))\n",
        "accuracy_results = cross_validate_knn(X, y, candidate_k, num_folds=5)\n",
        "\n",
        "print(\"\\n각 후보 k 값에 대한 평균 정확도:\")\n",
        "for k, acc in accuracy_results.items():\n",
        "    print(f\"k = {k}: Average Accuracy = {acc:.4f}\")\n",
        "\n",
        "# 6. 최적의 k 값 선택\n",
        "optimal_k = max(accuracy_results, key=accuracy_results.get)\n",
        "print(f\"\\noptimal k = {optimal_k}로, accuracy : {accuracy_results[optimal_k]:.4f}입니다.\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 465
        },
        "id": "5-zPuJKlNcqN",
        "outputId": "6c377a37-7305-4332-f512-5f666994ec42"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "--- k = 1 ---\n",
            "Fold 1 accuracy: 0.5899\n",
            "Fold 2 accuracy: 0.6573\n",
            "Fold 3 accuracy: 0.6348\n"
          ]
        },
        {
          "output_type": "error",
          "ename": "KeyboardInterrupt",
          "evalue": "",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-22-3d116dcc66c6>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     74\u001b[0m \u001b[0;31m# 후보 k 값: 1부터 30까지\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     75\u001b[0m \u001b[0mcandidate_k\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m31\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 76\u001b[0;31m \u001b[0maccuracy_results\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcross_validate_knn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcandidate_k\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnum_folds\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     77\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     78\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"\\n각 후보 k 값에 대한 평균 정확도:\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-22-3d116dcc66c6>\u001b[0m in \u001b[0;36mcross_validate_knn\u001b[0;34m(X, y, candidate_k_list, num_folds)\u001b[0m\n\u001b[1;32m     61\u001b[0m             \u001b[0mcorrect\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     62\u001b[0m             \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_val\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 63\u001b[0;31m                 \u001b[0mpred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mknn_predict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX_val\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mk\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     64\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mpred\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0my_val\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     65\u001b[0m                     \u001b[0mcorrect\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-22-3d116dcc66c6>\u001b[0m in \u001b[0;36mknn_predict\u001b[0;34m(train_X, train_y, test_sample, k)\u001b[0m\n\u001b[1;32m     28\u001b[0m     \u001b[0mdistances\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     29\u001b[0m     \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrain_X\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 30\u001b[0;31m         \u001b[0mdistance\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0meuclidean_distance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtest_sample\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrain_X\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     31\u001b[0m         \u001b[0mdistances\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdistance\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrain_y\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     32\u001b[0m     \u001b[0;31m# 거리에 따라 정렬 후, k개의 이웃 선택\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-22-3d116dcc66c6>\u001b[0m in \u001b[0;36meuclidean_distance\u001b[0;34m(x1, x2)\u001b[0m\n\u001b[1;32m     18\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     19\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0meuclidean_distance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 20\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msqrt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx1\u001b[0m \u001b[0;34m-\u001b[0m \u001b[0mx2\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m**\u001b[0m \u001b[0;36m2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     21\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     22\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mmajority_vote\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mneighbors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/numpy/core/fromnumeric.py\u001b[0m in \u001b[0;36m_sum_dispatcher\u001b[0;34m(a, axis, dtype, out, keepdims, initial, where)\u001b[0m\n\u001b[1;32m   2170\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2171\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2172\u001b[0;31m def _sum_dispatcher(a, axis=None, dtype=None, out=None, keepdims=None,\n\u001b[0m\u001b[1;32m   2173\u001b[0m                     initial=None, where=None):\n\u001b[1;32m   2174\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mout\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "\n",
        "# -------------------------------\n",
        "# 1. 데이터 준비: process1.csv 파일 로드 및 전처리\n",
        "# -------------------------------\n",
        "data = pd.read_csv('process1.csv')\n",
        "\n",
        "# 예시로 'Survived'를 타겟, ['Pclass', 'Sex', 'Age', 'Fare', 'Embarked'] 피처 사용\n",
        "features = ['Pclass', 'Sex', 'Age', 'Fare', 'Embarked']\n",
        "X = data[features].values\n",
        "y = data['Survived'].values\n",
        "\n",
        "# 거리 기반 모델이므로 스케일링 적용 (표준화)\n",
        "scaler = StandardScaler()\n",
        "X = scaler.fit_transform(X)\n",
        "\n",
        "# -------------------------------\n",
        "# 2. KNN 알고리즘 직접 구현 함수\n",
        "# -------------------------------\n",
        "def euclidean_distance(x1, x2):\n",
        "    return np.sqrt(np.sum((x1 - x2) ** 2))\n",
        "\n",
        "def majority_vote(neighbors):\n",
        "    values, counts = np.unique(neighbors, return_counts=True)\n",
        "    return values[np.argmax(counts)]\n",
        "\n",
        "def knn_predict(train_X, train_y, test_sample, k):\n",
        "    distances = []\n",
        "    for i in range(train_X.shape[0]):\n",
        "        distance = euclidean_distance(test_sample, train_X[i])\n",
        "        distances.append((distance, train_y[i]))\n",
        "    distances.sort(key=lambda x: x[0])\n",
        "    k_neighbors = [label for (dist, label) in distances[:k]]\n",
        "    return majority_vote(k_neighbors)\n",
        "\n",
        "# -------------------------------\n",
        "# 3. 5-fold (혹은 그 외) 교차검증 평가 함수:\n",
        "#    여기서는 k 값은 고정(k=12)로 사용\n",
        "# -------------------------------\n",
        "def cross_validate_knn_fixed_k(X, y, k, num_folds):\n",
        "    n_samples = X.shape[0]\n",
        "    indices = np.arange(n_samples)\n",
        "    np.random.shuffle(indices)  # 무작위 섞기\n",
        "    fold_size = n_samples // num_folds\n",
        "    fold_accuracies = []\n",
        "\n",
        "    # num_folds가 1이면 전체 데이터를 이용해 학습 정확도를 계산\n",
        "    if num_folds == 1:\n",
        "        correct = 0\n",
        "        for i in range(n_samples):\n",
        "            pred = knn_predict(X, y, X[i], k)\n",
        "            if pred == y[i]:\n",
        "                correct += 1\n",
        "        accuracy = correct / n_samples\n",
        "        fold_accuracies.append(accuracy)\n",
        "        print(f\"[1-fold] (학습 데이터 자체 평가) Accuracy: {accuracy:.4f}\")\n",
        "        return accuracy  # 단일 값 반환\n",
        "\n",
        "    # num_folds >= 2인 경우 교차검증 진행\n",
        "    for fold in range(num_folds):\n",
        "        start = fold * fold_size\n",
        "        end = n_samples if fold == num_folds - 1 else (fold + 1) * fold_size\n",
        "\n",
        "        val_indices = indices[start:end]\n",
        "        train_indices = np.concatenate((indices[:start], indices[end:]))\n",
        "\n",
        "        X_train, y_train = X[train_indices], y[train_indices]\n",
        "        X_val, y_val = X[val_indices], y[val_indices]\n",
        "\n",
        "        correct = 0\n",
        "        for i in range(X_val.shape[0]):\n",
        "            pred = knn_predict(X_train, y_train, X_val[i], k)\n",
        "            if pred == y_val[i]:\n",
        "                correct += 1\n",
        "        accuracy = correct / X_val.shape[0]\n",
        "        fold_accuracies.append(accuracy)\n",
        "        print(f\"[{num_folds}-fold] Fold {fold+1} accuracy: {accuracy:.4f}\")\n",
        "\n",
        "    avg_accuracy = np.mean(fold_accuracies)\n",
        "    print(f\"[{num_folds}-fold] Average Accuracy: {avg_accuracy:.4f}\\n\")\n",
        "    return avg_accuracy\n",
        "\n",
        "# -------------------------------\n",
        "# 4. k는 고정 (k=12) 하고, num_folds를 1부터 10까지 변화시켜서 평가\n",
        "# -------------------------------\n",
        "k_fixed = 12\n",
        "fold_results = {}\n",
        "\n",
        "for num_folds in range(1, 11):\n",
        "    print(f\"===========================\")\n",
        "    print(f\"교차검증 fold 개수: {num_folds}\")\n",
        "    avg_acc = cross_validate_knn_fixed_k(X, y, k_fixed, num_folds)\n",
        "    fold_results[num_folds] = avg_acc\n",
        "\n",
        "print(\"========================================\")\n",
        "print(\"fold 개수에 따른 평균 정확도:\")\n",
        "for folds, acc in fold_results.items():\n",
        "    print(f\"{folds}-fold: Average Accuracy = {acc:.4f}\")\n"
      ],
      "metadata": {
        "id": "z0WRYF4oRNEd",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 483
        },
        "outputId": "92340d37-d203-4292-95d9-a26f26d1bcc9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "===========================\n",
            "교차검증 fold 개수: 1\n",
            "[1-fold] (학습 데이터 자체 평가) Accuracy: 0.6487\n",
            "===========================\n",
            "교차검증 fold 개수: 2\n",
            "[2-fold] Fold 1 accuracy: 0.7596\n"
          ]
        },
        {
          "output_type": "error",
          "ename": "KeyboardInterrupt",
          "evalue": "",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-23-21d6ae896649>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     92\u001b[0m     \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"===========================\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     93\u001b[0m     \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"교차검증 fold 개수: {num_folds}\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 94\u001b[0;31m     \u001b[0mavg_acc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcross_validate_knn_fixed_k\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mk_fixed\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnum_folds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     95\u001b[0m     \u001b[0mfold_results\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mnum_folds\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mavg_acc\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     96\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-23-21d6ae896649>\u001b[0m in \u001b[0;36mcross_validate_knn_fixed_k\u001b[0;34m(X, y, k, num_folds)\u001b[0m\n\u001b[1;32m     72\u001b[0m         \u001b[0mcorrect\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     73\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_val\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 74\u001b[0;31m             \u001b[0mpred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mknn_predict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX_val\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mk\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     75\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mpred\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0my_val\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     76\u001b[0m                 \u001b[0mcorrect\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-23-21d6ae896649>\u001b[0m in \u001b[0;36mknn_predict\u001b[0;34m(train_X, train_y, test_sample, k)\u001b[0m\n\u001b[1;32m     30\u001b[0m     \u001b[0mdistances\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     31\u001b[0m     \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrain_X\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 32\u001b[0;31m         \u001b[0mdistance\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0meuclidean_distance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtest_sample\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrain_X\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     33\u001b[0m         \u001b[0mdistances\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdistance\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrain_y\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     34\u001b[0m     \u001b[0mdistances\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msort\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mlambda\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-23-21d6ae896649>\u001b[0m in \u001b[0;36meuclidean_distance\u001b[0;34m(x1, x2)\u001b[0m\n\u001b[1;32m     21\u001b[0m \u001b[0;31m# -------------------------------\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     22\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0meuclidean_distance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 23\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msqrt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx1\u001b[0m \u001b[0;34m-\u001b[0m \u001b[0mx2\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m**\u001b[0m \u001b[0;36m2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     24\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     25\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mmajority_vote\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mneighbors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "#from sklearn.preprocessing import StandardScaler\n",
        "\n",
        "# 1. 데이터 로드\n",
        "# process1.csv는 라벨이 포함된 학습 데이터, process2.csv는 PassengerId 등과 함께 전처리된 테스트 데이터라고 가정합니다.\n",
        "train_df = pd.read_csv('process1.csv')\n",
        "test_df  = pd.read_csv('process2.csv')\n",
        "\n",
        "# 2. 필요한 열 선택 (전처리된 상태에서 사용했던 피처 그대로 활용)\n",
        "# 여기서는 예시로 'Pclass', 'Sex', 'Age', 'Fare', 'Embarked'를 사용한다고 가정함\n",
        "features = ['Pclass', 'Sex', 'Age', 'Fare', 'Embarked']\n",
        "\n",
        "X_train = train_df[features].values       # process1의 학습 피처\n",
        "y_train = train_df['Survived'].values       # 학습 데이터의 라벨\n",
        "\n",
        "X_test = test_df[features].values         # process2의 테스트 피처\n",
        "passenger_ids = test_df['PassengerId'].values  # 테스트 데이터의 고유 ID\n",
        "\n",
        "# 3. 스케일링\n",
        "# 전처리된 데이터이더라도, KNN은 거리 계산에 민감하므로 학습 데이터의 분포에 맞춰 StandardScaler를 적용합니다.\n",
        "scaler = StandardScaler()\n",
        "X_train_scaled = scaler.fit_transform(X_train)\n",
        "X_test_scaled  = scaler.transform(X_test)\n",
        "\n",
        "# 4. KNN 알고리즘 직접 구현 (고정 k = 12)\n",
        "def euclidean_distance(x1, x2):\n",
        "    \"\"\"두 벡터 간 유클리드 거리를 계산\"\"\"\n",
        "    return np.sqrt(np.sum((x1 - x2) ** 2))\n",
        "\n",
        "def majority_vote(neighbors):\n",
        "    \"\"\"k개의 이웃의 라벨에 대해 다수결 투표로 예측 클래스 결정\"\"\"\n",
        "    values, counts = np.unique(neighbors, return_counts=True)\n",
        "    return values[np.argmax(counts)]\n",
        "\n",
        "def knn_predict(train_X, train_y, test_sample, k):\n",
        "    \"\"\"학습 데이터(train_X, train_y)를 기준으로 테스트 샘플(test_sample)에 대해 k-NN 예측\"\"\"\n",
        "    distances = []\n",
        "    for i in range(train_X.shape[0]):\n",
        "        d = euclidean_distance(test_sample, train_X[i])\n",
        "        distances.append((d, train_y[i]))\n",
        "    # 거리가 가까운 순으로 정렬 후 k개 선택\n",
        "    distances.sort(key=lambda x: x[0])\n",
        "    k_neighbors = [label for (d, label) in distances[:k]]\n",
        "    return majority_vote(k_neighbors)\n",
        "\n",
        "# 5. 테스트 데이터에 대해 예측 수행 (k=12)\n",
        "k_fixed = 12\n",
        "predictions = []\n",
        "for i in range(X_test_scaled.shape[0]):\n",
        "    pred = knn_predict(X_train_scaled, y_train, X_test_scaled[i], k_fixed)\n",
        "    predictions.append(pred)\n",
        "\n",
        "# 6. 결과를 PassengerId, Survived 형식의 CSV 파일로 저장 (Kaggle 제출용)\n",
        "result_df = pd.DataFrame({\n",
        "    'PassengerId': passenger_ids,\n",
        "    'Survived': predictions\n",
        "})\n",
        "\n",
        "result_df.to_csv('test2_result.csv', index=False)\n",
        "print(\"test2_result.csv 파일이 성공적으로 저장되었습니다.\")\n"
      ],
      "metadata": {
        "id": "9xO09LKsclCm",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d33861da-ac15-4684-d0ff-a518ee97d2ec"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "test2_result.csv 파일이 성공적으로 저장되었습니다.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "\n",
        "# --- 1. 데이터 로드 ---\n",
        "# process1.csv: 학습 데이터 (Survived 포함)\n",
        "# process2.csv: 테스트 데이터 (PassengerId 포함, Survived 없음)\n",
        "train_df = pd.read_csv('process1.csv')\n",
        "test_df  = pd.read_csv('process2.csv')\n",
        "\n",
        "# --- 2. Age 결측치 채우기 (그룹별 중앙값 사용) ---\n",
        "# train 데이터: Pclass와 Sex별 중앙값으로 Age 결측치 채움\n",
        "train_df['Age'] = train_df.groupby(['Pclass','Sex'])['Age'].transform(lambda x: x.fillna(x.median()))\n",
        "# 혹시 그룹별 채움 후에도 남아있다면 전체 중앙값으로 채우기\n",
        "train_df['Age'].fillna(train_df['Age'].median(), inplace=True)\n",
        "\n",
        "# test 데이터에도 동일하게 적용 (test 데이터에는 라벨이 없지만, Age 전처리는 동일하게 진행)\n",
        "test_df['Age'] = test_df.groupby(['Pclass','Sex'])['Age'].transform(lambda x: x.fillna(x.median()))\n",
        "test_df['Age'].fillna(test_df['Age'].median(), inplace=True)\n",
        "\n",
        "# --- 3. 전처리: 선택했던 피처들을 그대로 사용 (전처리 로직 변경 없이) ---\n",
        "features = ['Pclass', 'Sex', 'Age', 'Fare', 'Embarked']\n",
        "\n",
        "X_train = train_df[features].values\n",
        "y_train = train_df['Survived'].values\n",
        "\n",
        "X_test = test_df[features].values\n",
        "passenger_ids = test_df['PassengerId'].values\n",
        "\n",
        "# --- 4. 스케일링 ---\n",
        "# KNN이나 로지스틱 회귀와 같이 수치 연산 기반 모델은 피처 스케일링이 중요함.\n",
        "scaler = StandardScaler()\n",
        "X_train_scaled = scaler.fit_transform(X_train)\n",
        "X_test_scaled  = scaler.transform(X_test)\n",
        "\n",
        "# --- 5. 로지스틱 회귀 모델 구현 및 학습 ---\n",
        "def sigmoid(z):\n",
        "    return 1 / (1 + np.exp(-z))\n",
        "\n",
        "m, n = X_train_scaled.shape\n",
        "w = np.zeros(n)   # 가중치 벡터 초기화\n",
        "b = 0             # bias 초기화\n",
        "\n",
        "learning_rate = 0.001\n",
        "num_iterations = 100000\n",
        "cost_list = []  # 학습 과정에서의 손실 값을 저장할 리스트\n",
        "\n",
        "for i in range(num_iterations):\n",
        "    # 선형 결합 및 시그모이드 함수 적용\n",
        "    z = np.dot(X_train_scaled, w) + b\n",
        "    h = sigmoid(z)\n",
        "\n",
        "    # 크로스 엔트로피 손실 계산 (수치적 안정성을 위해 epsilon 추가)\n",
        "    epsilon = 1e-15\n",
        "    cost = -np.mean(y_train * np.log(h + epsilon) + (1 - y_train) * np.log(1 - h + epsilon))\n",
        "    cost_list.append(cost)\n",
        "\n",
        "    # gradient(기울기) 계산\n",
        "    dw = np.dot(X_train_scaled.T, (h - y_train)) / m\n",
        "    db = np.sum(h - y_train) / m\n",
        "\n",
        "    # 파라미터 업데이트: 이전 값에서 학습률과 기울기를 곱한 값을 뺌\n",
        "    w -= learning_rate * dw\n",
        "    b -= learning_rate * db\n",
        "\n",
        "    # 1000회마다 cost 출력 (진행 상황 확인)\n",
        "    if i % 1000 == 0:\n",
        "        print(f\"Iteration {i}, cost: {cost:.4f}\")\n",
        "\n",
        "# --- 6. 학습 과정 시각화 ---\n",
        "plt.figure(figsize=(10, 6))\n",
        "# 10회마다 마커를 찍어서 변화를 보기 쉽게 함\n",
        "plt.plot(range(0, num_iterations, 10), cost_list[::10], 'o-', markersize=2, label=\"Cost\")\n",
        "plt.xlabel('Iteration')\n",
        "plt.ylabel('Cost')\n",
        "plt.title('Cost Function over Iterations (Logistic Regression)')\n",
        "plt.grid(True)\n",
        "plt.legend()\n",
        "plt.show()\n",
        "\n",
        "# --- 7. 테스트 데이터에 대해 예측 ---\n",
        "z_test = np.dot(X_test_scaled, w) + b\n",
        "h_test = sigmoid(z_test)\n",
        "predictions = (h_test >= 0.5).astype(int)\n",
        "\n",
        "# --- 8. 결과 파일 저장 (PassengerId, Survived) ---\n",
        "submission_df = pd.DataFrame({\n",
        "    'PassengerId': passenger_ids,\n",
        "    'Survived': predictions\n",
        "})\n",
        "submission_df.to_csv('logistic_result_group_median.csv', index=False)\n",
        "print(\"logistic_result_group_median.csv 파일이 성공적으로 저장되었습니다.\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "tvkOaTf6huRa",
        "outputId": "7b1268e7-2479-4945-9e9f-c31f10d9351d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-25-0bbe81a35ec0>:16: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n",
            "The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n",
            "\n",
            "For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n",
            "\n",
            "\n",
            "  train_df['Age'].fillna(train_df['Age'].median(), inplace=True)\n",
            "<ipython-input-25-0bbe81a35ec0>:20: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n",
            "The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n",
            "\n",
            "For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n",
            "\n",
            "\n",
            "  test_df['Age'].fillna(test_df['Age'].median(), inplace=True)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Iteration 0, cost: 0.6931\n",
            "Iteration 1000, cost: 0.5983\n",
            "Iteration 2000, cost: 0.5468\n",
            "Iteration 3000, cost: 0.5167\n",
            "Iteration 4000, cost: 0.4979\n",
            "Iteration 5000, cost: 0.4855\n",
            "Iteration 6000, cost: 0.4771\n",
            "Iteration 7000, cost: 0.4711\n",
            "Iteration 8000, cost: 0.4667\n",
            "Iteration 9000, cost: 0.4634\n",
            "Iteration 10000, cost: 0.4609\n",
            "Iteration 11000, cost: 0.4589\n",
            "Iteration 12000, cost: 0.4573\n",
            "Iteration 13000, cost: 0.4560\n",
            "Iteration 14000, cost: 0.4549\n",
            "Iteration 15000, cost: 0.4540\n",
            "Iteration 16000, cost: 0.4533\n",
            "Iteration 17000, cost: 0.4526\n",
            "Iteration 18000, cost: 0.4520\n",
            "Iteration 19000, cost: 0.4515\n",
            "Iteration 20000, cost: 0.4511\n",
            "Iteration 21000, cost: 0.4507\n",
            "Iteration 22000, cost: 0.4504\n",
            "Iteration 23000, cost: 0.4501\n",
            "Iteration 24000, cost: 0.4498\n",
            "Iteration 25000, cost: 0.4496\n",
            "Iteration 26000, cost: 0.4494\n",
            "Iteration 27000, cost: 0.4492\n",
            "Iteration 28000, cost: 0.4490\n",
            "Iteration 29000, cost: 0.4488\n",
            "Iteration 30000, cost: 0.4487\n",
            "Iteration 31000, cost: 0.4486\n",
            "Iteration 32000, cost: 0.4484\n",
            "Iteration 33000, cost: 0.4483\n",
            "Iteration 34000, cost: 0.4483\n",
            "Iteration 35000, cost: 0.4482\n",
            "Iteration 36000, cost: 0.4481\n",
            "Iteration 37000, cost: 0.4480\n",
            "Iteration 38000, cost: 0.4480\n",
            "Iteration 39000, cost: 0.4479\n",
            "Iteration 40000, cost: 0.4479\n",
            "Iteration 41000, cost: 0.4478\n",
            "Iteration 42000, cost: 0.4478\n",
            "Iteration 43000, cost: 0.4477\n",
            "Iteration 44000, cost: 0.4477\n",
            "Iteration 45000, cost: 0.4477\n",
            "Iteration 46000, cost: 0.4476\n",
            "Iteration 47000, cost: 0.4476\n",
            "Iteration 48000, cost: 0.4476\n",
            "Iteration 49000, cost: 0.4476\n",
            "Iteration 50000, cost: 0.4476\n",
            "Iteration 51000, cost: 0.4475\n",
            "Iteration 52000, cost: 0.4475\n",
            "Iteration 53000, cost: 0.4475\n",
            "Iteration 54000, cost: 0.4475\n",
            "Iteration 55000, cost: 0.4475\n",
            "Iteration 56000, cost: 0.4475\n",
            "Iteration 57000, cost: 0.4475\n",
            "Iteration 58000, cost: 0.4475\n",
            "Iteration 59000, cost: 0.4475\n",
            "Iteration 60000, cost: 0.4475\n",
            "Iteration 61000, cost: 0.4474\n",
            "Iteration 62000, cost: 0.4474\n",
            "Iteration 63000, cost: 0.4474\n",
            "Iteration 64000, cost: 0.4474\n",
            "Iteration 65000, cost: 0.4474\n",
            "Iteration 66000, cost: 0.4474\n",
            "Iteration 67000, cost: 0.4474\n",
            "Iteration 68000, cost: 0.4474\n",
            "Iteration 69000, cost: 0.4474\n",
            "Iteration 70000, cost: 0.4474\n",
            "Iteration 71000, cost: 0.4474\n",
            "Iteration 72000, cost: 0.4474\n",
            "Iteration 73000, cost: 0.4474\n",
            "Iteration 74000, cost: 0.4474\n",
            "Iteration 75000, cost: 0.4474\n",
            "Iteration 76000, cost: 0.4474\n",
            "Iteration 77000, cost: 0.4474\n",
            "Iteration 78000, cost: 0.4474\n",
            "Iteration 79000, cost: 0.4474\n",
            "Iteration 80000, cost: 0.4474\n",
            "Iteration 81000, cost: 0.4474\n",
            "Iteration 82000, cost: 0.4474\n",
            "Iteration 83000, cost: 0.4474\n",
            "Iteration 84000, cost: 0.4474\n",
            "Iteration 85000, cost: 0.4474\n",
            "Iteration 86000, cost: 0.4474\n",
            "Iteration 87000, cost: 0.4474\n",
            "Iteration 88000, cost: 0.4474\n",
            "Iteration 89000, cost: 0.4474\n",
            "Iteration 90000, cost: 0.4474\n",
            "Iteration 91000, cost: 0.4474\n",
            "Iteration 92000, cost: 0.4474\n",
            "Iteration 93000, cost: 0.4474\n",
            "Iteration 94000, cost: 0.4474\n",
            "Iteration 95000, cost: 0.4474\n",
            "Iteration 96000, cost: 0.4474\n",
            "Iteration 97000, cost: 0.4474\n",
            "Iteration 98000, cost: 0.4474\n",
            "Iteration 99000, cost: 0.4474\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "logistic_result_group_median.csv 파일이 성공적으로 저장되었습니다.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "## 로지스틱 - 인스턴스 방식으로 수정.\n",
        "\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "\n",
        "# --- 1. 데이터 로드 ---\n",
        "train_df = pd.read_csv('process1.csv')    # 전처리된 학습 데이터\n",
        "test_df  = pd.read_csv('process2.csv')    # 전처리된 테스트 데이터\n",
        "\n",
        "# --- 2. Age 결측치 채우기 (Pclass×Sex 그룹 중앙값) ---\n",
        "train_df['Age'] = train_df.groupby(['Pclass','Sex'])['Age']\\\n",
        "                           .transform(lambda x: x.fillna(x.median()))\n",
        "train_df['Age'].fillna(train_df['Age'].median(), inplace=True)\n",
        "\n",
        "test_df['Age'] = test_df.groupby(['Pclass','Sex'])['Age']\\\n",
        "                         .transform(lambda x: x.fillna(x.median()))\n",
        "test_df['Age'].fillna(test_df['Age'].median(), inplace=True)\n",
        "\n",
        "# --- 3. 피처 및 레이블 분리 ---\n",
        "features = ['Pclass', 'Sex', 'Age', 'Fare', 'Embarked']\n",
        "X_train = train_df[features].values\n",
        "y_train = train_df['Survived'].values\n",
        "X_test  = test_df[features].values\n",
        "passenger_ids = test_df['PassengerId'].values\n",
        "\n",
        "# --- 4. 스케일링 ---\n",
        "scaler = StandardScaler()\n",
        "X_train_scaled = scaler.fit_transform(X_train)\n",
        "X_test_scaled  = scaler.transform(X_test)\n",
        "\n",
        "# --- 5. 온라인 학습용 로지스틱 회귀 (SGD) 구현 ---\n",
        "def sigmoid(z):\n",
        "    return 1 / (1 + np.exp(-z))\n",
        "\n",
        "m, n = X_train_scaled.shape\n",
        "w = np.zeros(n)\n",
        "b = 0.0\n",
        "\n",
        "learning_rate = 0.001\n",
        "num_epochs    = 100\n",
        "epsilon       = 1e-15\n",
        "\n",
        "cost_list = []\n",
        "\n",
        "for epoch in range(1, num_epochs + 1):\n",
        "    # 샘플 단위로 파라미터 업데이트 (SGD)\n",
        "    for i in range(m):\n",
        "        xi = X_train_scaled[i]\n",
        "        yi = y_train[i]\n",
        "        zi = np.dot(xi, w) + b\n",
        "        hi = sigmoid(zi)\n",
        "        dw = (hi - yi) * xi\n",
        "        db = (hi - yi)\n",
        "        w -= learning_rate * dw\n",
        "        b -= learning_rate * db\n",
        "\n",
        "    # 한 epoch 후 전체 손실 계산\n",
        "    z_all = np.dot(X_train_scaled, w) + b\n",
        "    h_all = sigmoid(z_all)\n",
        "    cost = -np.mean(y_train * np.log(h_all + epsilon) +\n",
        "                    (1 - y_train) * np.log(1 - h_all + epsilon))\n",
        "    cost_list.append(cost)\n",
        "    print(f\"Epoch {epoch}/{num_epochs} — Cost: {cost:.4f}\")\n",
        "\n",
        "# --- 6. 학습 손실 시각화 ---\n",
        "plt.figure(figsize=(8, 5))\n",
        "plt.plot(range(1, num_epochs + 1), cost_list, 'o-', markersize=4)\n",
        "plt.xlabel('Epoch')\n",
        "plt.ylabel('Cost')\n",
        "plt.title('Training Cost per Epoch (SGD Logistic Regression)')\n",
        "plt.grid(True)\n",
        "plt.show()\n",
        "\n",
        "# --- 7. 테스트 데이터 예측 ---\n",
        "z_test = np.dot(X_test_scaled, w) + b\n",
        "h_test = sigmoid(z_test)\n",
        "predictions = (h_test >= 0.5).astype(int)\n",
        "\n",
        "# --- 8. 결과 저장 ---\n",
        "submission_df = pd.DataFrame({\n",
        "    'PassengerId': passenger_ids,\n",
        "    'Survived': predictions\n",
        "})\n",
        "submission_df.to_csv('logistic_sgd_result.csv', index=False)\n",
        "print(\"logistic_sgd_result.csv 파일이 성공적으로 저장되었습니다.\")\n"
      ],
      "metadata": {
        "id": "1Pvt_sd3QvgK",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "c344ccfb-e99b-4d49-a86b-6e3fd2c61854"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-26-fa259abc6a65>:15: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n",
            "The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n",
            "\n",
            "For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n",
            "\n",
            "\n",
            "  train_df['Age'].fillna(train_df['Age'].median(), inplace=True)\n",
            "<ipython-input-26-fa259abc6a65>:19: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n",
            "The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n",
            "\n",
            "For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n",
            "\n",
            "\n",
            "  test_df['Age'].fillna(test_df['Age'].median(), inplace=True)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/100 — Cost: 0.6056\n",
            "Epoch 2/100 — Cost: 0.5554\n",
            "Epoch 3/100 — Cost: 0.5247\n",
            "Epoch 4/100 — Cost: 0.5049\n",
            "Epoch 5/100 — Cost: 0.4915\n",
            "Epoch 6/100 — Cost: 0.4821\n",
            "Epoch 7/100 — Cost: 0.4754\n",
            "Epoch 8/100 — Cost: 0.4704\n",
            "Epoch 9/100 — Cost: 0.4666\n",
            "Epoch 10/100 — Cost: 0.4636\n",
            "Epoch 11/100 — Cost: 0.4613\n",
            "Epoch 12/100 — Cost: 0.4594\n",
            "Epoch 13/100 — Cost: 0.4579\n",
            "Epoch 14/100 — Cost: 0.4566\n",
            "Epoch 15/100 — Cost: 0.4556\n",
            "Epoch 16/100 — Cost: 0.4547\n",
            "Epoch 17/100 — Cost: 0.4539\n",
            "Epoch 18/100 — Cost: 0.4532\n",
            "Epoch 19/100 — Cost: 0.4526\n",
            "Epoch 20/100 — Cost: 0.4521\n",
            "Epoch 21/100 — Cost: 0.4517\n",
            "Epoch 22/100 — Cost: 0.4513\n",
            "Epoch 23/100 — Cost: 0.4509\n",
            "Epoch 24/100 — Cost: 0.4506\n",
            "Epoch 25/100 — Cost: 0.4503\n",
            "Epoch 26/100 — Cost: 0.4500\n",
            "Epoch 27/100 — Cost: 0.4498\n",
            "Epoch 28/100 — Cost: 0.4496\n",
            "Epoch 29/100 — Cost: 0.4494\n",
            "Epoch 30/100 — Cost: 0.4492\n",
            "Epoch 31/100 — Cost: 0.4491\n",
            "Epoch 32/100 — Cost: 0.4489\n",
            "Epoch 33/100 — Cost: 0.4488\n",
            "Epoch 34/100 — Cost: 0.4487\n",
            "Epoch 35/100 — Cost: 0.4485\n",
            "Epoch 36/100 — Cost: 0.4484\n",
            "Epoch 37/100 — Cost: 0.4484\n",
            "Epoch 38/100 — Cost: 0.4483\n",
            "Epoch 39/100 — Cost: 0.4482\n",
            "Epoch 40/100 — Cost: 0.4481\n",
            "Epoch 41/100 — Cost: 0.4481\n",
            "Epoch 42/100 — Cost: 0.4480\n",
            "Epoch 43/100 — Cost: 0.4480\n",
            "Epoch 44/100 — Cost: 0.4479\n",
            "Epoch 45/100 — Cost: 0.4479\n",
            "Epoch 46/100 — Cost: 0.4478\n",
            "Epoch 47/100 — Cost: 0.4478\n",
            "Epoch 48/100 — Cost: 0.4478\n",
            "Epoch 49/100 — Cost: 0.4477\n",
            "Epoch 50/100 — Cost: 0.4477\n",
            "Epoch 51/100 — Cost: 0.4477\n",
            "Epoch 52/100 — Cost: 0.4477\n",
            "Epoch 53/100 — Cost: 0.4476\n",
            "Epoch 54/100 — Cost: 0.4476\n",
            "Epoch 55/100 — Cost: 0.4476\n",
            "Epoch 56/100 — Cost: 0.4476\n",
            "Epoch 57/100 — Cost: 0.4476\n",
            "Epoch 58/100 — Cost: 0.4476\n",
            "Epoch 59/100 — Cost: 0.4475\n",
            "Epoch 60/100 — Cost: 0.4475\n",
            "Epoch 61/100 — Cost: 0.4475\n",
            "Epoch 62/100 — Cost: 0.4475\n",
            "Epoch 63/100 — Cost: 0.4475\n",
            "Epoch 64/100 — Cost: 0.4475\n",
            "Epoch 65/100 — Cost: 0.4475\n",
            "Epoch 66/100 — Cost: 0.4475\n",
            "Epoch 67/100 — Cost: 0.4475\n",
            "Epoch 68/100 — Cost: 0.4475\n",
            "Epoch 69/100 — Cost: 0.4475\n",
            "Epoch 70/100 — Cost: 0.4475\n",
            "Epoch 71/100 — Cost: 0.4475\n",
            "Epoch 72/100 — Cost: 0.4475\n",
            "Epoch 73/100 — Cost: 0.4474\n",
            "Epoch 74/100 — Cost: 0.4474\n",
            "Epoch 75/100 — Cost: 0.4474\n",
            "Epoch 76/100 — Cost: 0.4474\n",
            "Epoch 77/100 — Cost: 0.4474\n",
            "Epoch 78/100 — Cost: 0.4474\n",
            "Epoch 79/100 — Cost: 0.4474\n",
            "Epoch 80/100 — Cost: 0.4474\n",
            "Epoch 81/100 — Cost: 0.4474\n",
            "Epoch 82/100 — Cost: 0.4474\n",
            "Epoch 83/100 — Cost: 0.4474\n",
            "Epoch 84/100 — Cost: 0.4474\n",
            "Epoch 85/100 — Cost: 0.4474\n",
            "Epoch 86/100 — Cost: 0.4474\n",
            "Epoch 87/100 — Cost: 0.4474\n",
            "Epoch 88/100 — Cost: 0.4474\n",
            "Epoch 89/100 — Cost: 0.4474\n",
            "Epoch 90/100 — Cost: 0.4474\n",
            "Epoch 91/100 — Cost: 0.4474\n",
            "Epoch 92/100 — Cost: 0.4474\n",
            "Epoch 93/100 — Cost: 0.4474\n",
            "Epoch 94/100 — Cost: 0.4474\n",
            "Epoch 95/100 — Cost: 0.4474\n",
            "Epoch 96/100 — Cost: 0.4474\n",
            "Epoch 97/100 — Cost: 0.4474\n",
            "Epoch 98/100 — Cost: 0.4474\n",
            "Epoch 99/100 — Cost: 0.4474\n",
            "Epoch 100/100 — Cost: 0.4474\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "logistic_sgd_result.csv 파일이 성공적으로 저장되었습니다.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "\n",
        "# --- 1. 데이터 로드 (전처리+엔지니어링 완료된 결과 파일 사용) ---\n",
        "train_df = pd.read_csv('process1_result.csv')\n",
        "test_df  = pd.read_csv('process2_result.csv')\n",
        "\n",
        "# --- 2. 상관계수 딕셔너리와 피처 리스트 정의 ---\n",
        "coefficients = {\n",
        "    #'Pclass': -0.33,\n",
        "    #'Name': 0.51,\n",
        "    'Sex': 0.54,\n",
        "    'SibSp': 0.12,\n",
        "    'Parch': 0.18,\n",
        "    'Embarked': 0.10,\n",
        "    'TicketNumeric': -0.24\n",
        "    #'Fare': 0.34,\n",
        "}\n",
        "\n",
        "# features 는 딕셔너리의 키 리스트\n",
        "features = list(coefficients.keys())\n",
        "\n",
        "# --- 3. 피처 및 레이블 분리 ---\n",
        "X_train = train_df[features].values\n",
        "y_train = train_df['Survived'].values\n",
        "\n",
        "X_test        = test_df[features].values\n",
        "passenger_ids = test_df['PassengerId'].values\n",
        "\n",
        "# --- 4. 스케일링 (SGD용 전처리 일관성 유지) ---\n",
        "scaler = StandardScaler()\n",
        "X_train_scaled = scaler.fit_transform(X_train)\n",
        "X_test_scaled  = scaler.transform(X_test)\n",
        "\n",
        "# --- 5. 온라인 학습용 로지스틱 회귀 (SGD) 구현 ---\n",
        "def sigmoid(z):\n",
        "    return 1 / (1 + np.exp(-z))\n",
        "\n",
        "m, n = X_train_scaled.shape\n",
        "w = np.zeros(n)\n",
        "b = 0.0\n",
        "\n",
        "learning_rate = 0.001\n",
        "num_epochs    = 100\n",
        "epsilon       = 1e-15\n",
        "\n",
        "cost_list = []\n",
        "for epoch in range(1, num_epochs + 1):\n",
        "    # 인스턴스 단위 업데이트\n",
        "    for i in range(m):\n",
        "        xi = X_train_scaled[i]\n",
        "        yi = y_train[i]\n",
        "        zi = np.dot(xi, w) + b\n",
        "        hi = sigmoid(zi)\n",
        "        dw = (hi - yi) * xi\n",
        "        db = (hi - yi)\n",
        "        w  -= learning_rate * dw\n",
        "        b  -= learning_rate * db\n",
        "\n",
        "    # 에폭 종료 후 전체 손실 계산\n",
        "    z_all = np.dot(X_train_scaled, w) + b\n",
        "    h_all = sigmoid(z_all)\n",
        "    cost = -np.mean(\n",
        "        y_train * np.log(h_all + epsilon) +\n",
        "        (1 - y_train) * np.log(1 - h_all + epsilon)\n",
        "    )\n",
        "    cost_list.append(cost)\n",
        "    print(f\"Epoch {epoch}/{num_epochs} — Cost: {cost:.4f}\")\n",
        "\n",
        "# --- 6. 학습 손실 시각화 (선택) ---\n",
        "plt.figure(figsize=(8, 5))\n",
        "plt.plot(range(1, num_epochs + 1), cost_list, 'o-', markersize=4)\n",
        "plt.xlabel('Epoch')\n",
        "plt.ylabel('Cost')\n",
        "plt.title('Training Cost per Epoch (SGD Logistic Regression)')\n",
        "plt.grid(True)\n",
        "plt.show()\n",
        "\n",
        "# --- 7. 테스트 데이터 예측 & 결과 저장 ---\n",
        "z_test      = np.dot(X_test_scaled, w) + b\n",
        "h_test      = sigmoid(z_test)\n",
        "predictions = (h_test >= 0.5).astype(int)\n",
        "\n",
        "submission_df = pd.DataFrame({\n",
        "    'PassengerId': passenger_ids,\n",
        "    'Survived':    predictions\n",
        "})\n",
        "submission_df.to_csv('logistic_sgd_on_custom_scores.csv', index=False)\n",
        "print(\"logistic_sgd_on_custom_scores.csv 파일이 성공적으로 저장되었습니다.\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "SEJRxYyriFZ3",
        "outputId": "05cf345d-3a29-466e-e824-5ef4d312d0bd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/100 — Cost: 0.6293\n",
            "Epoch 2/100 — Cost: 0.5891\n",
            "Epoch 3/100 — Cost: 0.5631\n",
            "Epoch 4/100 — Cost: 0.5458\n",
            "Epoch 5/100 — Cost: 0.5340\n",
            "Epoch 6/100 — Cost: 0.5258\n",
            "Epoch 7/100 — Cost: 0.5199\n",
            "Epoch 8/100 — Cost: 0.5157\n",
            "Epoch 9/100 — Cost: 0.5125\n",
            "Epoch 10/100 — Cost: 0.5102\n",
            "Epoch 11/100 — Cost: 0.5084\n",
            "Epoch 12/100 — Cost: 0.5071\n",
            "Epoch 13/100 — Cost: 0.5060\n",
            "Epoch 14/100 — Cost: 0.5052\n",
            "Epoch 15/100 — Cost: 0.5046\n",
            "Epoch 16/100 — Cost: 0.5041\n",
            "Epoch 17/100 — Cost: 0.5037\n",
            "Epoch 18/100 — Cost: 0.5034\n",
            "Epoch 19/100 — Cost: 0.5031\n",
            "Epoch 20/100 — Cost: 0.5029\n",
            "Epoch 21/100 — Cost: 0.5028\n",
            "Epoch 22/100 — Cost: 0.5027\n",
            "Epoch 23/100 — Cost: 0.5025\n",
            "Epoch 24/100 — Cost: 0.5025\n",
            "Epoch 25/100 — Cost: 0.5024\n",
            "Epoch 26/100 — Cost: 0.5023\n",
            "Epoch 27/100 — Cost: 0.5023\n",
            "Epoch 28/100 — Cost: 0.5022\n",
            "Epoch 29/100 — Cost: 0.5022\n",
            "Epoch 30/100 — Cost: 0.5022\n",
            "Epoch 31/100 — Cost: 0.5022\n",
            "Epoch 32/100 — Cost: 0.5022\n",
            "Epoch 33/100 — Cost: 0.5021\n",
            "Epoch 34/100 — Cost: 0.5021\n",
            "Epoch 35/100 — Cost: 0.5021\n",
            "Epoch 36/100 — Cost: 0.5021\n",
            "Epoch 37/100 — Cost: 0.5021\n",
            "Epoch 38/100 — Cost: 0.5021\n",
            "Epoch 39/100 — Cost: 0.5021\n",
            "Epoch 40/100 — Cost: 0.5021\n",
            "Epoch 41/100 — Cost: 0.5021\n",
            "Epoch 42/100 — Cost: 0.5021\n",
            "Epoch 43/100 — Cost: 0.5021\n",
            "Epoch 44/100 — Cost: 0.5021\n",
            "Epoch 45/100 — Cost: 0.5021\n",
            "Epoch 46/100 — Cost: 0.5021\n",
            "Epoch 47/100 — Cost: 0.5021\n",
            "Epoch 48/100 — Cost: 0.5021\n",
            "Epoch 49/100 — Cost: 0.5021\n",
            "Epoch 50/100 — Cost: 0.5021\n",
            "Epoch 51/100 — Cost: 0.5021\n",
            "Epoch 52/100 — Cost: 0.5021\n",
            "Epoch 53/100 — Cost: 0.5021\n",
            "Epoch 54/100 — Cost: 0.5021\n",
            "Epoch 55/100 — Cost: 0.5021\n",
            "Epoch 56/100 — Cost: 0.5021\n",
            "Epoch 57/100 — Cost: 0.5021\n",
            "Epoch 58/100 — Cost: 0.5021\n",
            "Epoch 59/100 — Cost: 0.5021\n",
            "Epoch 60/100 — Cost: 0.5021\n",
            "Epoch 61/100 — Cost: 0.5021\n",
            "Epoch 62/100 — Cost: 0.5021\n",
            "Epoch 63/100 — Cost: 0.5021\n",
            "Epoch 64/100 — Cost: 0.5021\n",
            "Epoch 65/100 — Cost: 0.5021\n",
            "Epoch 66/100 — Cost: 0.5021\n",
            "Epoch 67/100 — Cost: 0.5021\n",
            "Epoch 68/100 — Cost: 0.5021\n",
            "Epoch 69/100 — Cost: 0.5021\n",
            "Epoch 70/100 — Cost: 0.5021\n",
            "Epoch 71/100 — Cost: 0.5021\n",
            "Epoch 72/100 — Cost: 0.5021\n",
            "Epoch 73/100 — Cost: 0.5021\n",
            "Epoch 74/100 — Cost: 0.5021\n",
            "Epoch 75/100 — Cost: 0.5021\n",
            "Epoch 76/100 — Cost: 0.5021\n",
            "Epoch 77/100 — Cost: 0.5021\n",
            "Epoch 78/100 — Cost: 0.5021\n",
            "Epoch 79/100 — Cost: 0.5021\n",
            "Epoch 80/100 — Cost: 0.5021\n",
            "Epoch 81/100 — Cost: 0.5021\n",
            "Epoch 82/100 — Cost: 0.5021\n",
            "Epoch 83/100 — Cost: 0.5021\n",
            "Epoch 84/100 — Cost: 0.5021\n",
            "Epoch 85/100 — Cost: 0.5021\n",
            "Epoch 86/100 — Cost: 0.5021\n",
            "Epoch 87/100 — Cost: 0.5021\n",
            "Epoch 88/100 — Cost: 0.5021\n",
            "Epoch 89/100 — Cost: 0.5021\n",
            "Epoch 90/100 — Cost: 0.5021\n",
            "Epoch 91/100 — Cost: 0.5021\n",
            "Epoch 92/100 — Cost: 0.5021\n",
            "Epoch 93/100 — Cost: 0.5021\n",
            "Epoch 94/100 — Cost: 0.5021\n",
            "Epoch 95/100 — Cost: 0.5021\n",
            "Epoch 96/100 — Cost: 0.5021\n",
            "Epoch 97/100 — Cost: 0.5021\n",
            "Epoch 98/100 — Cost: 0.5021\n",
            "Epoch 99/100 — Cost: 0.5021\n",
            "Epoch 100/100 — Cost: 0.5021\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "logistic_sgd_on_custom_scores.csv 파일이 성공적으로 저장되었습니다.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "## 로지스틱회귀 - test1에대한 정확도, 인스턴스 러닝, 올바른 피쳐 사용\n",
        "\n",
        "\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "from sklearn.metrics import accuracy_score\n",
        "\n",
        "# --- 1. 데이터 로드 (전처리+엔지니어링 완료된 학습 데이터) ---\n",
        "train_df = pd.read_csv('process1_result.csv')\n",
        "\n",
        "# --- 2. 상관계수 딕셔너리 & 피처 리스트 정의 ---\n",
        "coefficients = {\n",
        "    'Sex': 0.54,\n",
        "    'SibSp': 0.12,\n",
        "    'Parch': 0.18,\n",
        "    'Embarked': 0.10,\n",
        "    'TicketNumeric': -0.24\n",
        "}\n",
        "features = list(coefficients.keys())\n",
        "\n",
        "# --- 3. 피처 및 레이블 분리 ---\n",
        "X = train_df[features].values\n",
        "y = train_df['Survived'].values\n",
        "\n",
        "# --- 4. 스케일링 ---\n",
        "scaler = StandardScaler()\n",
        "X_scaled = scaler.fit_transform(X)\n",
        "\n",
        "# --- 5. 온라인 SGD 로지스틱 회귀 학습 ---\n",
        "def sigmoid(z):\n",
        "    return 1 / (1 + np.exp(-z))\n",
        "\n",
        "m, n = X_scaled.shape\n",
        "w = np.zeros(n)\n",
        "b = 0.0\n",
        "lr = 0.001\n",
        "epochs = 100\n",
        "eps = 1e-15\n",
        "\n",
        "for _ in range(epochs):\n",
        "    for i in range(m):\n",
        "        xi, yi = X_scaled[i], y[i]\n",
        "        zi = xi.dot(w) + b\n",
        "        hi = sigmoid(zi)\n",
        "        dw = (hi - yi) * xi\n",
        "        db = (hi - yi)\n",
        "        w -= lr * dw\n",
        "        b -= lr * db\n",
        "\n",
        "# --- 6. test1(test=process1) 정확도 계산 ---\n",
        "probs = sigmoid(X_scaled.dot(w) + b)\n",
        "preds = (probs >= 0.5).astype(int)\n",
        "acc = accuracy_score(y, preds)\n",
        "print(f\"Test1 Accuracy: {acc * 100:.4f}%\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BzBEUGpEkJke",
        "outputId": "11941224-8547-4a2c-ced0-8acc1d925594"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Test1 Accuracy: 79.1246%\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "\n",
        "# --- 1. 데이터 로드 ---\n",
        "train_df = pd.read_csv('process1_result.csv')   # 전처리+엔지니어링 완료된 학습 데이터\n",
        "test_df  = pd.read_csv('process2_result.csv')   # 전처리+엔지니어링 완료된 테스트 데이터\n",
        "\n",
        "# --- 2. 사용할 피처 정의 ---\n",
        "# Sex           : 성별 (0=남자, 1=여자)\n",
        "# SibSp         : 형제/배우자 수\n",
        "# Parch         : 부모/자녀 수\n",
        "# Embarked      : 탑승 항구 (숫자로 인코딩)\n",
        "# TicketNumeric : 숫자로 변환된 티켓 번호\n",
        "features = ['Sex', 'SibSp', 'Parch', 'Embarked', 'TicketNumeric']\n",
        "\n",
        "# --- 3. 피처 및 레이블 분리 ---\n",
        "X_train = train_df[features].values\n",
        "y_train = train_df['Survived'].values\n",
        "X_test  = test_df[features].values\n",
        "passenger_ids = test_df['PassengerId'].values\n",
        "\n",
        "# --- 4. 수동 스케일링 (평균 0, 표준편차 1) ---\n",
        "means = X_train.mean(axis=0)\n",
        "stds  = X_train.std(axis=0)\n",
        "# 표준편차가 0인 경우 1로 대체하여 0으로 나누는 오류 방지\n",
        "stds[stds == 0] = 1\n",
        "X_train_scaled = (X_train - means) / stds\n",
        "X_test_scaled  = (X_test  - means) / stds\n",
        "\n",
        "# --- 5. 유클리드 거리 계산 (numpy 브로드캐스트) ---\n",
        "# 5-1) Train ↔ Train 거리 행렬\n",
        "D_train = np.sqrt(((X_train_scaled[:, None, :] - X_train_scaled[None, :, :]) ** 2).sum(axis=2))\n",
        "# 자기 자신과의 거리는 제외하기 위해 무한대로 설정\n",
        "np.fill_diagonal(D_train, np.inf)\n",
        "\n",
        "# 5-2) Test2 ↔ Train 거리 행렬\n",
        "D_test = np.sqrt(((X_test_scaled[:, None, :] - X_train_scaled[None, :, :]) ** 2).sum(axis=2))\n",
        "\n",
        "# --- 6. k = 1…30에 대해 Train(=process1) 정확도 평가 ---\n",
        "best_k, best_acc = 1, 0.0\n",
        "n_train = X_train_scaled.shape[0]\n",
        "\n",
        "print(\" k | train accuracy\")\n",
        "print(\"---|----------------\")\n",
        "for k in range(1, 31):\n",
        "    # 각 샘플에 대해 k개의 최근접 이웃 레이블로 예측\n",
        "    preds = np.empty(n_train, dtype=int)\n",
        "    for i in range(n_train):\n",
        "        neigh_idxs = np.argpartition(D_train[i], k)[:k]\n",
        "        # 다수결 투표\n",
        "        labels = y_train[neigh_idxs]\n",
        "        preds[i] = np.bincount(labels).argmax()\n",
        "    acc = np.mean(preds == y_train)\n",
        "    print(f\"{k:2d} | {acc*100:6.2f}%\")\n",
        "    if acc > best_acc:\n",
        "        best_acc, best_k = acc, k\n",
        "\n",
        "print(f\"\\n▶ 최적 k = {best_k} (train accuracy = {best_acc*100:.2f}%)\\n\")\n",
        "\n",
        "# --- 7. 최적 k로 Test2 예측 및 저장 ---\n",
        "m_test = X_test_scaled.shape[0]\n",
        "test_preds = np.empty(m_test, dtype=int)\n",
        "for i in range(m_test):\n",
        "    neigh_idxs = np.argpartition(D_test[i], best_k)[:best_k]\n",
        "    labels = y_train[neigh_idxs]\n",
        "    test_preds[i] = np.bincount(labels).argmax()\n",
        "\n",
        "submission_df = pd.DataFrame({\n",
        "    'PassengerId': passenger_ids,\n",
        "    'Survived':    test_preds\n",
        "})\n",
        "submission_df.to_csv('knn_manual_test2.csv', index=False)\n",
        "print(\"knn_manual_test2.csv 파일이 저장되었습니다.\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VtP0zT8EmBHF",
        "outputId": "e122db47-b573-4861-ce11-b272211f95b8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " k | train accuracy\n",
            "---|----------------\n",
            " 1 |  76.21%\n",
            " 2 |  75.53%\n",
            " 3 |  77.55%\n",
            " 4 |  76.99%\n",
            " 5 |  76.21%\n",
            " 6 |  76.21%\n",
            " 7 |  77.44%\n",
            " 8 |  77.10%\n",
            " 9 |  77.33%\n",
            "10 |  77.22%\n",
            "11 |  77.89%\n",
            "12 |  79.69%\n",
            "13 |  77.10%\n",
            "14 |  78.56%\n",
            "15 |  79.69%\n",
            "16 |  79.69%\n",
            "17 |  79.57%\n",
            "18 |  79.35%\n",
            "19 |  79.57%\n",
            "20 |  80.36%\n",
            "21 |  78.79%\n",
            "22 |  78.79%\n",
            "23 |  79.57%\n",
            "24 |  79.69%\n",
            "25 |  79.24%\n",
            "26 |  79.46%\n",
            "27 |  79.24%\n",
            "28 |  79.57%\n",
            "29 |  79.35%\n",
            "30 |  79.01%\n",
            "\n",
            "▶ 최적 k = 20 (train accuracy = 80.36%)\n",
            "\n",
            "knn_manual_test2.csv 파일이 저장되었습니다.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# k 값 1~30\n",
        "ks = np.arange(1, 31)\n",
        "\n",
        "# 각 k에 대한 train accuracy (퍼센티지)\n",
        "acc = np.array([\n",
        "    77.55, 77.22, 78.68, 77.22, 76.54, 75.98, 77.10, 76.88, 77.22, 77.44,\n",
        "    77.44, 79.46, 76.77, 78.68, 80.13, 79.57, 79.35, 79.46, 79.46, 80.47,\n",
        "    78.79, 79.01, 79.91, 79.69, 79.35, 79.46, 79.35, 79.57, 79.35, 78.90\n",
        "])\n",
        "\n",
        "# 최적 k 찾아두기\n",
        "best_k = ks[np.argmax(acc)]\n",
        "best_acc = acc.max()\n",
        "\n",
        "# 플롯\n",
        "plt.figure(figsize=(8, 5))\n",
        "plt.plot(ks, acc, marker='o', linestyle='-')\n",
        "plt.scatter([best_k], [best_acc], s=100, color='red', label=f'Optimal k = {best_k}')\n",
        "plt.xlabel('k (Number of Neighbors)')\n",
        "plt.ylabel('Train Accuracy (%)')\n",
        "plt.title('Train Accuracy vs. k (1–30) in KNN')\n",
        "plt.xticks(ks)\n",
        "plt.grid(True)\n",
        "plt.legend()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "id": "Gqzv25N-rxyV",
        "outputId": "f04fe34c-677e-4215-bb46-8380f6600731"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x500 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAq4AAAHWCAYAAAC2Zgs3AAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQAAsVRJREFUeJzs3Xd4VNXWBvD3TEkmvYckJJAEQu+9gygBRRRFUBERy1URC3L1U6/XC1ixKxawogiIqKBioSoKgnQQpAVIIZDeeyYz5/tjciYJaTOTMzNnkvf3PDyayck+K2GSLPasvZYgiqIIIiIiIiKFUzk7ACIiIiIiSzBxJSIiIiKXwMSViIiIiFwCE1ciIiIicglMXImIiIjIJTBxJSIiIiKXwMSViIiIiFwCE1ciIiIicglMXImIiIjIJTBxJWoD5syZg+joaGeHQU6WlJQEQRDw2muv2bzGhQsXoNPp8Oeff8oYmX09+eSTGDp0qMXXjxs3DuPGjbNfQERkMyauRE4kCIJFf3bs2OHsUBv1888/QxAEREREwGg0OjscsrNnn30WQ4cOxciRI82PnT59Go8++ihGjBgBnU4HQRCQlJRk0/obNmzAxIkTERERAXd3d0RGRuKmm27C8ePHG7z+hx9+wIABA6DT6dChQwcsXLgQVVVVda6ZP38+jh49ih9++MGmmFrqs88+gyAIOHDgQJ3HCwoKMGTIEOh0OmzatAkAsGjRIgiCgHbt2qG0tLTeWtHR0bj22mvrPCb9nHj99dctvjeRq9I4OwCituyLL76o8/bKlSuxdevWeo937969Rff56KOP7JZUrl69GtHR0UhKSsKvv/6Kq666yi73IefLysrC559/js8//7zO43v27MHSpUvRo0cPdO/eHUeOHLH5HseOHUNAQAAeeeQRBAcHIz09HZ9++imGDBmCPXv2oG/fvuZrf/nlF0ydOhXjxo3DO++8g2PHjuH5559HZmYmli1bZr4uLCwM119/PV577TVcd911zcawZcsWm+O3VGFhIeLj4/H3339jw4YNmDRpUp33S5/Dv//9b4vXfPXVVzF37lx4enrKHS6RcohEpBjz5s0TLfm2LCkpcUA0zSsuLha9vLzEpUuXiv379xfnzJnj7JAaVVxc7OwQnC4xMVEEIL766qs2ffwbb7whenh4iEVFRXUez8nJEQsLC0VRFMVXX31VBCAmJia2NFyz9PR0UaPRiPfdd1+dx3v06CH27dtX1Ov15seefvppURAE8eTJk3Wu/eabb0RBEMRz587JFpelVqxYIQIQ9+/fL4qiKBYWForDhg0T3dzcxB9//LHOtQsXLhQBiP369RPbtWsnlpaW1nl/x44dxcmTJ9d5TLoegPj66683eW8iV8dSASKFGzduHHr16oWDBw9izJgx8PT0xH/+8x8AwPfff4/JkyebX1bt1KkTnnvuORgMhjprXF7jWrvW8cMPP0SnTp3g7u6OwYMHY//+/RbHtmHDBpSVlWH69Om45ZZbsH79epSXl9e7rry8HIsWLUKXLl2g0+kQHh6OG2+8EefOnTNfYzQa8fbbb6N3797Q6XQICQnBpEmTzC9xSjF/9tln9dYXBAGLFi0yvy293HrixAnMnDkTAQEBGDVqFADg77//xpw5cxAbGwudToewsDDcddddyMnJqbfuxYsXcffdd5u/vjExMZg7dy4qKytx/vx5CIKAN998s97H7d69G4Ig4Msvv2zw65aRkQGNRoPFixfXe9/p06chCALeffddAIBer8fixYsRFxcHnU6HoKAgjBo1Clu3bm1wbWuJooh7770Xbm5uWL9+fZPXfvfddxg6dCi8vb3rPB4YGAgfHx9Z4mlIaGgoPD09kZ+fb37sxIkTOHHiBO69915oNDUvHj7wwAMQRRHffPNNnTWkVwK+//77Zu93eY3rjh07IAgC1q1bhxdeeAGRkZHQ6XS48sorcfbsWas+l+LiYkyaNAmHDh3Ct99+i8mTJzd43f/+9z9kZGTU2TluysiRIzF+/Hi88sorKCsrsyomIlfCxJXIBeTk5ODqq69Gv3798NZbb+GKK64AYKpf8/b2xoIFC/D2229j4MCB+N///ocnn3zSonXXrFmDV199Fffddx+ef/55JCUl4cYbb4Rer7fo41evXo0rrrgCYWFhuOWWW1BUVISNGzfWucZgMODaa6/F4sWLMXDgQLz++ut45JFHUFBQUKdu8e6778b8+fMRFRWFl19+GU8++SR0Oh3++usvC79K9U2fPh2lpaV48cUX8a9//QsAsHXrVpw/fx533nkn3nnnHdxyyy1Yu3YtrrnmGoiiaP7YS5cuYciQIVi7di1uvvlmLF26FLfffjt+//13lJaWIjY2FiNHjsTq1asb/Lr4+Pjg+uuvbzCudu3aYezYsVi3bl2993311VdQq9WYPn06AFMSvnjxYlxxxRV499138fTTT6NDhw44dOiQzV8XicFgwJw5c7By5Ups2LABN954Y6PX6vV67N+/HwMGDGjxfS2Rn5+PrKwsHDt2DPfccw8KCwtx5ZVXmt9/+PBhAMCgQYPqfFxERAQiIyPN75f4+fmhU6dOLTpUtmTJEmzYsAGPPfYYnnrqKfz111+47bbbLP74kpISXH311di/fz++/vrrerWqtY0ePdrqRHTRokVWJbtELsnJO75EVEtDpQJjx44VAYjLly+vd/3lLyOKoijed999oqenp1heXm5+7I477hA7duxoflt6yTgoKEjMzc01P/7999+LAMSNGzc2G2tGRoao0WjEjz76yPzYiBEjxOuvv77OdZ9++qkIQHzjjTfqrWE0GkVRFMVff/1VBCA+/PDDjV4jxbxixYp61wAQFy5caH5bern11ltvrXdtQ1+zL7/8UgQg/vHHH+bHZs+eLapUqgZfYpVi+uCDD0QAdV6WrqysFIODg8U77rij3sfVJn3ssWPH6jzeo0cPcfz48ea3+/btW++lYVvVLhXQ6/XizTffLHp4eIibN29u9mPPnj0rAhDfeeedJq+Tq1Sga9euIgARgOjt7S3+97//FQ0GQ737pKSk1PvYwYMHi8OGDav3eHx8vNi9e/dm7z127Fhx7Nix5rd/++03EYDYvXt3saKiwvz422+/3eDf4eWkl+s7duwoarVa8bvvvmv0Wum5m5WVJf7+++/1vncaKxWYN2+eKIqieMUVV4hhYWHm5zlLBai14Y4rkQtwd3fHnXfeWe9xDw8P8/8XFRUhOzsbo0ePRmlpKU6dOtXsujfffDMCAgLMb48ePRoAcP78+WY/du3atVCpVJg2bZr5sVtvvRW//PIL8vLyzI99++23CA4OxkMPPVRvDUEQzNcIgoCFCxc2eo0t7r///nqP1f6alZeXIzs7G8OGDQMA8y6m0WjEd999hylTptTb0asd04wZM6DT6ersum7evBnZ2dmYNWtWk7HdeOON0Gg0+Oqrr8yPHT9+HCdOnMDNN99sfszf3x///PMPEhISLPmULVJZWYnp06fjxx9/xM8//4z4+PhmP0Yqpaj9fLGnFStWYNOmTXj//ffRvXt3lJWV1SmBkXYh3d3d632sTqdrcJcyICAA2dnZNsd05513ws3Nzfy2Nd8vgKlERKfTISoqyqLrx4wZgyuuuMLqXdf09HQsX77couuJXA0TVyIX0L59+zq/MCX//PMPbrjhBvj5+cHX1xchISHmhKmgoKDZdTt06FDnbSkpqZ14NmbVqlUYMmQIcnJycPbsWZw9exb9+/dHZWUlvv76a/N1586dQ9euXevUIV7u3LlziIiIQGBgYLP3tUZMTEy9x3Jzc/HII4+gXbt28PDwQEhIiPk66WuWlZWFwsJC9OrVq8n1/f39MWXKFKxZs8b82OrVq9G+fXuMHz++yY8NDg7GlVdeWadc4KuvvoJGo6nzkv2zzz6L/Px8dOnSBb1798bjjz+Ov//+u/lPvgkvvfQSvvvuO3zzzTdW9ysVa5VTWCsrKwvp6en1/mRlZdW7dvjw4Zg4cSLmzp2LzZs3Y9WqVXjqqafM75f+AVJRUVHvY8vLy+v8A6V27C35h1BLvl8A4IMPPoCbmxsmTZqE06dPW/Qx1iaitiS7RK6EiSuRC2jol3B+fj7Gjh2Lo0eP4tlnn8XGjRuxdetWvPzyywBgUfsrtVrd4OPNJScJCQnYv38/du3ahbi4OPMf6QBUQ3WfLdVYwnH5QbTaGvq6zZgxAx999BHuv/9+rF+/Hlu2bDH30LSlZdjs2bNx/vx57N69G0VFRfjhhx9w6623QqVq/sfrLbfcgjNnzpjbR61btw5XXnklgoODzdeMGTMG586dw6effopevXrh448/xoABA/Dxxx9bHatk4sSJ8PLywiuvvNLgYbqGBAUFAbA8SWvI4MGDER4eXu/P4MGDm/y4gIAAjB8/vs7zKjw8HACQlpZW7/q0tDRERETUezwvL6/O19Zatn6/SHr06IGff/4ZZWVlmDBhAi5cuNDsx4wZMwbjxo2zKhFduHAh0tPT8cEHH1h0PZErYR9XIhe1Y8cO5OTkYP369RgzZoz58cTERLvfe/Xq1dBqtfjiiy/q/TLftWsXli5dipSUFHTo0AGdOnXC3r17odfrodVqG1yvU6dO2Lx5M3JzcxvddZV2t2qfLAeA5ORki+POy8vD9u3bsXjxYvzvf/8zP375y/AhISHw9fVttOl9bZMmTUJISAhWr16NoUOHorS0FLfffrtF8UydOhX33XefuVzgzJkzdXYVJYGBgbjzzjtx5513ori4GGPGjMGiRYtwzz33WHSfyw0bNgz3338/rr32WkyfPh0bNmxockccMO02enh4tOj5tXr16gaTr4b+gXG5srKyOq8i9OvXDwBw4MABDBkyxPz4pUuXkJqainvvvbfeGomJiXX6wDrDkCFD8N1332Hy5MmYMGECdu7ciZCQkCY/ZtGiRRg3bpzFiejYsWMxbtw4vPzyy3We50StAXdciVyUlDDW3u2prKzE+++/b/d7r169GqNHj8bNN9+Mm266qc6fxx9/HADMraCmTZuG7Oxsc3un2qTYp02bBlEUG2wPJV3j6+uL4OBg/PHHH3Xeb83n29DXDADeeuutOm+rVCpMnToVGzdubHDiUO2P12g0uPXWW7Fu3Tp89tln6N27N/r06WNRPP7+/pg4cSLWrVuHtWvXws3NDVOnTq1zzeVtury9vdG5c+c6L5EXFBTg1KlTFpWHSK666iqsXbsWmzZtwu23397sbrNWq8WgQYNaNIFp5MiRuOqqq+r9qT2FKzMzs97HJSUlYfv27XXqjXv27Ilu3brhww8/rLPrvmzZMgiCgJtuuqnOGgUFBTh37hxGjBhhc/xyufLKK/Hll1/i7NmzmDRpEgoLC5u8vnYiaukOuVRi8OGHH8oRMpFicMeVyEWNGDECAQEBuOOOO/Dwww9DEAR88cUXLapBtMTevXtx9uxZPPjggw2+v3379hgwYABWr16NJ554ArNnz8bKlSuxYMEC7Nu3D6NHj0ZJSQm2bduGBx54ANdffz2uuOIK3H777Vi6dCkSEhIwadIkGI1G7Ny5E1dccYX5Xvfccw+WLFmCe+65B4MGDcIff/yBM2fOWBy7r68vxowZg1deeQV6vR7t27fHli1bGtxFfPHFF7FlyxaMHTsW9957L7p37460tDR8/fXX2LVrF/z9/c3Xzp49G0uXLsVvv/1mLtWw1M0334xZs2bh/fffx8SJE+usC5heXh43bhwGDhyIwMBAHDhwAN98802dr/+GDRtw5513YsWKFZgzZ47F9546dSpWrFiB2bNnw9fXt9kdveuvvx5PP/00CgsL4evra368oKAA77zzDgCY2029++678Pf3h7+/f6PPlYb07t0bV155Jfr164eAgAAkJCTgk08+gV6vx5IlS+pc++qrr+K6665DfHw8brnlFhw/fhzvvvsu7rnnnnrT5rZt2wZRFBttUeZoN9xwAz766CPcdddduO66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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import numpy as np\n",
        "\n",
        "# k values\n",
        "ks = list(range(1, 101))\n",
        "\n",
        "# Corresponding train accuracies (in percentages)\n",
        "acc = [\n",
        "    77.55, 77.22, 78.68, 77.22, 76.54, 75.98, 77.10, 76.88, 77.22, 77.44,\n",
        "    77.44, 79.46, 76.77, 78.68, 80.13, 79.57, 79.35, 79.46, 79.46, 80.47,\n",
        "    78.79, 79.01, 79.91, 79.69, 79.35, 79.46, 79.35, 79.57, 79.35, 78.90,\n",
        "    79.24, 79.01, 78.90, 79.24, 79.12, 79.12, 79.35, 79.35, 79.35, 79.35,\n",
        "    79.35, 79.35, 79.35, 79.35, 79.24, 79.24, 79.01, 79.12, 78.90, 78.90,\n",
        "    78.56, 78.56, 78.56, 78.56, 78.56, 78.68, 78.68, 78.68, 78.68, 78.68,\n",
        "    78.45, 78.45, 78.56, 78.68, 78.00, 78.23, 78.34, 78.23, 78.45, 78.45,\n",
        "    78.68, 78.56, 78.56, 78.45, 78.68, 78.56, 78.56, 78.68, 78.45, 78.56,\n",
        "    78.34, 78.68, 78.34, 78.45, 78.34, 78.23, 78.23, 78.45, 78.45, 78.34,\n",
        "    78.34, 78.34, 78.34, 78.34, 78.00, 78.00, 78.45, 78.45, 78.34, 78.34\n",
        "]\n",
        "\n",
        "# Plot\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.plot(ks, acc,  marker='o')\n",
        "plt.scatter([20], [acc[19]], s=100, marker='o')  # Highlight k=20\n",
        "plt.xlabel('k (Number of Neighbors)')\n",
        "plt.ylabel('Train Accuracy (%)')\n",
        "plt.title('Train Accuracy vs. k in KNN\\nOptimal k = 20')\n",
        "plt.grid(True)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 585
        },
        "id": "WyGuDGt2q6y_",
        "outputId": "6226d5e7-8944-41c1-9989-d1c9c90cd0dd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# --- 1. 데이터 로드 (전처리+엔지니어링 완료된 결과 파일 사용) ---\n",
        "train_df = pd.read_csv('process1_result.csv')\n",
        "test_df  = pd.read_csv('process2_result.csv')\n",
        "\n",
        "# --- 2. 상관계수 딕셔너리와 피처 리스트 정의 ---\n",
        "coefficients = {\n",
        "    'Sex': 0.54,\n",
        "    'SibSp': 0.12,\n",
        "    'Parch': 0.18,\n",
        "    'Embarked': 0.10,\n",
        "    'TicketNumeric': -0.24\n",
        "}\n",
        "features = list(coefficients.keys())\n",
        "\n",
        "# --- 3. 피처 및 레이블 분리 ---\n",
        "X_train = train_df[features].values\n",
        "y_train = train_df['Survived'].values\n",
        "X_test  = test_df[features].values\n",
        "passenger_ids = test_df['PassengerId'].values\n",
        "\n",
        "# --- 4. 수동 스케일링 (평균 0, 표준편차 1) --- 0~1사이 값으로 정규화 or 표준화\n",
        "means = X_train.mean(axis=0)\n",
        "stds  = X_train.std(axis=0)\n",
        "# 0으로 나누는 오류 방지\n",
        "stds[stds == 0] = 1.0\n",
        "\n",
        "X_train_scaled = (X_train - means) / stds\n",
        "X_test_scaled  = (X_test  - means) / stds\n",
        "\n",
        "# --- 5. 온라인 학습용 로지스틱 회귀 (SGD) 구현 ---\n",
        "def sigmoid(z):\n",
        "    return 1 / (1 + np.exp(-z))\n",
        "\n",
        "m, n = X_train_scaled.shape\n",
        "w = np.zeros(n)\n",
        "b = 0.0\n",
        "\n",
        "# --- (5) 여러 학습률에 대해 SGD 학습 & 비용 기록 ---\n",
        "learning_rates = [0.0001, 0.001, 0.01]   # 비교할 학습률들\n",
        "num_epochs     = 100                     # 고정 에폭 수\n",
        "epsilon        = 1e-15\n",
        "\n",
        "cost_histories = {}  # { lr: [cost_epoch1, cost_epoch2, ...] }\n",
        "\n",
        "for lr in learning_rates:\n",
        "    w = np.zeros(n)\n",
        "    b = 0.0\n",
        "    cost_list = []\n",
        "\n",
        "    for epoch in range(1, num_epochs + 1):\n",
        "        # 샘플 단위 업데이트\n",
        "        for i in range(m):\n",
        "            xi, yi = X_train_scaled[i], y_train[i]\n",
        "            z_i     = np.dot(xi, w) + b\n",
        "            h_i     = sigmoid(z_i)\n",
        "            delta   = h_i - yi\n",
        "            w      -= lr * delta * xi\n",
        "            b      -= lr * delta\n",
        "\n",
        "        # 에폭마다 전체 손실 계산\n",
        "        z_all = X_train_scaled.dot(w) + b\n",
        "        h_all = sigmoid(z_all)\n",
        "        cost = -np.mean(\n",
        "            y_train * np.log(h_all + epsilon) +\n",
        "            (1 - y_train) * np.log(1 - h_all + epsilon)\n",
        "        )\n",
        "        cost_list.append(cost)\n",
        "\n",
        "    cost_histories[lr] = cost_list\n",
        "\n",
        "# --- (6) 수렴 구간의 Loss 값만 출력 ---\n",
        "N = 50\n",
        "start_epoch = max(1, num_epochs - N + 1)\n",
        "\n",
        "print(f\"\\n=== Converged Loss for Last {N} Epochs ===\")\n",
        "for lr, costs in cost_histories.items():\n",
        "    converged = costs[start_epoch-1:]\n",
        "    print(f\"\\nlr = {lr}\")\n",
        "    for epoch_offset, c in enumerate(converged, start=start_epoch):\n",
        "        print(f\"  epoch {epoch_offset:3d}: cost = {c:.4f}\")\n",
        "\n",
        "# --- (6) 학습률별 수렴 곡선 한 화면에 시각화 ---\n",
        "plt.figure(figsize=(8,5))\n",
        "for lr, costs in cost_histories.items():\n",
        "    plt.plot(\n",
        "        range(1, num_epochs + 1),\n",
        "        costs,\n",
        "        label=f'lr = {lr}'\n",
        "    )\n",
        "\n",
        "plt.xlabel('Epoch')\n",
        "plt.ylabel('Cost')\n",
        "plt.title('Training Loss Convergence for Different Learning Rates')\n",
        "plt.xlim(1, num_epochs)\n",
        "# y축 자동 맞춤 또는 수렴부만 보고 싶으면 plt.ylim(...) 추가\n",
        "plt.grid(True)\n",
        "plt.legend()\n",
        "plt.tight_layout()\n",
        "plt.show()\n",
        "\n",
        "# --- 7. 테스트 데이터 예측 & 결과 저장 ---\n",
        "z_test      = X_test_scaled.dot(w) + b\n",
        "h_test      = sigmoid(z_test)\n",
        "predictions = (h_test >= 0.5).astype(int)\n",
        "\n",
        "submission_df = pd.DataFrame({\n",
        "    'PassengerId': passenger_ids,\n",
        "    'Survived':    predictions\n",
        "})\n",
        "submission_df.to_csv('logistic_sgd_on_custom_scores.csv', index=False)\n",
        "print(\"logistic_sgd_on_custom_scores.csv 파일이 성공적으로 저장되었습니다.\")\n",
        "\n",
        "# --- train(process1) 정확도 계산 ---\n",
        "z_train   = X_train_scaled.dot(w) + b\n",
        "h_train   = sigmoid(z_train)\n",
        "pred_train = (h_train >= 0.5).astype(int)\n",
        "acc_train  = np.mean(pred_train == y_train)\n",
        "print(f\"Test1 Accuracy: {acc_train * 100:.2f}%\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "RrLd9fhkv_uX",
        "outputId": "fce0d09f-0776-4ddd-d800-c52323f5c9a1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "=== Converged Loss for Last 50 Epochs ===\n",
            "\n",
            "lr = 0.0001\n",
            "  epoch  51: cost = 0.5330\n",
            "  epoch  52: cost = 0.5321\n",
            "  epoch  53: cost = 0.5312\n",
            "  epoch  54: cost = 0.5303\n",
            "  epoch  55: cost = 0.5295\n",
            "  epoch  56: cost = 0.5287\n",
            "  epoch  57: cost = 0.5279\n",
            "  epoch  58: cost = 0.5272\n",
            "  epoch  59: cost = 0.5264\n",
            "  epoch  60: cost = 0.5257\n",
            "  epoch  61: cost = 0.5251\n",
            "  epoch  62: cost = 0.5244\n",
            "  epoch  63: cost = 0.5238\n",
            "  epoch  64: cost = 0.5232\n",
            "  epoch  65: cost = 0.5226\n",
            "  epoch  66: cost = 0.5220\n",
            "  epoch  67: cost = 0.5214\n",
            "  epoch  68: cost = 0.5209\n",
            "  epoch  69: cost = 0.5204\n",
            "  epoch  70: cost = 0.5199\n",
            "  epoch  71: cost = 0.5194\n",
            "  epoch  72: cost = 0.5189\n",
            "  epoch  73: cost = 0.5185\n",
            "  epoch  74: cost = 0.5180\n",
            "  epoch  75: cost = 0.5176\n",
            "  epoch  76: cost = 0.5172\n",
            "  epoch  77: cost = 0.5168\n",
            "  epoch  78: cost = 0.5164\n",
            "  epoch  79: cost = 0.5160\n",
            "  epoch  80: cost = 0.5156\n",
            "  epoch  81: cost = 0.5153\n",
            "  epoch  82: cost = 0.5149\n",
            "  epoch  83: cost = 0.5146\n",
            "  epoch  84: cost = 0.5143\n",
            "  epoch  85: cost = 0.5140\n",
            "  epoch  86: cost = 0.5136\n",
            "  epoch  87: cost = 0.5133\n",
            "  epoch  88: cost = 0.5131\n",
            "  epoch  89: cost = 0.5128\n",
            "  epoch  90: cost = 0.5125\n",
            "  epoch  91: cost = 0.5122\n",
            "  epoch  92: cost = 0.5120\n",
            "  epoch  93: cost = 0.5117\n",
            "  epoch  94: cost = 0.5115\n",
            "  epoch  95: cost = 0.5113\n",
            "  epoch  96: cost = 0.5110\n",
            "  epoch  97: cost = 0.5108\n",
            "  epoch  98: cost = 0.5106\n",
            "  epoch  99: cost = 0.5104\n",
            "  epoch 100: cost = 0.5102\n",
            "\n",
            "lr = 0.001\n",
            "  epoch  51: cost = 0.5021\n",
            "  epoch  52: cost = 0.5021\n",
            "  epoch  53: cost = 0.5021\n",
            "  epoch  54: cost = 0.5021\n",
            "  epoch  55: cost = 0.5021\n",
            "  epoch  56: cost = 0.5021\n",
            "  epoch  57: cost = 0.5021\n",
            "  epoch  58: cost = 0.5021\n",
            "  epoch  59: cost = 0.5021\n",
            "  epoch  60: cost = 0.5021\n",
            "  epoch  61: cost = 0.5021\n",
            "  epoch  62: cost = 0.5021\n",
            "  epoch  63: cost = 0.5021\n",
            "  epoch  64: cost = 0.5021\n",
            "  epoch  65: cost = 0.5021\n",
            "  epoch  66: cost = 0.5021\n",
            "  epoch  67: cost = 0.5021\n",
            "  epoch  68: cost = 0.5021\n",
            "  epoch  69: cost = 0.5021\n",
            "  epoch  70: cost = 0.5021\n",
            "  epoch  71: cost = 0.5021\n",
            "  epoch  72: cost = 0.5021\n",
            "  epoch  73: cost = 0.5021\n",
            "  epoch  74: cost = 0.5021\n",
            "  epoch  75: cost = 0.5021\n",
            "  epoch  76: cost = 0.5021\n",
            "  epoch  77: cost = 0.5021\n",
            "  epoch  78: cost = 0.5021\n",
            "  epoch  79: cost = 0.5021\n",
            "  epoch  80: cost = 0.5021\n",
            "  epoch  81: cost = 0.5021\n",
            "  epoch  82: cost = 0.5021\n",
            "  epoch  83: cost = 0.5021\n",
            "  epoch  84: cost = 0.5021\n",
            "  epoch  85: cost = 0.5021\n",
            "  epoch  86: cost = 0.5021\n",
            "  epoch  87: cost = 0.5021\n",
            "  epoch  88: cost = 0.5021\n",
            "  epoch  89: cost = 0.5021\n",
            "  epoch  90: cost = 0.5021\n",
            "  epoch  91: cost = 0.5021\n",
            "  epoch  92: cost = 0.5021\n",
            "  epoch  93: cost = 0.5021\n",
            "  epoch  94: cost = 0.5021\n",
            "  epoch  95: cost = 0.5021\n",
            "  epoch  96: cost = 0.5021\n",
            "  epoch  97: cost = 0.5021\n",
            "  epoch  98: cost = 0.5021\n",
            "  epoch  99: cost = 0.5021\n",
            "  epoch 100: cost = 0.5021\n",
            "\n",
            "lr = 0.01\n",
            "  epoch  51: cost = 0.5024\n",
            "  epoch  52: cost = 0.5024\n",
            "  epoch  53: cost = 0.5024\n",
            "  epoch  54: cost = 0.5024\n",
            "  epoch  55: cost = 0.5024\n",
            "  epoch  56: cost = 0.5024\n",
            "  epoch  57: cost = 0.5024\n",
            "  epoch  58: cost = 0.5024\n",
            "  epoch  59: cost = 0.5024\n",
            "  epoch  60: cost = 0.5024\n",
            "  epoch  61: cost = 0.5024\n",
            "  epoch  62: cost = 0.5024\n",
            "  epoch  63: cost = 0.5024\n",
            "  epoch  64: cost = 0.5024\n",
            "  epoch  65: cost = 0.5024\n",
            "  epoch  66: cost = 0.5024\n",
            "  epoch  67: cost = 0.5024\n",
            "  epoch  68: cost = 0.5024\n",
            "  epoch  69: cost = 0.5024\n",
            "  epoch  70: cost = 0.5024\n",
            "  epoch  71: cost = 0.5024\n",
            "  epoch  72: cost = 0.5024\n",
            "  epoch  73: cost = 0.5024\n",
            "  epoch  74: cost = 0.5024\n",
            "  epoch  75: cost = 0.5024\n",
            "  epoch  76: cost = 0.5024\n",
            "  epoch  77: cost = 0.5024\n",
            "  epoch  78: cost = 0.5024\n",
            "  epoch  79: cost = 0.5024\n",
            "  epoch  80: cost = 0.5024\n",
            "  epoch  81: cost = 0.5024\n",
            "  epoch  82: cost = 0.5024\n",
            "  epoch  83: cost = 0.5024\n",
            "  epoch  84: cost = 0.5024\n",
            "  epoch  85: cost = 0.5024\n",
            "  epoch  86: cost = 0.5024\n",
            "  epoch  87: cost = 0.5024\n",
            "  epoch  88: cost = 0.5024\n",
            "  epoch  89: cost = 0.5024\n",
            "  epoch  90: cost = 0.5024\n",
            "  epoch  91: cost = 0.5024\n",
            "  epoch  92: cost = 0.5024\n",
            "  epoch  93: cost = 0.5024\n",
            "  epoch  94: cost = 0.5024\n",
            "  epoch  95: cost = 0.5024\n",
            "  epoch  96: cost = 0.5024\n",
            "  epoch  97: cost = 0.5024\n",
            "  epoch  98: cost = 0.5024\n",
            "  epoch  99: cost = 0.5024\n",
            "  epoch 100: cost = 0.5024\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "logistic_sgd_on_custom_scores.csv 파일이 성공적으로 저장되었습니다.\n",
            "Test1 Accuracy: 79.12%\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "\n",
        "# --- 1. 데이터 로드 ---\n",
        "train_df = pd.read_csv('process1_result.csv')   # 전처리+엔지니어링 완료된 학습 데이터\n",
        "\n",
        "# --- 2. 사용할 피처 리스트 ---\n",
        "features = ['Sex', 'SibSp', 'Parch', 'Embarked', 'TicketNumeric']\n",
        "\n",
        "# --- 3. 피처 및 레이블 분리 ---\n",
        "X_train = train_df[features].values\n",
        "y_train = train_df['Survived'].values\n",
        "\n",
        "# --- 4. Gini 불순도 계산 ---\n",
        "def gini(y):\n",
        "    classes, counts = np.unique(y, return_counts=True)\n",
        "    p = counts / counts.sum()\n",
        "    return 1.0 - np.sum(p**2)\n",
        "\n",
        "# --- 5. 주어진 임계값으로 분할했을 때 가중 Gini 구하기 ---\n",
        "def weighted_gini(X_col, y, t):\n",
        "    left = y[X_col <= t]\n",
        "    right= y[X_col >  t]\n",
        "    if len(left)==0 or len(right)==0:\n",
        "        return None\n",
        "    n = len(y)\n",
        "    return (len(left)/n)*gini(left) + (len(right)/n)*gini(right)\n",
        "\n",
        "# --- 6. 가장 순수도 개선량(∆Gini)이 큰 분할 찾기 ---\n",
        "def find_best_split(X, y):\n",
        "    best_gain, best_feat, best_t = 0, None, None\n",
        "    parent = gini(y)\n",
        "    for fid in range(X.shape[1]):\n",
        "        vals = np.unique(X[:,fid])\n",
        "        # 연속값 split은 인접값 중간을 기준으로\n",
        "        thr = (vals[:-1] + vals[1:]) / 2.0\n",
        "        for t in thr:\n",
        "            wg = weighted_gini(X[:,fid], y, t)\n",
        "            if wg is None:\n",
        "                continue\n",
        "            gain = parent - wg\n",
        "            if gain > best_gain:\n",
        "                best_gain, best_feat, best_t = gain, fid, t\n",
        "    return best_feat, best_t\n",
        "\n",
        "# --- 7. 재귀적 트리 생성 (max depth = 3) ---\n",
        "def build_tree(X, y, depth=0, max_depth=3):\n",
        "    # 리프 조건: 순수 노드 or 최대 깊이\n",
        "    if len(np.unique(y))==1 or depth==max_depth:\n",
        "        vals, cnts = np.unique(y, return_counts=True)\n",
        "        return {'leaf': True, 'pred': vals[np.argmax(cnts)]}\n",
        "\n",
        "    feat, thresh = find_best_split(X, y)\n",
        "    if feat is None:\n",
        "        vals, cnts = np.unique(y, return_counts=True)\n",
        "        return {'leaf': True, 'pred': vals[np.argmax(cnts)]}\n",
        "\n",
        "    mask = X[:,feat] <= thresh\n",
        "    left = build_tree(X[mask], y[mask], depth+1, max_depth)\n",
        "    right= build_tree(X[~mask], y[~mask], depth+1, max_depth)\n",
        "    return {'leaf':False, 'feat':feat, 'thresh':thresh, 'left':left, 'right':right}\n",
        "\n",
        "# --- 8. 트리 예측 함수 ---\n",
        "def predict(tree, x):\n",
        "    if tree['leaf']:\n",
        "        return tree['pred']\n",
        "    if x[tree['feat']] <= tree['thresh']:\n",
        "        return predict(tree['left'], x)\n",
        "    else:\n",
        "        return predict(tree['right'], x)\n",
        "\n",
        "# --- 9. 모델 학습 & 평가 ---\n",
        "tree = build_tree(X_train, y_train, max_depth=3)\n",
        "preds = np.array([predict(tree, x) for x in X_train])\n",
        "train_acc = np.mean(preds == y_train)\n",
        "print(f\"Decision Tree (depth=3) Train Accuracy: {train_acc*100:.2f}%\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zrPj3gwRDWDC",
        "outputId": "6382d519-4f5e-4dde-e87b-d0c148fbd1e6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Decision Tree (depth=3) Train Accuracy: 80.70%\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "\n",
        "# --- 1. 데이터 로드 ---\n",
        "df = pd.read_csv('process1_result.csv')  # 전처리+엔지니어링 완료된 학습 데이터\n",
        "\n",
        "# --- 2. 사용할 5개 피처 리스트 ---\n",
        "features = ['Sex', 'SibSp', 'Parch', 'Embarked', 'TicketNumeric']\n",
        "X = df[features].values\n",
        "y = df['Survived'].values\n",
        "\n",
        "# --- 3. Gini 불순도 계산 함수 ---\n",
        "def gini(labels):\n",
        "    classes, counts = np.unique(labels, return_counts=True)\n",
        "    p = counts / counts.sum()\n",
        "    return 1.0 - np.sum(p**2)\n",
        "\n",
        "# --- 4. 주어진 피처열과 임계값 t로 나누었을 때의 가중 Gini ---\n",
        "def weighted_gini(col, labels, t):\n",
        "    left = labels[col <= t]\n",
        "    right = labels[col >  t]\n",
        "    if len(left) == 0 or len(right) == 0:\n",
        "        return None\n",
        "    n = len(labels)\n",
        "    return (len(left)/n)*gini(left) + (len(right)/n)*gini(right)\n",
        "\n",
        "# --- 5. 최적의 분할(피처, 임계값) 찾기 ---\n",
        "def find_best_split(X, y):\n",
        "    best_gain, best_feat, best_t = 0.0, None, None\n",
        "    parent_gini = gini(y)\n",
        "    for feat in range(X.shape[1]):\n",
        "        vals = np.unique(X[:, feat])\n",
        "        # 연속형 분할 기준: 중간값\n",
        "        thresholds = (vals[:-1] + vals[1:]) / 2.0\n",
        "        for t in thresholds:\n",
        "            wg = weighted_gini(X[:, feat], y, t)\n",
        "            if wg is None:\n",
        "                continue\n",
        "            gain = parent_gini - wg\n",
        "            if gain > best_gain:\n",
        "                best_gain, best_feat, best_t = gain, feat, t\n",
        "    return best_feat, best_t\n",
        "\n",
        "# --- 6. 깊이 3짜리 결정 트리 생성(재귀) ---\n",
        "## depth : 15로 변경\n",
        "def build_tree(X, y, depth=0, max_depth=15):\n",
        "    # 리프 조건: 한 클래스만 남거나 최대 깊이 도달\n",
        "    if len(np.unique(y)) == 1 or depth == max_depth:\n",
        "        vals, cnts = np.unique(y, return_counts=True)\n",
        "        return {'leaf': True, 'pred': vals[np.argmax(cnts)]}\n",
        "    feat, thresh = find_best_split(X, y)\n",
        "    if feat is None:\n",
        "        vals, cnts = np.unique(y, return_counts=True)\n",
        "        return {'leaf': True, 'pred': vals[np.argmax(cnts)]}\n",
        "    mask = X[:, feat] <= thresh\n",
        "    left = build_tree(X[mask], y[mask], depth+1, max_depth)\n",
        "    right = build_tree(X[~mask], y[~mask], depth+1, max_depth)\n",
        "    return {'leaf': False, 'feat': feat, 'thresh': thresh, 'left': left, 'right': right}\n",
        "\n",
        "# --- 7. 예측 함수 ---\n",
        "def predict(tree, x):\n",
        "    if tree['leaf']:\n",
        "        return tree['pred']\n",
        "    if x[tree['feat']] <= tree['thresh']:\n",
        "        return predict(tree['left'], x)\n",
        "    else:\n",
        "        return predict(tree['right'], x)\n",
        "\n",
        "# --- 8. 트리 학습 & 평가 ---\n",
        "tree = build_tree(X, y, max_depth=15)\n",
        "preds = np.array([predict(tree, xi) for xi in X])\n",
        "accuracy = (preds == y).mean()\n",
        "print(f\"Depth-15 Decision Tree Train Accuracy: {accuracy*100:.2f}%\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UEK7XkmnIJWQ",
        "outputId": "6109e4bd-d6e8-4ba9-a647-934558a47fde"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Depth-15 Decision Tree Train Accuracy: 94.95%\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "def get_tree_positions(tree, x=0.5, y=1.0, dx=0.25, dy=0.15, positions=None, labels=None, feature_names=None):\n",
        "    \"\"\"\n",
        "    트리를 재귀 순회하며 각 노드의 (x,y) 위치와 텍스트 라벨을 계산합니다.\n",
        "    \"\"\"\n",
        "    if positions is None:\n",
        "        positions = {}\n",
        "        labels    = {}\n",
        "    # 현재 노드 고유 ID (메모리 주소 사용)\n",
        "    node_id = id(tree)\n",
        "    # 라벨 만들기\n",
        "    if tree['leaf']:\n",
        "        text = f\"Leaf\\npred={tree['pred']}\"\n",
        "    else:\n",
        "        feat = feature_names[tree['feat']]\n",
        "        thresh = tree['thresh']\n",
        "        text = f\"{feat} ≤ {thresh:.2f}\"\n",
        "    positions[node_id] = (x, y)\n",
        "    labels[node_id]    = text\n",
        "\n",
        "    # 내부 노드면 자식 위치 계산\n",
        "    if not tree['leaf']:\n",
        "        # 왼쪽 자식\n",
        "        get_tree_positions(tree['left'],\n",
        "                           x - dx, y - dy,\n",
        "                           dx/2, dy,\n",
        "                           positions, labels,\n",
        "                           feature_names)\n",
        "        # 오른쪽 자식\n",
        "        get_tree_positions(tree['right'],\n",
        "                           x + dx, y - dy,\n",
        "                           dx/2, dy,\n",
        "                           positions, labels,\n",
        "                           feature_names)\n",
        "    return positions, labels\n",
        "\n",
        "def draw_manual_tree(tree, feature_names):\n",
        "    \"\"\"\n",
        "    build_tree로 만든 tree dict를 입력받아\n",
        "    matplotlib으로 노드와 화살표를 그립니다.\n",
        "    \"\"\"\n",
        "    positions, labels = get_tree_positions(tree, feature_names=feature_names)\n",
        "    fig, ax = plt.subplots(figsize=(10, 6))\n",
        "    ax.axis('off')\n",
        "\n",
        "    # 노드 텍스트\n",
        "    for node_id, (x, y) in positions.items():\n",
        "        ax.text(x, y, labels[node_id],\n",
        "                ha='center', va='center',\n",
        "                bbox=dict(boxstyle='round,pad=0.3', fc='lightblue', ec='black'))\n",
        "\n",
        "    # 화살표 그리기\n",
        "    for node_id, (x, y) in positions.items():\n",
        "        # 내부 노드만\n",
        "        # original tree reference\n",
        "        # we need to find the tree dict from id, so we traverse again:\n",
        "        def find_node_by_id(t):\n",
        "            if id(t) == node_id:\n",
        "                return t\n",
        "            if not t['leaf']:\n",
        "                left = find_node_by_id(t['left'])\n",
        "                if left is not None: return left\n",
        "                return find_node_by_id(t['right'])\n",
        "            return None\n",
        "        node = find_node_by_id(tree)\n",
        "        if not node['leaf']:\n",
        "            left_id  = id(node['left'])\n",
        "            right_id = id(node['right'])\n",
        "            x0, y0 = positions[node_id]\n",
        "            x1, y1 = positions[left_id]\n",
        "            x2, y2 = positions[right_id]\n",
        "            ax.annotate(\"\", xy=(x1, y1+0.02), xytext=(x0, y0-0.02),\n",
        "                        arrowprops=dict(arrowstyle='->'))\n",
        "            ax.annotate(\"\", xy=(x2, y2+0.02), xytext=(x0, y0-0.02),\n",
        "                        arrowprops=dict(arrowstyle='->'))\n",
        "\n",
        "    plt.show()\n",
        "\n",
        "# --- 사용 예 ---\n",
        "# 1) 수작업 트리 생성\n",
        "# from your_module import build_tree, predict\n",
        "# tree = build_tree(X, y, max_depth=3)\n",
        "\n",
        "# 2) 피처 명 리스트\n",
        "feature_names = ['Sex', 'SibSp', 'Parch', 'Embarked', 'TicketNumeric']\n",
        "\n",
        "# 3) 시각화\n",
        "draw_manual_tree(tree, feature_names)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "z13soWptN2Ez",
        "outputId": "795d0ad9-562f-4459-870d-459f92f7649f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "\n",
        "# --- 1. 학습 데이터 로드 & 트리 구축 ---\n",
        "train_df = pd.read_csv('process1_result.csv')  # 학습용 전처리 완료 파일\n",
        "features = ['Sex', 'SibSp', 'Parch', 'Embarked', 'TicketNumeric']\n",
        "X_train = train_df[features].values\n",
        "y_train = train_df['Survived'].values\n",
        "\n",
        "# Gini 불순도 계산\n",
        "def gini(labels):\n",
        "    classes, counts = np.unique(labels, return_counts=True)\n",
        "    p = counts / counts.sum()\n",
        "    return 1.0 - np.sum(p**2)\n",
        "\n",
        "# 가중 Gini 계산\n",
        "def weighted_gini(col, labels, t):\n",
        "    left  = labels[col <= t]\n",
        "    right = labels[col >  t]\n",
        "    if len(left)==0 or len(right)==0:\n",
        "        return None\n",
        "    n = len(labels)\n",
        "    return (len(left)/n)*gini(left) + (len(right)/n)*gini(right)\n",
        "\n",
        "# 최적 분할 찾기\n",
        "def find_best_split(X, y):\n",
        "    best_gain, best_feat, best_t = 0.0, None, None\n",
        "    parent = gini(y)\n",
        "    for feat in range(X.shape[1]):\n",
        "        vals = np.unique(X[:,feat])\n",
        "        thresholds = (vals[:-1] + vals[1:]) / 2.0\n",
        "        for t in thresholds:\n",
        "            wg = weighted_gini(X[:,feat], y, t)\n",
        "            if wg is None: continue\n",
        "            gain = parent - wg\n",
        "            if gain > best_gain:\n",
        "                best_gain, best_feat, best_t = gain, feat, t\n",
        "    return best_feat, best_t\n",
        "\n",
        "# 재귀 트리 생성 (max_depth=3)\n",
        "def build_tree(X, y, depth=0, max_depth=10):\n",
        "    if len(np.unique(y)) == 1 or depth == max_depth:\n",
        "        vals, cnts = np.unique(y, return_counts=True)\n",
        "        return {'leaf': True, 'pred': vals[np.argmax(cnts)]}\n",
        "    feat, thresh = find_best_split(X, y)\n",
        "    if feat is None:\n",
        "        vals, cnts = np.unique(y, return_counts=True)\n",
        "        return {'leaf': True, 'pred': vals[np.argmax(cnts)]}\n",
        "    mask = X[:, feat] <= thresh\n",
        "    left  = build_tree(X[mask],  y[mask],  depth+1, max_depth)\n",
        "    right = build_tree(X[~mask], y[~mask], depth+1, max_depth)\n",
        "    return {'leaf': False, 'feat': feat, 'thresh': thresh, 'left': left, 'right': right}\n",
        "\n",
        "# 예측 함수\n",
        "def predict(tree, x):\n",
        "    if tree['leaf']:\n",
        "        return tree['pred']\n",
        "    if x[tree['feat']] <= tree['thresh']:\n",
        "        return predict(tree['left'], x)\n",
        "    else:\n",
        "        return predict(tree['right'], x)\n",
        "\n",
        "# 트리 학습\n",
        "tree = build_tree(X_train, y_train, max_depth=10)\n",
        "\n",
        "# --- 2. 테스트 데이터 로드 & 예측 ---\n",
        "test_df = pd.read_csv('process2_result.csv')  # 테스트용 전처리 완료 파일\n",
        "X_test = test_df[features].values\n",
        "ids    = test_df['PassengerId'].values\n",
        "\n",
        "# 예측\n",
        "test_preds = np.array([predict(tree, row) for row in X_test])\n",
        "\n",
        "# --- 3. 제출 파일 생성 ---\n",
        "submission = pd.DataFrame({\n",
        "    'PassengerId': ids,\n",
        "    'Survived':    test_preds\n",
        "})\n",
        "submission.to_csv('dt_manual_depth3_test2.csv', index=False)\n",
        "print(\"dt_manual_depth3_test2.csv 파일이 생성되었습니다.\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mR9Up8oVOsGE",
        "outputId": "33c31b5d-9ae6-4fc5-b7ad-45ffe1b8e044"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "dt_manual_depth3_test2.csv 파일이 생성되었습니다.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# 1) 전처리+엔지니어링 완료된 학습 데이터 로드\n",
        "df = pd.read_csv('process1_result.csv')\n",
        "\n",
        "# 2) 사용할 피처 리스트\n",
        "features = ['Sex', 'SibSp', 'Parch', 'Embarked', 'TicketNumeric']\n",
        "X = df[features].values\n",
        "y = df['Survived'].values\n",
        "\n",
        "# 3) Gini 불순도 계산\n",
        "def gini(labels):\n",
        "    classes, counts = np.unique(labels, return_counts=True)\n",
        "    p = counts / counts.sum()\n",
        "    return 1.0 - np.sum(p**2)\n",
        "\n",
        "# 4) 주어진 임계값 t로 split했을 때 자식 노드의 가중 Gini\n",
        "def weighted_gini(col, labels, t):\n",
        "    left  = labels[col <= t]\n",
        "    right = labels[col >  t]\n",
        "    if len(left)==0 or len(right)==0:\n",
        "        return None\n",
        "    n = len(labels)\n",
        "    return (len(left)/n)*gini(left) + (len(right)/n)*gini(right)\n",
        "\n",
        "# 5) 한 노드에서 가장 개선량(∆Gini)이 큰 (feat, t) 찾기\n",
        "def find_best_split(X, y):\n",
        "    best_gain, best_feat, best_t = 0.0, None, None\n",
        "    parent = gini(y)\n",
        "    for feat in range(X.shape[1]):\n",
        "        vals = np.unique(X[:,feat])\n",
        "        thresholds = (vals[:-1] + vals[1:]) / 2.0\n",
        "        for t in thresholds:\n",
        "            wg = weighted_gini(X[:,feat], y, t)\n",
        "            if wg is None: continue\n",
        "            gain = parent - wg\n",
        "            if gain > best_gain:\n",
        "                best_gain, best_feat, best_t = gain, feat, t\n",
        "    return best_feat, best_t\n",
        "\n",
        "# 6) 깊이 제한(max_depth) 재귀 트리 생성\n",
        "def build_tree(X, y, depth=0, max_depth=3):\n",
        "    # 리프 조건: 한 클래스만 남거나 depth==max_depth\n",
        "    if len(np.unique(y))==1 or depth==max_depth:\n",
        "        vals, cnts = np.unique(y, return_counts=True)\n",
        "        return {'leaf':True, 'pred':vals[np.argmax(cnts)]}\n",
        "    feat, thresh = find_best_split(X, y)\n",
        "    if feat is None:\n",
        "        vals, cnts = np.unique(y, return_counts=True)\n",
        "        return {'leaf':True, 'pred':vals[np.argmax(cnts)]}\n",
        "    mask = X[:,feat] <= thresh\n",
        "    left  = build_tree(X[mask],  y[mask],  depth+1, max_depth)\n",
        "    right = build_tree(X[~mask], y[~mask], depth+1, max_depth)\n",
        "    return {'leaf':False, 'feat':feat, 'thresh':thresh, 'left':left, 'right':right}\n",
        "\n",
        "# 7) 하나의 샘플을 예측하는 함수\n",
        "def predict(tree, x):\n",
        "    if tree['leaf']:\n",
        "        return tree['pred']\n",
        "    if x[tree['feat']] <= tree['thresh']:\n",
        "        return predict(tree['left'], x)\n",
        "    else:\n",
        "        return predict(tree['right'], x)\n",
        "\n",
        "# 8) depth 1~20 에서 학습 데이터 정확도 측정\n",
        "depths = list(range(1,21))\n",
        "accs   = []\n",
        "\n",
        "for d in depths:\n",
        "    tree = build_tree(X, y, max_depth=d)\n",
        "    preds = np.array([predict(tree, xi) for xi in X])\n",
        "    accs.append((preds == y).mean() * 100)\n",
        "\n",
        "# 9) 결과 시각화\n",
        "plt.figure(figsize=(10,6))\n",
        "plt.plot(depths, accs, marker='o')\n",
        "plt.title('Train Accuracy vs. Tree Depth (1–20)')\n",
        "plt.xlabel('Tree Depth')\n",
        "plt.ylabel('Accuracy on process1_result (%)')\n",
        "plt.xticks(depths)\n",
        "plt.grid(True)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 564
        },
        "id": "8fEOyR22QpZE",
        "outputId": "51939f1b-382e-4d7d-eaa6-1b1d870d237f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# --- 1. 학습 데이터 로드 (파일명은 환경에 맞게 수정하세요) ---\n",
        "df = pd.read_csv('process1_result.csv')\n",
        "\n",
        "# --- 2. 피처 리스트 & X, y 준비 ---\n",
        "features = ['Sex', 'SibSp', 'Parch', 'Embarked', 'TicketNumeric']\n",
        "X = df[features].values\n",
        "y = df['Survived'].values\n",
        "\n",
        "# --- 3. Gini 불순도 계산 ---\n",
        "def gini(labels):\n",
        "    classes, counts = np.unique(labels, return_counts=True)\n",
        "    p = counts / counts.sum()\n",
        "    return 1.0 - np.sum(p**2)\n",
        "\n",
        "# --- 4. 주어진 임계값 t에 대한 가중 Gini ---\n",
        "def weighted_gini(col, labels, t):\n",
        "    left  = labels[col <= t]\n",
        "    right = labels[col >  t]\n",
        "    if len(left)==0 or len(right)==0:\n",
        "        return None\n",
        "    n = len(labels)\n",
        "    return (len(left)/n)*gini(left) + (len(right)/n)*gini(right)\n",
        "\n",
        "# --- 5. 최적 (feat, t) 찾기 ---\n",
        "def find_best_split(X, y):\n",
        "    best_gain, best_feat, best_t = 0.0, None, None\n",
        "    parent = gini(y)\n",
        "    for feat in range(X.shape[1]):\n",
        "        vals = np.unique(X[:, feat])\n",
        "        thresholds = (vals[:-1] + vals[1:]) / 2.0\n",
        "        for t in thresholds:\n",
        "            wg = weighted_gini(X[:, feat], y, t)\n",
        "            if wg is None: continue\n",
        "            gain = parent - wg\n",
        "            if gain > best_gain:\n",
        "                best_gain, best_feat, best_t = gain, feat, t\n",
        "    return best_feat, best_t\n",
        "\n",
        "# --- 6. max_depth 제약을 둔 재귀 트리 생성 ---\n",
        "def build_tree(X, y, depth=0, max_depth=3):\n",
        "    # 리프 조건: 한 클래스만 남거나 최대 깊이 도달\n",
        "    if len(np.unique(y)) == 1 or depth == max_depth:\n",
        "        vals, cnts = np.unique(y, return_counts=True)\n",
        "        return {'leaf': True, 'pred': vals[np.argmax(cnts)]}\n",
        "    feat, thresh = find_best_split(X, y)\n",
        "    if feat is None:\n",
        "        vals, cnts = np.unique(y, return_counts=True)\n",
        "        return {'leaf': True, 'pred': vals[np.argmax(cnts)]}\n",
        "    mask = X[:, feat] <= thresh\n",
        "    left  = build_tree(X[mask],  y[mask],  depth+1, max_depth)\n",
        "    right = build_tree(X[~mask], y[~mask], depth+1, max_depth)\n",
        "    return {'leaf': False, 'feat': feat, 'thresh': thresh, 'left': left, 'right': right}\n",
        "\n",
        "# --- 7. 단일 샘플 예측 함수 ---\n",
        "def predict(tree, x):\n",
        "    if tree['leaf']:\n",
        "        return tree['pred']\n",
        "    if x[tree['feat']] <= tree['thresh']:\n",
        "        return predict(tree['left'], x)\n",
        "    else:\n",
        "        return predict(tree['right'], x)\n",
        "\n",
        "# --- 8. Depth 1~20마다 Train Accuracy 출력 & 저장 ---\n",
        "depths = list(range(1, 21))\n",
        "accuracies = []\n",
        "\n",
        "for d in depths:\n",
        "    tree = build_tree(X, y, max_depth=d)\n",
        "    preds = np.array([predict(tree, xi) for xi in X])\n",
        "    acc = (preds == y).mean() * 100\n",
        "    accuracies.append(acc)\n",
        "    print(f\"Depth {d:2d}: Train Accuracy = {acc:.2f}%\")\n",
        "\n",
        "# --- 9. 결과 시각화 ---\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.plot(depths, accuracies, marker='o')\n",
        "plt.xlabel('Tree Depth')\n",
        "plt.ylabel('Train Accuracy (%)')\n",
        "plt.title('Train Accuracy vs. Tree Depth (1–20)')\n",
        "plt.xticks(depths)\n",
        "plt.grid(True)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 931
        },
        "id": "ypuS5pkiRvyA",
        "outputId": "5500b9e7-aa69-4e60-dddd-1ae3dde194f2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Depth  1: Train Accuracy = 78.68%\n",
            "Depth  2: Train Accuracy = 79.24%\n",
            "Depth  3: Train Accuracy = 80.70%\n",
            "Depth  4: Train Accuracy = 82.72%\n",
            "Depth  5: Train Accuracy = 83.73%\n",
            "Depth  6: Train Accuracy = 84.74%\n",
            "Depth  7: Train Accuracy = 86.53%\n",
            "Depth  8: Train Accuracy = 88.22%\n",
            "Depth  9: Train Accuracy = 89.90%\n",
            "Depth 10: Train Accuracy = 91.25%\n",
            "Depth 11: Train Accuracy = 92.93%\n",
            "Depth 12: Train Accuracy = 93.60%\n",
            "Depth 13: Train Accuracy = 94.39%\n",
            "Depth 14: Train Accuracy = 94.73%\n",
            "Depth 15: Train Accuracy = 94.95%\n",
            "Depth 16: Train Accuracy = 94.95%\n",
            "Depth 17: Train Accuracy = 95.17%\n",
            "Depth 18: Train Accuracy = 95.17%\n",
            "Depth 19: Train Accuracy = 95.29%\n",
            "Depth 20: Train Accuracy = 95.29%\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "\n",
        "# --- 1. 학습 데이터 로드 & 트리 구축 ---\n",
        "train_df = pd.read_csv('process1_result.csv')  # 학습용 전처리 완료 파일\n",
        "features = ['Sex', 'SibSp', 'Parch', 'Embarked', 'TicketNumeric']\n",
        "X_train = train_df[features].values\n",
        "y_train = train_df['Survived'].values\n",
        "\n",
        "# Gini 불순도 계산\n",
        "def gini(labels):\n",
        "    classes, counts = np.unique(labels, return_counts=True)\n",
        "    p = counts / counts.sum()\n",
        "    return 1.0 - np.sum(p**2)\n",
        "\n",
        "# 가중 Gini 계산\n",
        "def weighted_gini(col, labels, t):\n",
        "    left  = labels[col <= t]\n",
        "    right = labels[col >  t]\n",
        "    if len(left)==0 or len(right)==0:\n",
        "        return None\n",
        "    n = len(labels)\n",
        "    return (len(left)/n)*gini(left) + (len(right)/n)*gini(right)\n",
        "\n",
        "# 최적 분할 찾기\n",
        "def find_best_split(X, y):\n",
        "    best_gain, best_feat, best_t = 0.0, None, None\n",
        "    parent = gini(y)\n",
        "    for feat in range(X.shape[1]):\n",
        "        vals = np.unique(X[:,feat])\n",
        "        thresholds = (vals[:-1] + vals[1:]) / 2.0\n",
        "        for t in thresholds:\n",
        "            wg = weighted_gini(X[:,feat], y, t)\n",
        "            if wg is None: continue\n",
        "            gain = parent - wg\n",
        "            if gain > best_gain:\n",
        "                best_gain, best_feat, best_t = gain, feat, t\n",
        "    return best_feat, best_t\n",
        "\n",
        "# 재귀 트리 생성 (max_depth=3)\n",
        "def build_tree(X, y, depth=0, max_depth=15):\n",
        "    if len(np.unique(y)) == 1 or depth == max_depth:\n",
        "        vals, cnts = np.unique(y, return_counts=True)\n",
        "        return {'leaf': True, 'pred': vals[np.argmax(cnts)]}\n",
        "    feat, thresh = find_best_split(X, y)\n",
        "    if feat is None:\n",
        "        vals, cnts = np.unique(y, return_counts=True)\n",
        "        return {'leaf': True, 'pred': vals[np.argmax(cnts)]}\n",
        "    mask = X[:, feat] <= thresh\n",
        "    left  = build_tree(X[mask],  y[mask],  depth+1, max_depth)\n",
        "    right = build_tree(X[~mask], y[~mask], depth+1, max_depth)\n",
        "    return {'leaf': False, 'feat': feat, 'thresh': thresh, 'left': left, 'right': right}\n",
        "\n",
        "# 예측 함수\n",
        "def predict(tree, x):\n",
        "    if tree['leaf']:\n",
        "        return tree['pred']\n",
        "    if x[tree['feat']] <= tree['thresh']:\n",
        "        return predict(tree['left'], x)\n",
        "    else:\n",
        "        return predict(tree['right'], x)\n",
        "\n",
        "# 트리 학습\n",
        "tree = build_tree(X_train, y_train, max_depth=15)\n",
        "\n",
        "# --- 2. 테스트 데이터 로드 & 예측 ---\n",
        "test_df = pd.read_csv('process2_result.csv')  # 테스트용 전처리 완료 파일\n",
        "X_test = test_df[features].values\n",
        "ids    = test_df['PassengerId'].values\n",
        "\n",
        "# 예측\n",
        "test_preds = np.array([predict(tree, row) for row in X_test])\n",
        "\n",
        "# --- 3. 제출 파일 생성 ---\n",
        "submission = pd.DataFrame({\n",
        "    'PassengerId': ids,\n",
        "    'Survived':    test_preds\n",
        "})\n",
        "submission.to_csv('dt_manual_depth15_test2.csv', index=False)\n",
        "print(\"dt_manual_depth15_test2.csv 파일이 생성되었습니다.\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CN4yWZVvSMn7",
        "outputId": "cce9e3f9-4510-4211-f4d0-ffa350b43b55"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "dt_manual_depth15_test2.csv 파일이 생성되었습니다.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# 모델별 Test1/Test2 정확도 데이터\n",
        "models = ['Threshold', 'KNN', 'Logistic', 'DecisionTree']\n",
        "test1_scores = [72.95, 80.47, 79.12, 80.70]\n",
        "test2_scores = [72.488, 77.033, 77.511, 76.555]\n",
        "\n",
        "# x축 위치 및 막대 너비 설정\n",
        "x = np.arange(len(models))\n",
        "width = 0.35\n",
        "\n",
        "# 그래프 그리기\n",
        "fig, ax = plt.subplots(figsize=(8, 5))\n",
        "ax.bar(x - width/2, test1_scores, width, label='Test1 Accuracy')\n",
        "ax.bar(x + width/2, test2_scores, width, label='Test2 Accuracy')\n",
        "\n",
        "# 레이블 및 타이틀\n",
        "ax.set_xticks(x)\n",
        "ax.set_xticklabels(models)\n",
        "ax.set_ylabel('Accuracy (%)')\n",
        "ax.set_title('Model Performance: Test1 vs Test2')\n",
        "ax.legend(\n",
        "    fontsize=8\n",
        ")\n",
        "ax.grid(axis='y')\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 468
        },
        "id": "68Sdp8sQUVg4",
        "outputId": "84168212-9ebd-4296-f592-aa338587ca95"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x500 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAq4AAAHDCAYAAADlfZgfAAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQAAWXdJREFUeJzt3XlYVPX//vF7wGEQWcyNJVFxXzI0V3I3FNc0KTMtl2x3x8poE5dyadHMLf0YtlGmpS2mpuZSuVtmm6QloSmaC6ASi3B+f/hjvo6gggLDwefjurhy3ufMOa8zvJq5OXPmPRbDMAwBAAAAxZyLswsAAAAA8oLgCgAAAFMguAIAAMAUCK4AAAAwBYIrAAAATIHgCgAAAFMguAIAAMAUCK4AAAAwBYIrAAAATIHgCtygLBaLoqKi8n2/uLg4WSwWLV68uMBruh7vvfee6tatK6vVqrJlyzq7HABAISC4Ak60ePFiWSwWWSwWfffddzmWG4ahwMBAWSwW9ejRwwkVXruNGzfaj81ischqtap69eoaOHCg/vrrrwLd1759+zR48GDVqFFDCxcu1IIFCwp0+ze6i/v0Sj/VqlUrkP1t2bJFUVFRSkxMzLHs66+/1tChQ3XLLbfI1dW1wPZ5vdq3b5+nx+ha/ljMzdy5c3P943Hfvn16+umn1ahRI3l5ecnf31/du3fXrl27CmS/gLOVcnYBACR3d3fFxMSodevWDuObNm3S4cOHZbPZnFTZ9Rs5cqSaNWumjIwM/fDDD1qwYIFWrlypn3/+WQEBAQWyj40bNyorK0tvvPGGatasWSDbxP9p27at3nvvPYexhx56SM2bN9cjjzxiH/P09CyQ/W3ZskUTJkzQ4MGDc5w9j4mJ0ZIlS3TbbbcVWP8UhOeee04PPfSQ/fbOnTs1a9YsPfvss6pXr559/NZbby2Q/c2dO1cVKlTQ4MGDHcb/97//adGiRQoPD9cTTzyhpKQkvfXWW2rZsqVWr16t0NDQAtk/4CwEV6AY6Natm5YuXapZs2apVKn/+98yJiZGTZo00YkTJ5xY3fVp06aN7r77bknSkCFDVLt2bY0cOVLvvPOOIiMjr2vb586dU5kyZXT8+HFJKtBLBFJSUuTh4VFg2zOz6tWrq3r16g5jjz32mKpXr67777+/SGt5+eWXtXDhQlmtVvXo0UO//PJLke7/cjp16uRw293dXbNmzVKnTp3Uvn37IqvjvvvuU1RUlMMfEQ8++KDq1aunqKgogitMj0sFgGLgvvvu08mTJ7V27Vr7WHp6upYtW6b+/fvnep9z585p7NixCgwMlM1mU506dfTqq6/KMAyH9dLS0jRmzBhVrFhRXl5euvPOO3X48OFct/nPP//owQcflK+vr2w2mxo0aKC333674A5UUseOHSVJBw8etI+tWrVKbdq0UZkyZeTl5aXu3bvr119/dbjf4MGD5enpqT///FPdunWTl5eXBgwYoGrVqmn8+PGSpIoVK+Z4O3bu3Llq0KCBbDabAgICNGzYsBxvQbdv31633HKLdu/erbZt28rDw0PPPvus/XreV199VXPmzFH16tXl4eGhzp0769ChQzIMQ5MmTVLlypVVunRp9erVS6dOnXLY9meffabu3bsrICBANptNNWrU0KRJk5SZmZlrDb/99ps6dOggDw8P3XzzzZo+fXqOxzA1NVVRUVGqXbu23N3d5e/vrz59+ujPP/+0r5OVlaWZM2eqQYMGcnd3l6+vrx599FGdPn3aYVtJSUnat2+fkpKSrvKbu7q89s+bb76pBg0ayMPDQzfddJOaNm2qmJgYSVJUVJSeeuopSVJQUJD9Lfa4uDhJUkBAgKxWa75ry8jIULly5TRkyJAcy5KTk+Xu7q4nn3wyTzVej7z0ekJCgoYMGaLKlSvLZrPJ399fvXr1sj8G1apV06+//qpNmzbZH5/scNykSZMcZ77Lly+vNm3a6Pfff7/u+gFn44wrUAxUq1ZNISEh+vDDD9W1a1dJF17gkpKS1K9fP82aNcthfcMwdOedd2rDhg0aOnSoGjVqpDVr1uipp57SP//8oxkzZtjXfeihh/T++++rf//+uv322/XNN9+oe/fuOWo4duyYWrZsKYvFouHDh6tixYpatWqVhg4dquTkZI0ePbpAjjU7XJUvX17ShQ9VDRo0SGFhYZo2bZpSUlI0b948tW7dWj/++KPDNYznz59XWFiYWrdurVdffVUeHh4aPHiw3n33XS1fvlzz5s2Tp6en/e3YqKgoTZgwQaGhoXr88ccVGxurefPmaefOnfr+++8dAtDJkyfVtWtX9evXT/fff798fX3tyz744AOlp6drxIgROnXqlKZPn66+ffuqY8eO2rhxo8aNG6cDBw7ozTff1JNPPukQ1hYvXixPT09FRETI09NT33zzjV588UUlJyfrlVdecXhsTp8+rS5duqhPnz7q27evli1bpnHjxqlhw4b2vsjMzFSPHj20fv169evXT6NGjdKZM2e0du1a/fLLL6pRo4Yk6dFHH9XixYs1ZMgQjRw5UgcPHtTs2bP1448/Ohz78uXLNWTIEEVHR+d42zk/8to/Cxcu1MiRI3X33Xdr1KhRSk1N1d69e7V9+3b1799fffr00R9//KEPP/xQM2bMUIUKFSRd+KPkelitVt1111369NNP9dZbb8nNzc2+bMWKFUpLS1O/fv3yVOO1ymuvh4eH69dff9WIESNUrVo1HT9+XGvXrlV8fLyqVaummTNnasSIEfL09NRzzz0nSQ79mpuEhAT7YwmYmgHAaaKjow1Jxs6dO43Zs2cbXl5eRkpKimEYhnHPPfcYHTp0MAzDMKpWrWp0797dfr8VK1YYkozJkyc7bO/uu+82LBaLceDAAcMwDGPPnj2GJOOJJ55wWK9///6GJGP8+PH2saFDhxr+/v7GiRMnHNbt16+f4ePjY6/r4MGDhiQjOjr6ise2YcMGQ5Lx9ttvG//++69x5MgRY+XKlUa1atUMi8Vi7Ny50zhz5oxRtmxZ4+GHH3a4b0JCguHj4+MwPmjQIEOS8cwzz+TY1/jx4w1Jxr///msfO378uOHm5mZ07tzZyMzMtI/Pnj3bXle2du3aGZKM+fPnO2w3+1grVqxoJCYm2scjIyMNSUZwcLCRkZFhH7/vvvsMNzc3IzU11T6W/bhd7NFHHzU8PDwc1suu4d1337WPpaWlGX5+fkZ4eLh97O233zYkGa+//nqO7WZlZRmGYRjffvutIcn44IMPHJavXr06x3h2D17t93mpMmXKGIMGDbLfzmv/9OrVy2jQoMEVt/3KK68YkoyDBw9ecb3u3bsbVatWzXPNa9asMSQZX3zxhcN4t27djOrVq9tv56XGq1m6dKkhydiwYYNhGEaee/306dOGJOOVV1654vYbNGhgtGvXLk+1bN682bBYLMYLL7yQ7+MAihsuFQCKib59++q///7Tl19+qTNnzujLL7+87Nmdr776Sq6urho5cqTD+NixY2UYhlatWmVfT1KO9S49e2oYhj755BP17NlThmHoxIkT9p+wsDAlJSXphx9+uKbjevDBB1WxYkUFBASoe/fuOnfunN555x01bdpUa9euVWJiou677z6Hfbq6uqpFixbasGFDju09/vjjedrvunXrlJ6ertGjR8vF5f+e6h5++GF5e3tr5cqVDuvbbLZc30aWpHvuuUc+Pj722y1atJAk3X///Q7XJLdo0ULp6en6559/7GOlS5e2//vMmTM6ceKE2rRpo5SUFO3bt89hP56eng7XjLq5ual58+YOszB88sknqlChgkaMGJGjTovFIklaunSpfHx81KlTJ4fHNftt5Isf18GDB8swjOs625qf/ilbtqwOHz6snTt3XvP+rlXHjh1VoUIFLVmyxD52+vRprV27Vvfee699rDBqzGuvly5dWm5ubtq4cWOOyzquxfHjx9W/f38FBQXp6aefvu7tAc7GpQJAMVGxYkWFhoYqJiZGKSkpyszMtH+o6VJ///23AgIC5OXl5TCe/enlv//+2/5fFxcX+9vH2erUqeNw+99//1ViYqIWLFhw2amksj8AlV8vvvii2rRpI1dXV1WoUEH16tWzh739+/dL+r/rXi/l7e3tcLtUqVKqXLlynvab/Rhceqxubm6qXr26fXm2m2++2eHt44tVqVLF4XZ2iA0MDMx1/OLA8euvv+r555/XN998o+TkZIf1L72utHLlyvbwme2mm27S3r177bf//PNP1alTxyEwX2r//v1KSkpSpUqVcl1+rb/Ly8lP/4wbN07r1q1T8+bNVbNmTXXu3Fn9+/dXq1atCrSm3JQqVUrh4eGKiYlRWlqabDabPv30U2VkZDgE18KoMa+9brPZNG3aNI0dO1a+vr5q2bKlevTooYEDB8rPzy9f+zx37px69OihM2fO6LvvviuwWR8AZyK4AsVI//799fDDDyshIUFdu3Ytson0s7KyJF04gzho0KBc17nWaXwaNmx42U8yZ+/3vffey/VF+dJwZrPZHM6eFqSLz4xeytXVNV/jxv//gFxiYqLatWsnb29vTZw4UTVq1JC7u7t++OEHjRs3zn78ed1eXmVlZalSpUr64IMPcl1+vdeL5rY/KW/9U69ePcXGxurLL7/U6tWr9cknn2ju3Ll68cUXNWHChAKtKzf9+vXTW2+9pVWrVql37976+OOPVbduXQUHB9vXKYwa89Pro0ePVs+ePbVixQqtWbNGL7zwgqZMmaJvvvlGjRs3ztP+0tPT1adPH+3du1dr1qzRLbfcck11A8UNwRUoRu666y49+uij2rZtm8PbmZeqWrWq1q1bpzNnzjicdc1+67lq1ar2/2ZlZdnP0mWLjY112F72jAOZmZlFOl1O9pngSpUqFfh+sx+D2NhYh6mc0tPTdfDgwSI5zo0bN+rkyZP69NNP1bZtW/v4xTMq5FeNGjW0fft2ZWRkXPbT9TVq1NC6devUqlWrKwbygpLf/ilTpozuvfde3XvvvfaA9dJLLykyMlLu7u45zjoXpLZt28rf319LlixR69at9c0339g/4JSfGvMrv71eo0YNjR07VmPHjtX+/fvVqFEjvfbaa3r//fcl6YqPUVZWlgYOHKj169fr448/Vrt27fJdL1BccY0rUIx4enpq3rx5ioqKUs+ePS+7Xrdu3ZSZmanZs2c7jM+YMUMWi8X+CfTs/146K8HMmTMdbru6uio8PFyffPJJrvNi/vvvv9dyOFcVFhYmb29vvfzyy8rIyCjQ/YaGhsrNzU2zZs1yOGO5aNEiJSUl5TqzQkHLPoN68f7T09M1d+7ca95meHi4Tpw4keN3f/F++vbtq8zMTE2aNCnHOufPn3eYDqwgpsPKT/+cPHnSYZmbm5vq168vwzDsPVCmTBlJyvWbs66Xi4uL7r77bn3xxRd67733dP78eYfLBPJaY37ltddTUlKUmprqsKxGjRry8vJSWlqafaxMmTKXfXxGjBihJUuWaO7cuerTp8811QsUV5xxBYqZy73VerGePXuqQ4cOeu655xQXF6fg4GB9/fXX+uyzzzR69Gj72Z1GjRrpvvvu09y5c5WUlKTbb79d69ev14EDB3Jsc+rUqdqwYYNatGihhx9+WPXr19epU6f0ww8/aN26dTnmJy0I3t7emjdvnh544AHddttt6tevnypWrKj4+HitXLlSrVq1yjWg5UXFihUVGRmpCRMmqEuXLrrzzjsVGxuruXPnqlmzZkUycf7tt9+um266SYMGDdLIkSNlsVj03nvv5fut/4sNHDhQ7777riIiIrRjxw61adNG586d07p16/TEE0+oV69eateunR599FFNmTJFe/bsUefOnWW1WrV//34tXbpUb7zxhv366YKaDiuv/dO5c2f5+fmpVatW8vX11e+//67Zs2ere/fu9ncPmjRpIunCt1H169dPVqtVPXv2VJkyZbR37159/vnnkqQDBw4oKSlJkydPliQFBwdf8Q++bPfee6/efPNNjR8/Xg0bNnT4Zqu81phfee31P/74Q3fccYf69u2r+vXrq1SpUlq+fLmOHTtmn64r+zGaN2+eJk+erJo1a6pSpUrq2LGjZs6cqblz5yokJEQeHh72M7TZ7rrrLvsfBoApOWMqAwAXXDwd1pVcOh2WYVyYXmfMmDFGQECAYbVajVq1ahmvvPKKfUqkbP/9958xcuRIo3z58kaZMmWMnj17GocOHcoxHZZhGMaxY8eMYcOGGYGBgYbVajX8/PyMO+64w1iwYIF9nfxOh7V06dKrPg4bNmwwwsLCDB8fH8Pd3d2oUaOGMXjwYGPXrl32dQYNGmSUKVMm1/vnNh1WttmzZxt169Y1rFar4evrazz++OPG6dOnHdZp165drtMfZR/rpVMTXe7Ycvt9fv/990bLli2N0qVLGwEBAcbTTz9tn5Ype6qkK9UwaNCgHFM+paSkGM8995wRFBRk/z3dfffdxp9//umw3oIFC4wmTZoYpUuXNry8vIyGDRsaTz/9tHHkyJEcNV/vdFiGkbf+eeutt4y2bdsa5cuXN2w2m1GjRg3jqaeeMpKSkhy2NWnSJOPmm282XFxcHKbGyq43t59L67mcrKwsIzAwMNcp5fJT45VcOh1Wtqv1+okTJ4xhw4YZdevWNcqUKWP4+PgYLVq0MD7++GOH7SQkJBjdu3c3vLy8DEn2qbGyp4273M/VphgDijuLYVzHn/4AAABAEeEaVwAAAJgCwRUAAACmQHAFAACAKRBcAQAAYAoEVwAAAJgCwRUAAACmUOK/gCArK0tHjhyRl5dXoX6NIAAAAK6NYRg6c+aMAgIC5OJy+fOqJT64HjlyRIGBgc4uAwAAAFdx6NAhVa5c+bLLS3xwzf56vkOHDsnb29vJ1QAAAOBSycnJCgwMvOrXKpf44Jp9eYC3tzfBFQAAoBi72mWdfDgLAAAApkBwBQAAgCmU+EsFrsQwDJ0/f16ZmZnOLgWFyGq1ytXV1dllAACA63TDBtf09HQdPXpUKSkpzi4Fhcxisahy5cry9PR0dikAAOA63JDBNSsrSwcPHpSrq6sCAgLk5ubGHK8llGEY+vfff3X48GHVqlWLM68AAJjYDRlc09PTlZWVpcDAQHl4eDi7HBSyihUrKi4uThkZGQRXAABM7Ib+cNaVvpkBJQdn0wEAKBluyDOul1PtmZWFst24qd2vuk6jRo0kXTgbHBsbq4YNG0qS6tSpoyVLluR5Xxs3blRqaqq6dOliH7v77ru1ZcsWHT16VKdPn1bZsmWvuI1BgwZp+fLlOnr0qMqUKZPnfQMAABQmTjkWE3v27NGePXv01VdfycvLy347P6FVuhBcV69e7TD22GOPac+ePXm6f3Jysr744gsFBwdr6dKl+dr3tTp//nyR7AcAAJgbwbWYW7NmjVq3bq0mTZqoefPm2rBhgyRp//79atWqlYKDg9WwYUM9//zz2rNnj+bPn68PPvhAjRo10sSJEyVJoaGhqlSpUp729+GHHyo0NFQRERFatGiRw7Lo6Gg1atRIwcHBatq0qeLi4iRJK1euVLNmzRQcHKxGjRpp+/btki68RZ+YmGi/f4UKFez3qVatmsaNG6fmzZtr0KBBSkhIUIcOHdSkSRM1aNBAw4cPV1ZWlv2+06ZNU8OGDRUcHKyWLVsqJSVFPXr0UExMjH2dr7/+Wi1atMjX4wsAAMyDSwWKsb/++ktRUVFas2aNvL29deDAAbVp00ZxcXGaPXu2evToocjISEnSqVOnVK5cOT322GNKTEzUzJkzr2mfixYt0sSJE3XHHXfo8ccfV2xsrOrUqaONGzdq4sSJ2rJli/z9/e3TiP3xxx8aMmSINm/erLp16yojIyPPU4ydPHlS27dvl8ViUWpqqr744gt5enoqMzNTvXr10scff6x+/frpnXfe0SeffKLvvvtOPj4+On36tGw2m0aNGqXx48erf//+kqQ5c+Zo+PDh13TcAACg+OOMazG2evVqHThwQG3btlWjRo109913y8XFRfHx8Wrbtq0WLlyo5557Tl9//fVVr1vNi59//llHjx5V586dZbVadf/99+vtt9+WdOGs6gMPPCB/f39JkoeHhzw8PLR27Vp16dJFdevWlXRhsn8fH5887W/w4MH2D05lZWVp3LhxCg4OVuPGjbVr1y775Q1ffvmlHnvsMft2b7rpJrm6uqpTp05KSkrSjz/+qL///ls7duxQ3759r/txAAAAxRNnXIsxwzDUqVMnh7fDs9WqVUu333671q5dq9mzZ2vmzJn66quvrmt/ixYt0pkzZ1S9enVJUkZGhrKysvTSSy9d0/ZcXV0dvpUsNTXVYfnFXwjw+uuv6/jx49q+fbvc3d0VERGRY/3cjBw5Um+++aZ8fX314IMPymazXVOtAACg+OOMazEWFhamdevWae/evfaxHTt2SLpwjauvr68GDhyo6dOna9u2bZIkb29vJSUl5Xtf6enpev/997Vt2zbFxcUpLi5O//zzj6pUqaKVK1eqZ8+eev/993X06FFJUkpKilJSUhQWFqY1a9Zo3759ki6E3ez916xZ036966effqpz585ddv+nT5+Wn5+f3N3dlZCQ4PDBsDvvvFPz58+3bzcxMdEeiB944AGtWbNG0dHReuyxx/J93AAAwDycGlwzMzP1wgsvKCgoSKVLl1aNGjU0adIkGYZhX8cwDL344ovy9/dX6dKlFRoaqv379zux6qJTs2ZNxcTE6NFHH1VwcLDq1atnv3Z12bJlatiwoRo3bqx7771X8+fPlyTddddd2rNnj8OHs7p3767KlStLkho0aKD27dvn2NeKFStUtWpV+1v+2QYMGKBFixapbdu2Gj9+vMLCwhQcHKx27drp33//Vc2aNRUdHa37779fwcHBatGihWJjYyVJM2bM0KhRo3Tbbbfpxx9/VPny5S97rKNGjdL27dvVoEEDPfDAAwoNDbUve+CBBxQeHq7bb79dwcHB6tatm9LS0iRduGShT58+atWqlQIDA6/tgQYAAKZgMS5OiUXs5Zdf1uuvv6533nlHDRo00K5duzRkyBC99NJLGjlypKQLnyafMmWK3nnnHQUFBemFF17Qzz//rN9++03u7u5X3UdycrJ8fHyUlJQkb29vSRfesj548KCCgoLytA0UX5mZmWrSpInefPNNtWnTJtd1+H0DAFC85ZbXcuPUa1y3bNmiXr16qXv3CxP0V6tWTR9++KH97XDDMDRz5kw9//zz6tWrlyTp3Xffla+vr1asWKF+/fo5rXY43+eff66RI0eqa9eulw2tAIDipbC+7MeZ8vJFQygYTg2ut99+uxYsWKA//vhDtWvX1k8//aTvvvtOr7/+uiTp4MGDSkhIcHjb2MfHRy1atNDWrVsJrje4O++8U3feeaezyyhyJfFJX+KJHwBwdU4Nrs8884ySk5NVt25d+yfQX3rpJQ0YMECSlJCQIEny9fV1uJ+vr6992aXS0tLs1z9KF049Sxc+NJSRkWH/t2EYysrKcpjkHiVTVlaWDMNQRkaGXF1dnV3OdbO5Ou3qnkKV/f8ngJKtJD6H8fx1/fL6GDo1uH788cf64IMPFBMTowYNGmjPnj0aPXq0AgICNGjQoGva5pQpUzRhwoQc419//bU8PDwkSaVKlZKfn5/Onj2r9PT06zoGFH/p6en677//tHnz5hLx9bLTmzu7gsJxvdO5ATCHkvgcxvPX9cvrlxc59cNZgYGBeuaZZzRs2DD72OTJk/X+++9r3759+uuvv1SjRg39+OOPatSokX2ddu3aqVGjRnrjjTdybDO3M66BgYE6ceKEw4ezDh06pGrVqvFhnRtAamqq4uLiFBgYWCJ+37dErXF2CYXil6gwZ5cAoAiUxOcwnr+uX3JysipUqFC8P5yVkpIiFxfHGblcXV3tb98HBQXJz89P69evtwfX5ORkbd++XY8//niu27TZbLlOQm+1WmW1WiVd+CS6xWKRi4tLjv2j5HFxcZHFYnHoATNLy7Q4u4RCURJ+NwCuriQ+h/H8df3y+hg6Nbj27NlTL730kqpUqaIGDRroxx9/1Ouvv64HH3xQkmSxWDR69GhNnjxZtWrVsk+HFRAQoN69ezuzdAAAABQxpwbXN998Uy+88IKeeOIJHT9+XAEBAXr00Uf14osv2td5+umnde7cOT3yyCNKTExU69attXr16sJ5yzfKp+C3KUlRV/8mq+wzyunp6YqNjVXDhg0lSXXq1NGSJUvyvKuNGzcqNTVVXbp0kSQdOXJEQ4YMUVxcnGw2m2rVqqX58+erYsWKl93G+PHjNXnyZP3111+qWrVqnvcNoGQoiTNXMGsFUDI49X1yLy8vzZw5U3///bf+++8//fnnn5o8ebLc3Nzs61gsFk2cOFEJCQlKTU3VunXrVLt2bSdWXTj27NmjPXv26KuvvpKXl5f9dn5Cq3QhuK5evdp+29XVVS+88IJiY2O1d+9eVa9eXU899dRl75+VlaXFixerffv2io6OvubjyY+S8IEpAABQ+LjAs5hbs2aNWrdurSZNmqh58+basGGDJGn//v1q1aqVgoOD1bBhQz3//PPas2eP5s+frw8++MD+la++vr5q3bq1fXstWrRQXFzcZfe3du1a+fr66tVXX1V0dLTDdGErV65Us2bNFBwcrEaNGmn79u2SpK1bt6p169YKDg7Wrbfeqs8++0zShS+U2LNnj/3+TZs21caNGyVJ7du318iRIxUSEqLOnTvr/PnzCgsLU9OmTdWgQQP1799f586ds983OjpajRo1UnBwsJo2baq4uDgNHz5cL7/8sn2d2NhYBQYGEoQBACihnHqpAK7sr7/+UlRUlNasWSNvb28dOHBAbdq0UVxcnGbPnq0ePXooMjJSknTq1CmVK1dOjz32mBITEzVz5swc28vMzNTs2bPt30KWm0WLFunBBx9U48aNVb58ea1bt06dO3fWH3/8oSFDhmjz5s2qW7euMjIylJKSolOnTql3795atmyZ2rRpo6ysLCUmJubp+P744w9t3rxZVqtVhmEoJiZG5cuXl2EYeuKJJ/Tmm2/qmWee0caNGzVx4kRt2bJF/v7+9ikzRowYobCwMI0bN06urq6aO3euHnnkEZUqRVsDAFAS8QpfjK1evVoHDhxQ27Zt7WMuLi6Kj49X27Zt9dRTT+ns2bNq166dw7eL5SY7DN50000aNWpUruucPHlSX3/9tRYuXChJevDBB7Vo0SJ17txZa9euVZcuXVS3bl1JFz795+Pjo5UrV6pOnTr2r1x1cXFRuXLl8nR8999/v/1ThIZhaMaMGVq5cqXOnz+vpKQk3X777ZIunOl94IEH5O/vL0n2+Xjr1Kmj+vXr67PPPlNYWJg+/PBD/fzzz3naNwAAMB+CazFmGIY6deqkmJiYHMtq1aql22+/XWvXrtXs2bM1c+bMK06APHLkSB06dEgrVqy47BRg7733ns6fP6/g4GBJF87Qnjx5UidPnrym+kuVKqXMzEz77dTUVIflnp6e9n/HxMTom2++0aZNm+Tt7a1Zs2bpm2++ueo+Ro0apWnTpunff/9Vp06dcnzLGgAAKDm4xrUYCwsL07p167R371772I4dOyRduMbV19dXAwcO1PTp07Vt2zZJkre3t5KSHGcxGDlypA4cOKDly5c7fPDtUosWLdKyZcsUFxenuLg4HTp0SD179tT777+vsLAwrVmzRvv27ZN04avZss+K7t+/X99++62kCx/uOnXqlCSpZs2a9utgd+zYodjY2Mvu+/Tp06pQoYK8vb115swZLV682L4su4ajR49KujD/b/blAp07d1ZCQoImT56s4cOHX/1BBQAApsUZ12KsZs2aiomJ0aOPPqqUlBSlp6ercePGiomJ0bJly/T+++/Lzc1NWVlZmj9/viTprrvu0nvvvadGjRqpT58+uuOOO/Tmm2+qbt26atGihaQLX+ywfPlyh33t2LFDx48fz3HJwYABA/T8889r1KhRio6O1v3336+MjAy5urpq/vz5at68uZYvX66xY8fqzJkzcnFx0aRJk9SzZ09NnjxZgwYN0ltvvaWQkBA1aNDgssc6cOBAffbZZ6pTp44qVqyoNm3a6O+//5YktW3bVuPHj1dYWJgsFovc3Ny0bNkyVa1aVRaLRUOHDlVMTIxCQkIK8uEHUJIU1nSHzpSHqRaBksapX/laFJKTk+Xj4+PwFWKpqak6ePCggoKCSsRXgN7oevTooXvvvVcPPPBArstL2u+7JM6xKTHPZnFSEnsszr2/s0soeCYNriWyv3j+um655bXccMYVprVr1y7169dP9evXV//+JfBF6UbDGTEAwFUQXGFaTZs21YEDB5xdBgAAKCIEVwAAgOtREt8xkorlu0Y39KwCF38rFEquEn4ZNwAAN4wb8oyrm5ubXFxcdOTIEVWsWFFubm6yWCzOLguFwDAM/fvvv7JYLPYvOwAAAOZ0QwZXFxcXBQUF6ejRozpy5Iizy0Ehs1gsqly5slxdXZ1dCgAAuA43ZHCVLpx1rVKlis6fP+/w7U4oeaxWK6EVAIAS4IYNrpLsbx/zFjIAAEDxd0N/OAsAAADmQXAFAACAKRBcAQAAYAoEVwAAAJgCwRUAAACmQHAFAACAKRBcAQAAYAoEVwAAAJgCwRUAAACmQHAFAACAKRBcAQAAYAqlnF1ASVTtmZXOLqHAxU3t7uwSAADADY4zrgAAADAFzrgib6J8nF1B4YhKcnYFAAAgjzjjCgAAAFMguAIAAMAUCK4AAAAwBYIrAAAATIHgCgAAAFMguAIAAMAUnBpcq1WrJovFkuNn2LBhkqTU1FQNGzZM5cuXl6enp8LDw3Xs2DFnlgwAAAAncWpw3blzp44ePWr/Wbt2rSTpnnvukSSNGTNGX3zxhZYuXapNmzbpyJEj6tOnjzNLBgAAgJM49QsIKlas6HB76tSpqlGjhtq1a6ekpCQtWrRIMTEx6tixoyQpOjpa9erV07Zt29SyZUtnlAwAAAAnKTbfnJWenq73339fERERslgs2r17tzIyMhQaGmpfp27duqpSpYq2bt162eCalpamtLQ0++3k5GRJUkZGhjIyMgr3IP4/m6tRJPspShku7s4uoXAUUU8UpJLYX1IJ7TET9pdUMnuM/io+6C8TKcIey2tGsxiGUSw66OOPP1b//v0VHx+vgIAAxcTEaMiQIQ4hVJKaN2+uDh06aNq0abluJyoqShMmTMgxHhMTIw8Pj0KpHQAAANcuJSVF/fv3V1JSkry9vS+7XrE547po0SJ17dpVAQEB17WdyMhIRURE2G8nJycrMDBQnTt3vuIDUZBuiVpTJPspSr/Yhjq7hMIRedjZFeRbSewvqYT2mAn7SyqZPUZ/FR/0l4kUYY9lv0N+NcUiuP79999at26dPv30U/uYn5+f0tPTlZiYqLJly9rHjx07Jj8/v8tuy2azyWaz5Ri3Wq2yWq0FWvflpGVaimQ/RcmalersEgpHEfVEQSqJ/SWV0B4zYX9JJbPH6K/ig/4ykSLssbxmtGIxj2t0dLQqVaqk7t2728eaNGkiq9Wq9evX28diY2MVHx+vkJAQZ5QJAAAAJ3L6GdesrCxFR0dr0KBBKlXq/8rx8fHR0KFDFRERoXLlysnb21sjRoxQSEgIMwoAAADcgJweXNetW6f4+Hg9+OCDOZbNmDFDLi4uCg8PV1pamsLCwjR37lwnVAkAAABnc3pw7dy5sy43sYG7u7vmzJmjOXPmFHFVAAAAKG6KxTWuAAAAwNUQXAEAAGAKBFcAAACYAsEVAAAApkBwBQAAgCkQXAEAAGAKBFcAAACYAsEVAAAApkBwBQAAgCkQXAEAAGAKBFcAAACYAsEVAAAApkBwBQAAgCkQXAEAAGAKBFcAAACYAsEVAAAApkBwBQAAgCkQXAEAAGAKBFcAAACYAsEVAAAApkBwBQAAgCkQXAEAAGAKBFcAAACYAsEVAAAApkBwBQAAgCkQXAEAAGAKBFcAAACYAsEVAAAApkBwBQAAgCkQXAEAAGAKBFcAAACYAsEVAAAApkBwBQAAgCkQXAEAAGAKTg+u//zzj+6//36VL19epUuXVsOGDbVr1y77csMw9OKLL8rf31+lS5dWaGio9u/f78SKAQAA4AxODa6nT59Wq1atZLVatWrVKv3222967bXXdNNNN9nXmT59umbNmqX58+dr+/btKlOmjMLCwpSamurEygEAAFDUSjlz59OmTVNgYKCio6PtY0FBQfZ/G4ahmTNn6vnnn1evXr0kSe+++658fX21YsUK9evXr8hrBgAAgHM49Yzr559/rqZNm+qee+5RpUqV1LhxYy1cuNC+/ODBg0pISFBoaKh9zMfHRy1atNDWrVudUTIAAACcxKlnXP/66y/NmzdPERERevbZZ7Vz506NHDlSbm5uGjRokBISEiRJvr6+Dvfz9fW1L7tUWlqa0tLS7LeTk5MlSRkZGcrIyCikI3FkczWKZD9FKcPF3dklFI4i6omCVBL7SyqhPWbC/pJKZo/RX8UH/WUiRdhjec1oFsMwnNZBbm5uatq0qbZs2WIfGzlypHbu3KmtW7dqy5YtatWqlY4cOSJ/f3/7On379pXFYtGSJUtybDMqKkoTJkzIMR4TEyMPD4/CORAAAABcs5SUFPXv319JSUny9va+7HpOPePq7++v+vXrO4zVq1dPn3zyiSTJz89PknTs2DGH4Hrs2DE1atQo121GRkYqIiLCfjs5OVmBgYHq3LnzFR+IgnRL1Joi2U9R+sU21NklFI7Iw86uIN9KYn9JJbTHTNhfUsnsMfqr+KC/TKQIeyz7HfKrcWpwbdWqlWJjYx3G/vjjD1WtWlXShQ9q+fn5af369fagmpycrO3bt+vxxx/PdZs2m002my3HuNVqldVqLdgDuIy0TEuR7KcoWbNK6CwORdQTBakk9pdUQnvMhP0llcweo7+KD/rLRIqwx/Ka0ZwaXMeMGaPbb79dL7/8svr27asdO3ZowYIFWrBggSTJYrFo9OjRmjx5smrVqqWgoCC98MILCggIUO/evZ1ZOgAAAIqYU4Nrs2bNtHz5ckVGRmrixIkKCgrSzJkzNWDAAPs6Tz/9tM6dO6dHHnlEiYmJat26tVavXi139xJ6ITQAAABy5dTgKkk9evRQjx49LrvcYrFo4sSJmjhxYhFWBQAAgOLG6V/5CgAAAOQFwRUAAACmQHAFAACAKRBcAQAAYAoEVwAAAJgCwRUAAACmQHAFAACAKRBcAQAAYAoEVwAAAJgCwRUAAACmQHAFAACAKRBcAQAAYAoEVwAAAJgCwRUAAACmQHAFAACAKRBcAQAAYAoEVwAAAJgCwRUAAACmQHAFAACAKRBcAQAAYAoEVwAAAJgCwRUAAACmQHAFAACAKRBcAQAAYAoEVwAAAJgCwRUAAACmQHAFAACAKRBcAQAAYAoEVwAAAJgCwRUAAACmUCo/K2dlZWnTpk369ttv9ffffyslJUUVK1ZU48aNFRoaqsDAwMKqEwAAADe4PJ1x/e+//zR58mQFBgaqW7duWrVqlRITE+Xq6qoDBw5o/PjxCgoKUrdu3bRt27bCrhkAAAA3oDydca1du7ZCQkK0cOFCderUSVarNcc6f//9t2JiYtSvXz8999xzevjhhwu8WAAAANy48hRcv/76a9WrV++K61StWlWRkZF68sknFR8fXyDFAQAAANnydKnA1ULrxaxWq2rUqHHNBQEAAAC5ueZZBc6fP685c+bonnvuUZ8+ffTaa68pNTU1X9uIioqSxWJx+Klbt659eWpqqoYNG6by5cvL09NT4eHhOnbs2LWWDAAAABPL16wCFxs5cqT++OMP9enTRxkZGXr33Xe1a9cuffjhh/naToMGDbRu3br/K6jU/5U0ZswYrVy5UkuXLpWPj4+GDx+uPn366Pvvv7/WsgEAAGBSeQ6uy5cv11133WW//fXXXys2Nlaurq6SpLCwMLVs2TL/BZQqJT8/vxzjSUlJWrRokWJiYtSxY0dJUnR0tOrVq6dt27Zd074AAABgXnkOrm+//bbeeecdzZ07VwEBAbrtttv02GOPKTw8XBkZGVq4cKGaNWuW7wL279+vgIAAubu7KyQkRFOmTFGVKlW0e/duZWRkKDQ01L5u3bp1VaVKFW3duvWywTUtLU1paWn228nJyZKkjIwMZWRk5Lu+a2FzNYpkP0Upw8Xd2SUUjiLqiYJUEvtLKqE9ZsL+kkpmj9FfxQf9ZSJF2GN5zWgWwzDy3EFLlizRCy+8oBEjRuiBBx7QpEmTtHHjRmVmZqpVq1aKiopSxYoV81zkqlWrdPbsWdWpU0dHjx7VhAkT9M8//+iXX37RF198oSFDhjiEUElq3ry5OnTooGnTpuW6zaioKE2YMCHHeExMjDw8PPJcGwAAAIpGSkqK+vfvr6SkJHl7e192vXwFV0lKTEzU008/rZ9++knz589X48aNr7vYi7ddtWpVvf766ypduvQ1BdfczrgGBgbqxIkTV3wgCtItUWuKZD9F6RfbUGeXUDgiDzu7gnwrif0lldAeM2F/SSWzx+iv4oP+MpEi7LHk5GRVqFDhqsE13x/OKlu2rBYsWKDNmzdr4MCB6tKliyZNmiR39+s/TV62bFnVrl1bBw4cUKdOnZSenq7ExESVLVvWvs6xY8dyvSY2m81mk81myzFutVpz/eKEwpCWaSmS/RQla1b+ZowwjSLqiYJUEvtLKqE9ZsL+kkpmj9FfxQf9ZSJF2GN5zWh5ng4rPj5effv2VcOGDTVgwADVqlVLu3fvloeHh4KDg7Vq1aprLjbb2bNn9eeff8rf319NmjSR1WrV+vXr7ctjY2MVHx+vkJCQ694XAAAAzCXPwXXgwIFycXHRK6+8okqVKunRRx+Vm5ubJkyYoBUrVmjKlCnq27dvvnb+5JNPatOmTYqLi9OWLVt01113ydXVVffdd598fHw0dOhQRUREaMOGDdq9e7eGDBmikJAQZhQAAAC4AeX5UoFdu3bpp59+Uo0aNRQWFqagoCD7snr16mnz5s1asGBBvnZ++PBh3XfffTp58qQqVqyo1q1ba9u2bfYPeM2YMUMuLi4KDw9XWlqawsLCNHfu3HztAwAAACVDnoNrkyZN9OKLL2rQoEFat26dGjZsmGOdRx55JF87/+ijj6643N3dXXPmzNGcOXPytV0AAACUPHm+VODdd99VWlqaxowZo3/++UdvvfVWYdYFAAAAOMjzGdeqVatq2bJlhVkLAAAAcFl5OuN67ty5fG00v+sDAAAAV5On4FqzZk1NnTpVR48evew6hmFo7dq16tq1q2bNmlVgBQIAAABSHi8V2Lhxo5599llFRUUpODhYTZs2VUBAgNzd3XX69Gn99ttv2rp1q0qVKqXIyEg9+uijhV03AAAAbjB5Cq516tTRJ598ovj4eC1dulTffvuttmzZov/++08VKlRQ48aNtXDhQnXt2lWurq6FXTMAAABuQPn6ytcqVapo7NixGjt2bGHVAwAAAOQqz9NhAQAAAM5EcAUAAIApEFwBAABgCgRXAAAAmALBFQAAAKaQ7+BarVo1TZw4UfHx8YVRDwAAAJCrfAfX0aNH69NPP1X16tXVqVMnffTRR0pLSyuM2gAAAAC7awque/bs0Y4dO1SvXj2NGDFC/v7+Gj58uH744YfCqBEAAAC49mtcb7vtNs2aNUtHjhzR+PHj9b///U/NmjVTo0aN9Pbbb8swjIKsEwAAADe4fH1z1sUyMjK0fPlyRUdHa+3atWrZsqWGDh2qw4cP69lnn9W6desUExNTkLUCAADgBpbv4PrDDz8oOjpaH374oVxcXDRw4EDNmDFDdevWta9z1113qVmzZgVaKAAAAG5s+Q6uzZo1U6dOnTRv3jz17t1bVqs1xzpBQUHq169fgRQIAAAASNcQXP/66y9VrVr1iuuUKVNG0dHR11wUAAAAcKl8fzjr+PHj2r59e47x7du3a9euXQVSFAAAAHCpfAfXYcOG6dChQznG//nnHw0bNqxAigIAAAAule/g+ttvv+m2227LMd64cWP99ttvBVIUAAAAcKl8B1ebzaZjx47lGD969KhKlbrm2bUAAACAK8p3cO3cubMiIyOVlJRkH0tMTNSzzz6rTp06FWhxAAAAQLZ8nyJ99dVX1bZtW1WtWlWNGzeWJO3Zs0e+vr567733CrxAAAAAQLqG4HrzzTdr7969+uCDD/TTTz+pdOnSGjJkiO67775c53QFAAAACsI1XZRapkwZPfLIIwVdCwAAAHBZ1/xpqt9++03x8fFKT093GL/zzjuvuygAAADgUtf0zVl33XWXfv75Z1ksFhmGIUmyWCySpMzMzIKtEAAAANA1zCowatQoBQUF6fjx4/Lw8NCvv/6qzZs3q2nTptq4cWMhlAgAAABcwxnXrVu36ptvvlGFChXk4uIiFxcXtW7dWlOmTNHIkSP1448/FkadAAAAuMHl+4xrZmamvLy8JEkVKlTQkSNHJElVq1ZVbGxswVYHAAAA/H/5PuN6yy236KefflJQUJBatGih6dOny83NTQsWLFD16tULo0YAAAAg/2dcn3/+eWVlZUmSJk6cqIMHD6pNmzb66quvNGvWrGsuZOrUqbJYLBo9erR9LDU1VcOGDVP58uXl6emp8PDwXL9uFgAAACVfvs+4hoWF2f9ds2ZN7du3T6dOndJNN91kn1kgv3bu3Km33npLt956q8P4mDFjtHLlSi1dulQ+Pj4aPny4+vTpo++///6a9gMAAADzytcZ14yMDJUqVUq//PKLw3i5cuWuObSePXtWAwYM0MKFC3XTTTfZx5OSkrRo0SK9/vrr6tixo5o0aaLo6Ght2bJF27Ztu6Z9AQAAwLzyFVytVquqVKlSoHO1Dhs2TN27d1doaKjD+O7du5WRkeEwXrduXVWpUkVbt24tsP0DAADAHPJ9qcBzzz2nZ599Vu+9957KlSt3XTv/6KOP9MMPP2jnzp05liUkJMjNzU1ly5Z1GPf19VVCQsJlt5mWlqa0tDT77eTkZEkXzhZnZGRcV715ZXM1imQ/RSnDxd3ZJRSOIuqJglQS+0sqoT1mwv6SSmaP0V/FB/1lIkXYY3nNaPkOrrNnz9aBAwcUEBCgqlWrqkyZMg7Lf/jhhzxt59ChQxo1apTWrl0rd/eC+4VPmTJFEyZMyDH+9ddfy8PDo8D2cyXTmxfJborUV1rg7BIKx1dfObuCfCuJ/SWV0B4zYX9JJbPH6K/ig/4ykSLssZSUlDytl+/g2rt37/zeJVe7d+/W8ePHddttt9nHMjMztXnzZs2ePVtr1qxRenq6EhMTHc66Hjt2TH5+fpfdbmRkpCIiIuy3k5OTFRgYqM6dO8vb27tAar+aW6LWFMl+itIvtqHOLqFwRB52dgX5VhL7SyqhPWbC/pJKZo/RX8UH/WUiRdhj2e+QX02+g+v48ePzXUxu7rjjDv38888OY0OGDFHdunU1btw4BQYGymq1av369QoPD5ckxcbGKj4+XiEhIZfdrs1mk81myzFutVpltVoLpParScu8tg+qFWfWrFRnl1A4iqgnClJJ7C+phPaYCftLKpk9Rn8VH/SXiRRhj+U1o+U7uBYULy8v3XLLLQ5jZcqUUfny5e3jQ4cOVUREhMqVKydvb2+NGDFCISEhatmypTNKBgAAgBPlO7i6uLhcceqrgpxxYMaMGXJxcVF4eLjS0tIUFhamuXPnFtj2AQAAYB75Dq7Lly93uJ2RkaEff/xR77zzTq4fisqPjRs3Otx2d3fXnDlzNGfOnOvaLgAAAMwv38G1V69eOcbuvvtuNWjQQEuWLNHQoSX0AmUAAAA4Vb6+gOBKWrZsqfXr1xfU5gAAAAAHBRJc//vvP82aNUs333xzQWwOAAAAyCHflwrcdNNNDh/OMgxDZ86ckYeHh95///0CLQ4AAADIlu/gOmPGDIfg6uLioooVK6pFixa66aabCrQ4AAAAIFu+g+vgwYMLoQwAAADgyvJ9jWt0dLSWLl2aY3zp0qV65513CqQoAAAA4FL5Dq5TpkxRhQoVcoxXqlRJL7/8coEUBQAAAFwq38E1Pj5eQUFBOcarVq2q+Pj4AikKAAAAuFS+g2ulSpW0d+/eHOM//fSTypcvXyBFAQAAAJfKd3C97777NHLkSG3YsEGZmZnKzMzUN998o1GjRqlfv36FUSMAAACQ/1kFJk2apLi4ON1xxx0qVerC3bOysjRw4ECucQUAAEChyXdwdXNz05IlSzR58mTt2bNHpUuXVsOGDVW1atXCqA8AAACQdA3BNVutWrVUq1atgqwFAAAAuKx8X+MaHh6uadOm5RifPn267rnnngIpCgAAALhUvoPr5s2b1a1btxzjXbt21ebNmwukKAAAAOBS+Q6uZ8+elZubW45xq9Wq5OTkAikKAAAAuFS+g2vDhg21ZMmSHOMfffSR6tevXyBFAQAAAJfK94ezXnjhBfXp00d//vmnOnbsKElav369PvzwQy1durTACwQAAACkawiuPXv21IoVK/Tyyy9r2bJlKl26tG699VatW7dO7dq1K4waAQAAgGubDqt79+7q3r17jvFffvlFt9xyy3UXBQAAAFwq39e4XurMmTNasGCBmjdvruDg4IKoCQAAAMjhmoPr5s2bNXDgQPn7++vVV19Vx44dtW3btoKsDQAAALDL16UCCQkJWrx4sRYtWqTk5GT17dtXaWlpWrFiBTMKAAAAoFDl+Yxrz549VadOHe3du1czZ87UkSNH9OabbxZmbQAAAIBdns+4rlq1SiNHjtTjjz+uWrVqFWZNAAAAQA55PuP63Xff6cyZM2rSpIlatGih2bNn68SJE4VZGwAAAGCX5+DasmVLLVy4UEePHtWjjz6qjz76SAEBAcrKytLatWt15syZwqwTAAAAN7h8zypQpkwZPfjgg/ruu+/0888/a+zYsZo6daoqVaqkO++8szBqBAAAAK5vHtc6depo+vTpOnz4sD788MOCqgkAAADI4bq/gECSXF1d1bt3b33++ecFsTkAAAAghwIJrgAAAEBhI7gCAADAFAiuAAAAMAWCKwAAAEzBqcF13rx5uvXWW+Xt7S1vb2+FhIRo1apV9uWpqakaNmyYypcvL09PT4WHh+vYsWNOrBgAAADO4tTgWrlyZU2dOlW7d+/Wrl271LFjR/Xq1Uu//vqrJGnMmDH64osvtHTpUm3atElHjhxRnz59nFkyAAAAnKSUM3fes2dPh9svvfSS5s2bp23btqly5cpatGiRYmJi1LFjR0lSdHS06tWrp23btqlly5bOKBkAAABO4tTgerHMzEwtXbpU586dU0hIiHbv3q2MjAyFhoba16lbt66qVKmirVu3Xja4pqWlKS0tzX47OTlZkpSRkaGMjIzCPYj/z+ZqFMl+ilKGi7uzSygcRdQTBakk9pdUQnvMhP0llcweo7+KD/rLRIqwx/Ka0SyGYTi1g37++WeFhIQoNTVVnp6eiomJUbdu3RQTE6MhQ4Y4hFBJat68uTp06KBp06blur2oqChNmDAhx3hMTIw8PDwK5RgAAABw7VJSUtS/f38lJSXJ29v7sus5/YxrnTp1tGfPHiUlJWnZsmUaNGiQNm3adM3bi4yMVEREhP12cnKyAgMD1blz5ys+EAXplqg1RbKfovSLbaizSygckYedXUG+lcT+kkpoj5mwv6SS2WP0V/FBf5lIEfZY9jvkV+P04Orm5qaaNWtKkpo0aaKdO3fqjTfe0L333qv09HQlJiaqbNmy9vWPHTsmPz+/y27PZrPJZrPlGLdarbJarQVef27SMi1Fsp+iZM1KdXYJhaOIeqIglcT+kkpoj5mwv6SS2WP0V/FBf5lIEfZYXjNasZvHNSsrS2lpaWrSpImsVqvWr19vXxYbG6v4+HiFhIQ4sUIAAAA4g1PPuEZGRqpr166qUqWKzpw5o5iYGG3cuFFr1qyRj4+Phg4dqoiICJUrV07e3t4aMWKEQkJCmFEAAADgBuTU4Hr8+HENHDhQR48elY+Pj2699VatWbNGnTp1kiTNmDFDLi4uCg8PV1pamsLCwjR37lxnlgwAAAAncWpwXbRo0RWXu7u7a86cOZozZ04RVQQAAIDiqthd4woAAADkhuAKAAAAUyC4AgAAwBQIrgAAADAFgisAAABMgeAKAAAAUyC4AgAAwBQIrgAAADAFgisAAABMgeAKAAAAUyC4AgAAwBQIrgAAADAFgisAAABMgeAKAAAAUyC4AgAAwBQIrgAAADAFgisAAABMgeAKAAAAUyC4AgAAwBQIrgAAADAFgisAAABMgeAKAAAAUyC4AgAAwBQIrgAAADAFgisAAABMgeAKAAAAUyC4AgAAwBQIrgAAADAFgisAAABMgeAKAAAAUyC4AgAAwBQIrgAAADAFgisAAABMgeAKAAAAU3BqcJ0yZYqaNWsmLy8vVapUSb1791ZsbKzDOqmpqRo2bJjKly8vT09PhYeH69ixY06qGAAAAM7i1OC6adMmDRs2TNu2bdPatWuVkZGhzp0769y5c/Z1xowZoy+++EJLly7Vpk2bdOTIEfXp08eJVQMAAMAZSjlz56tXr3a4vXjxYlWqVEm7d+9W27ZtlZSUpEWLFikmJkYdO3aUJEVHR6tevXratm2bWrZs6YyyAQAA4ARODa6XSkpKkiSVK1dOkrR7925lZGQoNDTUvk7dunVVpUoVbd26NdfgmpaWprS0NPvt5ORkSVJGRoYyMjIKs3w7m6tRJPspShku7s4uoXAUUU8UpJLYX1IJ7TET9pdUMnuM/io+6C8TKcIey2tGsxiGUSw6KCsrS3feeacSExP13XffSZJiYmI0ZMgQhyAqSc2bN1eHDh00bdq0HNuJiorShAkTcozHxMTIw8OjcIoHAADANUtJSVH//v2VlJQkb2/vy65XbM64Dhs2TL/88os9tF6ryMhIRURE2G8nJycrMDBQnTt3vuIDUZBuiVpTJPspSr/Yhjq7hMIRedjZFeRbSewvqYT2mAn7SyqZPUZ/FR/0l4kUYY9lv0N+NcUiuA4fPlxffvmlNm/erMqVK9vH/fz8lJ6ersTERJUtW9Y+fuzYMfn5+eW6LZvNJpvNlmPcarXKarUWeO25Scu0FMl+ipI1K9XZJRSOIuqJglQS+0sqoT1mwv6SSmaP0V/FB/1lIkXYY3nNaE6dVcAwDA0fPlzLly/XN998o6CgIIflTZo0kdVq1fr16+1jsbGxio+PV0hISFGXCwAAACdy6hnXYcOGKSYmRp999pm8vLyUkJAgSfLx8VHp0qXl4+OjoUOHKiIiQuXKlZO3t7dGjBihkJAQZhQAAAC4wTg1uM6bN0+S1L59e4fx6OhoDR48WJI0Y8YMubi4KDw8XGlpaQoLC9PcuXOLuFIAAAA4m1ODa14mNHB3d9ecOXM0Z86cIqgIAAAAxZVTr3EFAAAA8orgCgAAAFMguAIAAMAUCK4AAAAwBYIrAAAATIHgCgAAAFMguAIAAMAUCK4AAAAwBYIrAAAATIHgCgAAAFMguAIAAMAUCK4AAAAwBYIrAAAATIHgCgAAAFMguAIAAMAUCK4AAAAwBYIrAAAATIHgCgAAAFMguAIAAMAUCK4AAAAwBYIrAAAATIHgCgAAAFMguAIAAMAUCK4AAAAwBYIrAAAATIHgCgAAAFMguAIAAMAUCK4AAAAwBYIrAAAATIHgCgAAAFMguAIAAMAUCK4AAAAwBYIrAAAATIHgCgAAAFNwanDdvHmzevbsqYCAAFksFq1YscJhuWEYevHFF+Xv76/SpUsrNDRU+/fvd06xAAAAcCqnBtdz584pODhYc+bMyXX59OnTNWvWLM2fP1/bt29XmTJlFBYWptTU1CKuFAAAAM5Wypk779q1q7p27ZrrMsMwNHPmTD3//PPq1auXJOndd9+Vr6+vVqxYoX79+hVlqQAAAHCyYnuN68GDB5WQkKDQ0FD7mI+Pj1q0aKGtW7c6sTIAAAA4g1PPuF5JQkKCJMnX19dh3NfX174sN2lpaUpLS7PfTk5OliRlZGQoIyOjECrNyeZqFMl+ilKGi7uzSygcRdQTBakk9pdUQnvMhP0llcweo7+KD/rLRIqwx/Ka0SyGYRSLDrJYLFq+fLl69+4tSdqyZYtatWqlI0eOyN/f375e3759ZbFYtGTJkly3ExUVpQkTJuQYj4mJkYeHR6HUDgAAgGuXkpKi/v37KykpSd7e3pddr9iecfXz85MkHTt2zCG4Hjt2TI0aNbrs/SIjIxUREWG/nZycrMDAQHXu3PmKD0RBuiVqTZHspyj9Yhvq7BIKR+RhZ1eQbyWxv6QS2mMm7C+pZPYY/VV80F8mUoQ9lv0O+dUU2+AaFBQkPz8/rV+/3h5Uk5OTtX37dj3++OOXvZ/NZpPNZssxbrVaZbVaC6tcB2mZliLZT1GyZpXQmRyKqCcKUknsL6mE9pgJ+0sqmT1GfxUf9JeJFGGP5TWjOTW4nj17VgcOHLDfPnjwoPbs2aNy5cqpSpUqGj16tCZPnqxatWopKChIL7zwggICAuyXEwAAAODG4dTgumvXLnXo0MF+O/st/kGDBmnx4sV6+umnde7cOT3yyCNKTExU69attXr1arm7l9CLoAEAAHBZTg2u7du315U+G2axWDRx4kRNnDixCKsCAABAcVRs53EFAAAALkZwBQAAgCkQXAEAAGAKBFcAAACYAsEVAAAApkBwBQAAgCkQXAEAAGAKBFcAAACYAsEVAAAApkBwBQAAgCkQXAEAAGAKBFcAAACYAsEVAAAApkBwBQAAgCkQXAEAAGAKBFcAAACYAsEVAAAApkBwBQAAgCkQXAEAAGAKBFcAAACYAsEVAAAApkBwBQAAgCkQXAEAAGAKBFcAAACYAsEVAAAApkBwBQAAgCkQXAEAAGAKBFcAAACYAsEVAAAApkBwBQAAgCkQXAEAAGAKBFcAAACYAsEVAAAApkBwBQAAgCkQXAEAAGAKpgiuc+bMUbVq1eTu7q4WLVpox44dzi4JAAAARazYB9clS5YoIiJC48eP1w8//KDg4GCFhYXp+PHjzi4NAAAARajYB9fXX39dDz/8sIYMGaL69etr/vz58vDw0Ntvv+3s0gAAAFCESjm7gCtJT0/X7t27FRkZaR9zcXFRaGiotm7dmut90tLSlJaWZr+dlJQkSTp16pQyMjIKt+D/r9T5c0Wyn6J0Mt3N2SUUjpMnnV1BvpXE/pJKaI+ZsL+kktlj9FfxQX+ZSBH22JkzZyRJhmFccb1iHVxPnDihzMxM+fr6Ooz7+vpq3759ud5nypQpmjBhQo7xoKCgQqnxRlHB2QUUlikl9shMp0T+JuivYqNE/ibor2KjxP4mnNBjZ86ckY+Pz2WXF+vgei0iIyMVERFhv52VlaVTp06pfPnyslgsTqzMvJKTkxUYGKhDhw7J29vb2eWgBKLHUJjoLxQm+qtgGIahM2fOKCAg4IrrFevgWqFCBbm6uurYsWMO48eOHZOfn1+u97HZbLLZbA5jZcuWLawSbyje3t78T4lCRY+hMNFfKEz01/W70pnWbMX6w1lubm5q0qSJ1q9fbx/LysrS+vXrFRIS4sTKAAAAUNSK9RlXSYqIiNCgQYPUtGlTNW/eXDNnztS5c+c0ZMgQZ5cGAACAIlTsg+u9996rf//9Vy+++KISEhLUqFEjrV69OscHtlB4bDabxo8fn+MSDKCg0GMoTPQXChP9VbQsxtXmHQAAAACKgWJ9jSsAAACQjeAKAAAAUyC4AgAAwBQIriXAxo0bZbFYlJiYWKT7Xbx48XXPkRsXFyeLxaI9e/Zcdh1nHR+AkqFatWqaOXPmNd+/IJ7rULzlp0eut59wfQiuxZzFYrniT1RUlLNLBBwMHjxYvXv3dhhbtmyZ3N3d9dprr2nw4MGyWCyaOnWqwzorVqxw+Ha77D9YGjRooMzMTId1y5Ytq8WLFxfWIaCI5dYzBWnnzp165JFH8rRubqHk3nvv1R9//FEIleFqsp8vLBaLrFarfH191alTJ7399tvKysoqsP3kp0fys25e8DqfPwTXYu7o0aP2n5kzZ8rb29th7Mknn7ym7aanpxdwpUDu/ve//2nAgAGaN2+exo4dK0lyd3fXtGnTdPr06ave/6+//tK7775b2GWiBKtYsaI8PDyu+f6lS5dWpUqVCrAi5EeXLl109OhRxcXFadWqVerQoYNGjRqlHj166Pz58wWyj/z0yPX206Xy8zpvGEaBHbNZEVyLOT8/P/uPj4+PLBaLw5inp6d93d27d6tp06by8PDQ7bffrtjYWPuyqKgoNWrUSP/73/8UFBQkd3d3SVJiYqIeeughVaxYUd7e3urYsaN++ukn+/1++ukndejQQV5eXvL29laTJk20a9cuhxrXrFmjevXqydPT0/4Eky0rK0sTJ05U5cqVZbPZ7PPwXslXX32l2rVrq3Tp0urQoYPi4uKu5yGEE02fPl0jRozQRx995PClIaGhofLz89OUKVOuuo0RI0Zo/PjxSktLK8xSUUxt2rRJzZs3l81mk7+/v5555hmHF+4zZ85owIABKlOmjPz9/TVjxgy1b99eo0ePtq9z8VlUwzAUFRWlKlWqyGazKSAgQCNHjpQktW/fXn///bfGjBljP9sl5X6pwBdffKFmzZrJ3d1dFSpU0F133VWoj8ONzGazyc/PTzfffLNuu+02Pfvss/rss8+0atUq+zsvV3stk678O8trj1y6riTFx8erV69e8vT0lLe3t/r27evwVfXZr7/vvfeeqlWrJh8fH/Xr109nzpyRdOXX+X379snLy0urVq1SkyZNZLPZ9N133ykrK0tTpkxRUFCQSpcureDgYC1btszheH/55Rd17dpVnp6e8vX11QMPPKATJ04UxK/EqQiuJchzzz2n1157Tbt27VKpUqX04IMPOiw/cOCAPvnkE3366af2a0rvueceHT9+XKtWrdLu3bt122236Y477tCpU6ckSQMGDFDlypW1c+dO7d69W88884ysVqt9mykpKXr11Vf13nvvafPmzYqPj3f46/CNN97Qa6+9pldffVV79+5VWFiY7rzzTu3fvz/XYzh06JD69Omjnj17as+ePXrooYf0zDPPFPAjhaIwbtw4TZo0SV9++WWOF3VXV1e9/PLLevPNN3X48OErbmf06NE6f/683nzzzcIsF8XQP//8o27duqlZs2b66aefNG/ePC1atEiTJ0+2rxMREaHvv/9en3/+udauXatvv/1WP/zww2W3+cknn2jGjBl66623tH//fq1YsUINGzaUJH366aeqXLmyJk6caD/blZuVK1fqrrvuUrdu3fTjjz9q/fr1at68ecEePK6oY8eOCg4O1qeffirp6q9l+fmdXalHLpWVlaVevXrp1KlT2rRpk9auXau//vpL9957r8N6f/75p1asWKEvv/xSX375pTZt2pTjcqkreeaZZzR16lT9/vvvuvXWWzVlyhS9++67mj9/vn799VeNGTNG999/vzZt2iTpQpDv2LGjGjdurF27dmn16tU6duyY+vbtm+d9FlsGTCM6Otrw8fHJMb5hwwZDkrFu3Tr72MqVKw1Jxn///WcYhmGMHz/esFqtxvHjx+3rfPvtt4a3t7eRmprqsL0aNWoYb731lmEYhuHl5WUsXrz4svVIMg4cOGAfmzNnjuHr62u/HRAQYLz00ksO92vWrJnxxBNPGIZhGAcPHjQkGT/++KNhGIYRGRlp1K9f32H9cePGGZKM06dP51oHipdBgwYZbm5uhiRj/fr1uS7v1auXYRiG0bJlS+PBBx80DMMwli9fblz8lJTd16dPnzbmz59vlCtXzkhMTDQMwzB8fHyM6OjoQj8WFI2Le+Jizz77rFGnTh0jKyvLPjZnzhzD09PTyMzMNJKTkw2r1WosXbrUvjwxMdHw8PAwRo0aZR+rWrWqMWPGDMMwDOO1114zateubaSnp+day8XrZrv0uTckJMQYMGBAvo8T+Xe53jAMw7j33nuNevXq5em17Gq/s2vtka+//tpwdXU14uPj7ct//fVXQ5KxY8cOwzAuvP56eHgYycnJ9nWeeuopo0WLFjm2fWmvZT8Prlixwj6WmppqeHh4GFu2bHG479ChQ4377rvPMAzDmDRpktG5c2eH5YcOHTIkGbGxsZd9HMyAM64lyK233mr/t7+/vyTp+PHj9rGqVauqYsWK9ts//fSTzp49q/Lly8vT09P+c/DgQf3555+SLpzNeOihhxQaGqqpU6fax7N5eHioRo0aDvvN3mdycrKOHDmiVq1aOdynVatW+v3333M9ht9//10tWrRwGAsJCcnzY4Di4dZbb1W1atU0fvx4nT179rLrTZs2Te+8885l+yHb0KFDVb58eU2bNq2gS0Ux9vvvvyskJMThQ3utWrXS2bNndfjwYf3111/KyMhwOHPm4+OjOnXqXHab99xzj/777z9Vr15dDz/8sJYvX57vawb37NmjO+64I/8HhAJlGIYsFkueXsvy8zvLT4/8/vvvCgwMVGBgoH2sfv36Klu2rMPzWrVq1eTl5WW/ffFrZV40bdrU/u8DBw4oJSVFnTp1cjjed9991368P/30kzZs2OCwvG7dupKU43XcbEo5uwAUnIvfws9+or/4U5dlypRxWP/s2bPy9/fXxo0bc2wr+3quqKgo9e/fXytXrtSqVas0fvx4ffTRR/a3fi/eZ/Z+Db5F+IZ38803a9myZerQoYO6dOmiVatWOTxpZ2vbtq3CwsIUGRmpwYMHX3Z7pUqV0ksvvaTBgwdr+PDhhVg5SrrAwEDFxsZq3bp1Wrt2rZ544gm98sor2rRpU47ns8spXbp0IVeJvPj9998VFBSUp9ey/PzOCqJHLpXba2V+ZkW4+PU7+2TAypUrdfPNNzusZ7PZ7Ov07Nkz1z/2s09smRVnXG9gt912mxISElSqVCnVrFnT4adChQr29WrXrq0xY8bo66+/Vp8+fRQdHZ2n7Xt7eysgIEDff/+9w/j333+v+vXr53qfevXqaceOHQ5j27Zty+eRoTioWrWqNm3apISEBHXp0sX+QYRLTZ06VV988YW2bt16xe3dc889atCggSZMmFAY5aIYqlevnrZu3erwx/D3338vLy8vVa5cWdWrV5fVatXOnTvty5OSkq46dVXp0qXVs2dPzZo1Sxs3btTWrVv1888/S5Lc3NxyTL92qVtvvVXr16+/jiPD9frmm2/0888/Kzw8PE+vZfn9nV2pRy5Wr149HTp0SIcOHbKP/fbbb0pMTLzs69z1ql+/vmw2m+Lj43Mcb/aZ39tuu02//vqrqlWrlmOdS09imQ1nXG9goaGhCgkJUe/evTV9+nTVrl1bR44csV/E3qBBAz311FO6++67FRQUpMOHD2vnzp0KDw/P8z6eeuopjR8/XjVq1FCjRo0UHR2tPXv26IMPPsh1/ccee0yvvfaannrqKT300EPavXs383WaWGBgoDZu3KgOHTooLCws1xklGjZsqAEDBmjWrFlX3d7UqVMVFhZWGKXCyZKSknJ8EckjjzyimTNnasSIERo+fLhiY2M1fvx4RUREyMXFRV5eXho0aJCeeuoplStXTpUqVdL48ePl4uLicHnBxRYvXqzMzEy1aNFCHh4eev/991W6dGlVrVpV0oW3dDdv3qx+/frJZrM5/BGfbfz48brjjjtUo0YN9evXT+fPn9dXX32lcePGFfjjAiktLU0JCQnKzMzUsWPHtHr1ak2ZMkU9evTQwIED5eLicsXXsqZNm+brd3a1HrlYaGio/Tls5syZOn/+vJ544gm1a9fO4e39guTl5aUnn3xSY8aMUVZWllq3bq2kpCR9//338vb21qBBgzRs2DAtXLhQ9913n55++mmVK1dOBw4c0EcffaT//e9/cnV1LZTaigJnXG9gFotFX331ldq2bashQ4aodu3a6tevn/7++2/5+vrK1dVVJ0+e1MCBA1W7dm317dtXXbt2zdcZr5EjRyoiIkJjx45Vw4YNtXr1an3++eeqVatWrutXqVJFn3zyiVasWKHg4GDNnz9fL7/8ckEdMpygcuXK2rhxo06cOKGwsDAlJyfnWGfixIl5etusY8eO6tix4w0/j2FJtHHjRjVu3NjhZ9KkSfrqq6+0Y8cOBQcH67HHHtPQoUP1/PPP2+/3+uuvKyQkRD169FBoaKhatWqlevXq2af8u1TZsmW1cOFCtWrVSrfeeqvWrVunL774QuXLl5d0oRfj4uJUo0YNh88EXKx9+/ZaunSpPv/8czVq1EgdO3bM8U4RCs7q1avl7++vatWqqUuXLtqwYYNmzZqlzz77TK6urld9LZPy9zu7Wo9czGKx6LPPPtNNN92ktm3bKjQ0VNWrV9eSJUsK9TGZNGmSXnjhBU2ZMkX16tVTly5dtHLlSgUFBUmS/d3OzMxMde7cWQ0bNtTo0aNVtmxZubiYO/pZDC5IBACUEOfOndPNN9+s1157TUOHDnV2OQAKGJcKAABM68cff9S+ffvUvHlzJSUlaeLEiZKkXr16ObkyAIWB4AoAMLVXX31VsbGxcnNzU5MmTfTtt9/mem0qAPPjUgEAAACYgrmv0AUAAMANg+AKAAAAUyC4AgAAwBQIrgAAADAFgisAAABMgeAKAAAAUyC4AgAAwBQIrgAAADAFgisAAABM4f8BS4SKklEqIIQAAAAASUVORK5CYII=\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# 모델별 정확도 데이터\n",
        "models = ['Threshold', 'KNN', 'Logistic', 'DecisionTree']\n",
        "test1_scores = [72.95, 80.47, 79.12, 80.70]\n",
        "test2_scores = [72.488, 77.033, 77.511, 76.555]\n",
        "\n",
        "# x축 위치 설정\n",
        "x = np.arange(len(models))\n",
        "\n",
        "# 선 그래프 그리기 (marker='o', linestyle='-')\n",
        "plt.figure(figsize=(8, 5))\n",
        "plt.plot(x, test1_scores, marker='o', linestyle='-', label='Test1')\n",
        "plt.plot(x, test2_scores, marker='o', linestyle='-', label='Test2')\n",
        "\n",
        "# x축 눈금 설정 및 라벨 지정\n",
        "plt.xticks(x, models)\n",
        "plt.xlabel('Model')\n",
        "plt.ylabel('Accuracy (%)')\n",
        "plt.title('Model Performance: Test1 vs Test2 (Line Chart)')\n",
        "plt.legend()\n",
        "plt.grid(True)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "id": "cSQxJFp4UogJ",
        "outputId": "69ac0cd3-30f5-464f-a78f-3108f4cbf01e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# 모델별 Test1/Test2 원본 및 새로운 정확도\n",
        "baseline_test1 = 72.95\n",
        "baseline_test2 = 72.488\n",
        "\n",
        "models = ['KNN', 'Logistic', 'DecisionTree']\n",
        "test1_scores = [80.47, 79.12, 80.70]\n",
        "test2_scores = [77.033, 77.511, 76.555]\n",
        "\n",
        "# 증가량 계산\n",
        "delta_test1 = [t1 - baseline_test1 for t1 in test1_scores]\n",
        "delta_test2 = [t2 - baseline_test2 for t2 in test2_scores]\n",
        "\n",
        "# x축 위치\n",
        "x = np.arange(len(models))\n",
        "\n",
        "# 그래프 그리기\n",
        "plt.figure(figsize=(8, 5))\n",
        "plt.plot(x, delta_test1, marker='o', linestyle='None', label='Δ Test1')\n",
        "plt.plot(x, delta_test2, marker='o', linestyle='None', label='Δ Test2')\n",
        "\n",
        "# 레이블 및 설정\n",
        "plt.xticks(x, models)\n",
        "plt.xlabel('Model')\n",
        "plt.ylabel('Increase in Accuracy (%)')\n",
        "plt.title('Increase in Accuracy over Baseline (Threshold)')\n",
        "plt.legend(\n",
        "    loc='upper center'\n",
        ")\n",
        "plt.grid(True)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "id": "1kFMoBAsU7eC",
        "outputId": "b9e8fe3e-7c0d-4d7b-b5c0-aa268281630a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.neighbors import KNeighborsClassifier\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "from sklearn.tree import DecisionTreeClassifier\n",
        "from sklearn.metrics import accuracy_score\n",
        "\n",
        "# 1) 데이터 로드\n",
        "train_df = pd.read_csv('process1_result.csv')\n",
        "test2_df = pd.read_csv('process2_result.csv')\n",
        "\n",
        "features = ['Sex', 'SibSp', 'Parch', 'Embarked', 'TicketNumeric']\n",
        "\n",
        "X = train_df[features]\n",
        "y = train_df['Survived']\n",
        "\n",
        "X_test2 = test2_df[features]\n",
        "# test2에 Survived 열이 있다면 평가 가능\n",
        "has_y_test2 = 'Survived' in test2_df.columns\n",
        "if has_y_test2:\n",
        "    y_test2 = test2_df['Survived']\n",
        "\n",
        "# 2) train/validation 분할 (test1)\n",
        "X_train, X_test1, y_train, y_test1 = train_test_split(\n",
        "    X, y, test_size=0.2, random_state=42, stratify=y\n",
        ")\n",
        "\n",
        "# 3) 모델 정의\n",
        "models = {\n",
        "    'KNN': KNeighborsClassifier(n_neighbors=20),\n",
        "    'LogisticRegression': LogisticRegression(max_iter=10),\n",
        "    'DecisionTree': DecisionTreeClassifier(random_state=42)\n",
        "}\n",
        "\n",
        "# 4) 학습, 평가, 결과 저장\n",
        "for name, model in models.items():\n",
        "    # 학습\n",
        "    model.fit(X_train, y_train)\n",
        "\n",
        "    # test1 (validation) 정확도\n",
        "    y_pred1 = model.predict(X_test1)\n",
        "    acc1 = accuracy_score(y_test1, y_pred1)\n",
        "    print(f'{name:20s} | test1 accuracy: {acc1:.4f}')\n",
        "\n",
        "    # test2 예측 및 정확도 (있다면)\n",
        "    y_pred2 = model.predict(X_test2)\n",
        "    if has_y_test2:\n",
        "        acc2 = accuracy_score(y_test2, y_pred2)\n",
        "        print(f'{name:20s} | test2 accuracy: {acc2:.4f}')\n",
        "    else:\n",
        "        print(f'{name:20s} | test2 predictions saved to CSV (no labels)')\n",
        "\n",
        "    # submission 파일 생성\n",
        "    submission = pd.DataFrame({\n",
        "        'PassengerId': test2_df['PassengerId'],\n",
        "        'Survived':    y_pred2\n",
        "    })\n",
        "    submission_filename = f'{name.lower()}_submission.csv'\n",
        "    submission.to_csv(submission_filename, index=False)\n",
        "    print(f' → {submission_filename} 생성\\n')\n"
      ],
      "metadata": {
        "id": "z-DNp3mnZN3s",
        "outputId": "8d2f711b-83aa-41e0-833b-7202d85d4f78",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "KNN                  | test1 accuracy: 0.7821\n",
            "KNN                  | test2 predictions saved to CSV (no labels)\n",
            " → knn_submission.csv 생성\n",
            "\n",
            "LogisticRegression   | test1 accuracy: 0.7821\n",
            "LogisticRegression   | test2 predictions saved to CSV (no labels)\n",
            " → logisticregression_submission.csv 생성\n",
            "\n",
            "DecisionTree         | test1 accuracy: 0.7598\n",
            "DecisionTree         | test2 predictions saved to CSV (no labels)\n",
            " → decisiontree_submission.csv 생성\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "def get_tree_positions(tree, x=0.5, y=1.0, dx=0.5, dy=0.05, positions=None, labels=None, feature_names=None):\n",
        "    if positions is None:\n",
        "        positions, labels = {}, {}\n",
        "    node_id = id(tree)\n",
        "    if tree.get('leaf', False):\n",
        "        text = f\"Leaf\\npred={tree['pred']}\"\n",
        "    else:\n",
        "        feat_name = feature_names[tree['feat']]\n",
        "        text = f\"{feat_name} ≤ {tree['thresh']:.2f}\"\n",
        "    positions[node_id] = (x, y)\n",
        "    labels[node_id]    = text\n",
        "    if not tree.get('leaf', False):\n",
        "        get_tree_positions(tree['left'],  x - dx, y - dy, dx/2, dy, positions, labels, feature_names)\n",
        "        get_tree_positions(tree['right'], x + dx, y - dy, dx/2, dy, positions, labels, feature_names)\n",
        "    return positions, labels\n",
        "\n",
        "def find_node_by_id(tree, target_id):\n",
        "    if id(tree) == target_id:\n",
        "        return tree\n",
        "    if not tree.get('leaf', False):\n",
        "        left = find_node_by_id(tree['left'], target_id)\n",
        "        if left is not None:\n",
        "            return left\n",
        "        return find_node_by_id(tree['right'], target_id)\n",
        "    return None\n",
        "\n",
        "def draw_manual_tree(tree, feature_names, dx=0.5, dy=0.05, figsize=(20,20), fontsize=8):\n",
        "    positions, labels = get_tree_positions(tree, dx=dx, dy=dy, feature_names=feature_names)\n",
        "    fig, ax = plt.subplots(figsize=figsize)\n",
        "    ax.axis('off')\n",
        "    # draw nodes\n",
        "    for node_id, (x, y) in positions.items():\n",
        "        ax.text(x, y, labels[node_id],\n",
        "                ha='center', va='center',\n",
        "                fontsize=fontsize,\n",
        "                bbox=dict(boxstyle='round,pad=0.2', fc='lightblue', ec='black', lw=0.5))\n",
        "    # draw arrows\n",
        "    for node_id, (x0, y0) in positions.items():\n",
        "        node = find_node_by_id(tree, node_id)\n",
        "        if node and not node.get('leaf', False):\n",
        "            for side in ('left', 'right'):\n",
        "                child = node[side]\n",
        "                cx, cy = positions[id(child)]\n",
        "                ax.annotate(\"\", xy=(cx, cy + dy*0.3), xytext=(x0, y0 - dy*0.3),\n",
        "                            arrowprops=dict(arrowstyle='->', lw=0.5))\n",
        "    plt.tight_layout()\n",
        "    plt.show()\n",
        "\n",
        "# --- Usage example (assumes `tree` and `features` are already defined) ---\n",
        "# feature_names = features  # e.g. ['Sex','SibSp','Parch','Embarked','TicketNumeric']\n",
        "# tree = build_tree(X, y, max_depth=15)\n",
        "draw_manual_tree(tree, feature_names)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "oeNgom-Wpczl",
        "outputId": "741e5d30-bc99-4812-8c12-adc70d603a72"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 2000x2000 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import graphviz\n",
        "\n",
        "def build_graphviz(tree, feature_names, dot=None, parent_id=None, edge_label=\"\"):\n",
        "    \"\"\"\n",
        "    tree dict를 순회하며 graphviz.Digraph 객체에 노드와 엣지를 추가합니다.\n",
        "    \"\"\"\n",
        "    if dot is None:\n",
        "        dot = graphviz.Digraph(format='png')\n",
        "        dot.attr('node', shape='box', style='rounded,filled', fillcolor='lightblue', fontsize='6')\n",
        "\n",
        "    # 고유한 노드 ID\n",
        "    node_id = str(id(tree))\n",
        "    # 노드 라벨\n",
        "    if tree.get('leaf', False):\n",
        "        label = f\"Leaf\\npred={tree['pred']}\"\n",
        "    else:\n",
        "        feat = feature_names[tree['feat']]\n",
        "        thresh = tree['thresh']\n",
        "        label = f\"{feat} ≤ {thresh:.2f}\"\n",
        "\n",
        "    dot.node(node_id, label)\n",
        "\n",
        "    # 부모가 있으면 엣지 추가\n",
        "    if parent_id is not None:\n",
        "        dot.edge(parent_id, node_id, label=edge_label, fontsize='5')\n",
        "\n",
        "    # 내부 노드면 자식 재귀 호출\n",
        "    if not tree.get('leaf', False):\n",
        "        build_graphviz(tree['left'],  feature_names, dot, node_id, edge_label=\"True\")\n",
        "        build_graphviz(tree['right'], feature_names, dot, node_id, edge_label=\"False\")\n",
        "\n",
        "    return dot\n",
        "\n",
        "# 사용 예\n",
        "feature_names = ['Sex', 'SibSp', 'Parch', 'Embarked', 'TicketNumeric']\n",
        "dot = build_graphviz(tree, feature_names)\n",
        "dot.render('decision_tree_depth15', view=True)  # PNG로 저장 후 자동으로 열기\n"
      ],
      "metadata": {
        "id": "jhFx-RpTqXjw",
        "outputId": "0cb0e7b7-6e66-4c0d-8e89-c2a14938821d",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'decision_tree_depth15.png'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "교차검증 먼저 진행, 이후 MLP, PCA,FLD에 대한 코드들이 나와야함\n",
        "\n",
        "1. 교차검증,\n",
        "2. MLP\n",
        "3. PCA, FLD"
      ],
      "metadata": {
        "id": "FgAnzX1xgrtk"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "## 교차검증 - logistic R\n",
        "\n",
        "\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn.model_selection import StratifiedKFold\n",
        "from sklearn.metrics import accuracy_score, f1_score\n",
        "\n",
        "# --- 1. 데이터 로드 및 피처/레이블 분리 ---\n",
        "train_df = pd.read_csv('process1_result.csv')\n",
        "features = ['Sex', 'SibSp', 'Parch', 'Embarked', 'TicketNumeric']\n",
        "X_all    = train_df[features].values\n",
        "y_all    = train_df['Survived'].values\n",
        "\n",
        "# --- 2. 하이퍼파라미터 & 교차검증 설정 ---\n",
        "learning_rates = [0.0001, 0.001, 0.01]\n",
        "num_epochs     = 100\n",
        "k_folds        = 5\n",
        "skf = StratifiedKFold(n_splits=k_folds, shuffle=True, random_state=42)\n",
        "\n",
        "# --- 3. 시그모이드 정의 ---\n",
        "def sigmoid(z):\n",
        "    return 1 / (1 + np.exp(-z))\n",
        "\n",
        "# --- 4. 교차검증을 통한 학습 & 평가 ---\n",
        "results = {}  # { lr: { 'accs':[], 'f1s':[] } }\n",
        "for lr in learning_rates:\n",
        "    accs = []\n",
        "    f1s  = []\n",
        "    print(f\"\\n=== Learning rate: {lr} ===\")\n",
        "\n",
        "    for fold, (train_idx, val_idx) in enumerate(skf.split(X_all, y_all), start=1):\n",
        "        # 4.1 Fold별 데이터 분할\n",
        "        X_train_raw, X_val_raw = X_all[train_idx], X_all[val_idx]\n",
        "        y_train,     y_val     = y_all[train_idx], y_all[val_idx]\n",
        "\n",
        "        # 4.2 Fold별 스케일링 (훈련셋으로만 mean/std 계산)\n",
        "        means = X_train_raw.mean(axis=0)\n",
        "        stds  = X_train_raw.std(axis=0)\n",
        "        stds[stds == 0] = 1.0\n",
        "        X_train = (X_train_raw - means) / stds\n",
        "        X_val   = (X_val_raw   - means) / stds\n",
        "\n",
        "        # 4.3 파라미터 초기화\n",
        "        m, n = X_train.shape\n",
        "        w = np.zeros(n)\n",
        "        b = 0.0\n",
        "\n",
        "        # 4.4 SGD 로지스틱 회귀 학습\n",
        "        for epoch in range(num_epochs):\n",
        "            for i in range(m):\n",
        "                xi, yi = X_train[i], y_train[i]\n",
        "                z_i     = np.dot(xi, w) + b\n",
        "                h_i     = sigmoid(z_i)\n",
        "                delta   = h_i - yi\n",
        "                w      -= lr * delta * xi\n",
        "                b      -= lr * delta\n",
        "\n",
        "        # 4.5 검증셋 평가\n",
        "        z_val = X_val.dot(w) + b\n",
        "        preds = (sigmoid(z_val) >= 0.5).astype(int)\n",
        "        acc   = accuracy_score(y_val, preds)\n",
        "        f1    = f1_score(y_val, preds)\n",
        "\n",
        "        accs.append(acc)\n",
        "        f1s .append(f1)\n",
        "        print(f\" Fold {fold:>2d} → ACC: {acc:.4f},  F1: {f1:.4f}\")\n",
        "\n",
        "    # 4.6 Fold 결과 요약\n",
        "    acc_mean, acc_std = np.mean(accs), np.std(accs)\n",
        "    f1_mean,  f1_std  = np.mean(f1s ), np.std(f1s )\n",
        "    results[lr] = {\n",
        "        'acc_mean': acc_mean, 'acc_std': acc_std,\n",
        "        'f1_mean':  f1_mean,  'f1_std':  f1_std\n",
        "    }\n",
        "    print(f\" → Mean ACC: {acc_mean:.4f} ± {acc_std:.4f}\")\n",
        "    print(f\" → Mean F1 : {f1_mean :.4f} ± {f1_std :.4f}\")\n",
        "\n",
        "# --- 5. 최적 학습률 선택 후 전체 데이터로 재학습 (예시) ---\n",
        "best_lr = max(results, key=lambda x: results[x]['f1_mean'])\n",
        "print(f\"\\n최적 학습률은 {best_lr} (F1 mean 기준)입니다.\")\n",
        "w_final = np.zeros(X_all.shape[1])\n",
        "b_final = 0.0\n",
        "\n",
        "# 전체 데이터 스케일링\n",
        "means = X_all.mean(axis=0)\n",
        "stds  = X_all.std(axis=0)\n",
        "stds[stds == 0] = 1.0\n",
        "X_scaled_all = (X_all - means) / stds\n",
        "\n",
        "# 전체 데이터로 학습\n",
        "for epoch in range(num_epochs):\n",
        "    for xi, yi in zip(X_scaled_all, y_all):\n",
        "        z_i   = np.dot(xi, w_final) + b_final\n",
        "        h_i   = sigmoid(z_i)\n",
        "        delta = h_i - yi\n",
        "        w_final -= best_lr * delta * xi\n",
        "        b_final -= best_lr * delta\n",
        "\n",
        "print(\"\\n전체 데이터로 재학습 완료된 w, b 파라미터를 최종 모델로 사용합니다.\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fzpoG7I1hchN",
        "outputId": "7e29f646-938a-49c1-f736-4b8987f03a60"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "=== Learning rate: 0.0001 ===\n",
            " Fold  1 → ACC: 0.7821,  F1: 0.7068\n",
            " Fold  2 → ACC: 0.7697,  F1: 0.6720\n",
            " Fold  3 → ACC: 0.7809,  F1: 0.6777\n",
            " Fold  4 → ACC: 0.7640,  F1: 0.6912\n",
            " Fold  5 → ACC: 0.8146,  F1: 0.7591\n",
            " → Mean ACC: 0.7823 ± 0.0175\n",
            " → Mean F1 : 0.7014 ± 0.0313\n",
            "\n",
            "=== Learning rate: 0.001 ===\n",
            " Fold  1 → ACC: 0.7877,  F1: 0.7121\n",
            " Fold  2 → ACC: 0.7753,  F1: 0.6774\n",
            " Fold  3 → ACC: 0.7809,  F1: 0.6777\n",
            " Fold  4 → ACC: 0.7753,  F1: 0.7015\n",
            " Fold  5 → ACC: 0.8258,  F1: 0.7704\n",
            " → Mean ACC: 0.7890 ± 0.0190\n",
            " → Mean F1 : 0.7078 ± 0.0341\n",
            "\n",
            "=== Learning rate: 0.01 ===\n",
            " Fold  1 → ACC: 0.7877,  F1: 0.7121\n",
            " Fold  2 → ACC: 0.7753,  F1: 0.6774\n",
            " Fold  3 → ACC: 0.7809,  F1: 0.6777\n",
            " Fold  4 → ACC: 0.7753,  F1: 0.7015\n",
            " Fold  5 → ACC: 0.8258,  F1: 0.7704\n",
            " → Mean ACC: 0.7890 ± 0.0190\n",
            " → Mean F1 : 0.7078 ± 0.0341\n",
            "\n",
            "최적 학습률은 0.001 (F1 mean 기준)입니다.\n",
            "\n",
            "전체 데이터로 재학습 완료된 w, b 파라미터를 최종 모델로 사용합니다.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn.model_selection import StratifiedKFold\n",
        "from sklearn.metrics import accuracy_score\n",
        "\n",
        "# --- 1. 데이터 로드 및 피처/레이블 분리 ---\n",
        "train_df = pd.read_csv('process1_result.csv')\n",
        "features = ['Sex', 'SibSp', 'Parch', 'Embarked', 'TicketNumeric']\n",
        "X_all    = train_df[features].values\n",
        "y_all    = train_df['Survived'].values\n",
        "\n",
        "# --- 2. 시그모이드 정의 ---\n",
        "def sigmoid(z):\n",
        "    return 1 / (1 + np.exp(-z))\n",
        "\n",
        "# --- 3. 교차검증 설정 ---\n",
        "k_folds = 5\n",
        "skf     = StratifiedKFold(n_splits=k_folds, shuffle=True, random_state=42)\n",
        "\n",
        "# --- 4. 에폭스 최적화 (기본 lr=0.001) ---\n",
        "default_lr  = 0.001\n",
        "epoch_list  = range(10, 201, 10)\n",
        "epoch_scores = {}\n",
        "\n",
        "for num_epochs in epoch_list:\n",
        "    fold_accs = []\n",
        "    for train_idx, val_idx in skf.split(X_all, y_all):\n",
        "        # 데이터 분할\n",
        "        X_train_raw, X_val_raw = X_all[train_idx], X_all[val_idx]\n",
        "        y_train,     y_val     = y_all[train_idx], y_all[val_idx]\n",
        "        # 스케일링\n",
        "        means = X_train_raw.mean(axis=0)\n",
        "        stds  = X_train_raw.std(axis=0)\n",
        "        stds[stds==0] = 1.0\n",
        "        X_train = (X_train_raw - means) / stds\n",
        "        X_val   = (X_val_raw   - means) / stds\n",
        "        # 파라미터 초기화\n",
        "        m, n = X_train.shape\n",
        "        w = np.zeros(n); b = 0.0\n",
        "        # SGD 학습\n",
        "        for _ in range(num_epochs):\n",
        "            for xi, yi in zip(X_train, y_train):\n",
        "                z = np.dot(xi, w) + b\n",
        "                delta = sigmoid(z) - yi\n",
        "                w -= default_lr * delta * xi\n",
        "                b -= default_lr * delta\n",
        "        # 검증 정확도\n",
        "        preds = (sigmoid(X_val.dot(w) + b) >= 0.5).astype(int)\n",
        "        fold_accs.append(accuracy_score(y_val, preds))\n",
        "    epoch_scores[num_epochs] = np.mean(fold_accs)\n",
        "    print(f\"Epochs={num_epochs:3d} → ACC mean = {epoch_scores[num_epochs]:.4f}\")\n",
        "\n",
        "best_epoch = max(epoch_scores, key=epoch_scores.get)\n",
        "print(f\"\\n-- 최적 Epochs: {best_epoch} (ACC={epoch_scores[best_epoch]:.4f})\")\n",
        "\n",
        "# --- 5. 학습률 최적화 (고정 epochs=best_epoch) ---\n",
        "lr_list    = [1e-1, 1e-2, 1e-3, 1e-4, 1e-5]\n",
        "lr_scores  = {}\n",
        "\n",
        "for lr in lr_list:\n",
        "    fold_accs = []\n",
        "    for train_idx, val_idx in skf.split(X_all, y_all):\n",
        "        X_train_raw, X_val_raw = X_all[train_idx], X_all[val_idx]\n",
        "        y_train,     y_val     = y_all[train_idx], y_all[val_idx]\n",
        "        means = X_train_raw.mean(axis=0)\n",
        "        stds  = X_train_raw.std(axis=0)\n",
        "        stds[stds==0] = 1.0\n",
        "        X_train = (X_train_raw - means) / stds\n",
        "        X_val   = (X_val_raw   - means) / stds\n",
        "        m, n = X_train.shape\n",
        "        w = np.zeros(n); b = 0.0\n",
        "        for _ in range(best_epoch):\n",
        "            for xi, yi in zip(X_train, y_train):\n",
        "                z = np.dot(xi, w) + b\n",
        "                delta = sigmoid(z) - yi\n",
        "                w -= lr * delta * xi\n",
        "                b -= lr * delta\n",
        "        preds = (sigmoid(X_val.dot(w) + b) >= 0.5).astype(int)\n",
        "        fold_accs.append(accuracy_score(y_val, preds))\n",
        "    lr_scores[lr] = np.mean(fold_accs)\n",
        "    print(f\"LR={lr:.5f} → ACC mean = {lr_scores[lr]:.4f}\")\n",
        "\n",
        "best_lr = max(lr_scores, key=lr_scores.get)\n",
        "print(f\"\\n-- 최적 Learning Rate: {best_lr} (ACC={lr_scores[best_lr]:.4f})\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 367
        },
        "id": "XDIeEqryRkee",
        "outputId": "9c615170-a28e-4f0c-fcd1-8e9f2fe6e7ac"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epochs= 10 → ACC mean = 0.7823\n",
            "Epochs= 20 → ACC mean = 0.7845\n",
            "Epochs= 30 → ACC mean = 0.7879\n",
            "Epochs= 40 → ACC mean = 0.7890\n",
            "Epochs= 50 → ACC mean = 0.7890\n",
            "Epochs= 60 → ACC mean = 0.7890\n",
            "Epochs= 70 → ACC mean = 0.7890\n",
            "Epochs= 80 → ACC mean = 0.7890\n"
          ]
        },
        {
          "output_type": "error",
          "ename": "KeyboardInterrupt",
          "evalue": "",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-47-2d6464c2e640>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     44\u001b[0m                 \u001b[0mdelta\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msigmoid\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mz\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m-\u001b[0m \u001b[0myi\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     45\u001b[0m                 \u001b[0mw\u001b[0m \u001b[0;34m-=\u001b[0m \u001b[0mdefault_lr\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mdelta\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mxi\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 46\u001b[0;31m                 \u001b[0mb\u001b[0m \u001b[0;34m-=\u001b[0m \u001b[0mdefault_lr\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mdelta\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     47\u001b[0m         \u001b[0;31m# 검증 정확도\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     48\u001b[0m         \u001b[0mpreds\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0msigmoid\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_val\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mw\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mb\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m>=\u001b[0m \u001b[0;36m0.5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mint\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "##과적합을 피하기 위해, 적절한 에폭에서 멈추기 위해 시각화하는 코드\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# --- 1. 데이터 로드 & 전처리 ---\n",
        "train_df = pd.read_csv('process1_result.csv')\n",
        "features = ['Sex', 'SibSp', 'Parch', 'Embarked', 'TicketNumeric']\n",
        "X_raw    = train_df[features].values\n",
        "y        = train_df['Survived'].values\n",
        "\n",
        "# --- 2. 수동 스케일링 (평균0, 표준편차1) ---\n",
        "means = X_raw.mean(axis=0)\n",
        "stds  = X_raw.std(axis=0)\n",
        "stds[stds == 0] = 1.0\n",
        "X = (X_raw - means) / stds\n",
        "\n",
        "# --- 3. 시그모이드 & 손실 함수 ---\n",
        "def sigmoid(z):\n",
        "    return 1 / (1 + np.exp(-z))\n",
        "\n",
        "def compute_loss(X, y, w, b, epsilon=1e-15):\n",
        "    z = X.dot(w) + b\n",
        "    h = sigmoid(z)\n",
        "    return -np.mean(y * np.log(h + epsilon) + (1 - y) * np.log(1 - h + epsilon))\n",
        "\n",
        "# --- 4. 하이퍼파라미터 고정 ---\n",
        "lr         = 0.001\n",
        "num_epochs = 40\n",
        "m, n       = X.shape\n",
        "\n",
        "# --- 5. 파라미터 초기화 & 학습 ---\n",
        "w = np.zeros(n)\n",
        "b = 0.0\n",
        "costs = []\n",
        "\n",
        "for epoch in range(1, num_epochs + 1):\n",
        "    # 샘플 단위 SGD 업데이트\n",
        "    for xi, yi in zip(X, y):\n",
        "        z_i   = np.dot(xi, w) + b\n",
        "        h_i   = sigmoid(z_i)\n",
        "        delta = h_i - yi\n",
        "        w    -= lr * delta * xi\n",
        "        b    -= lr * delta\n",
        "\n",
        "    # 전체 데이터에 대한 손실 계산\n",
        "    loss = compute_loss(X, y, w, b)\n",
        "    costs.append(loss)\n",
        "    print(f\"Epoch {epoch:2d}: loss = {loss:.4f}\")\n",
        "\n",
        "# --- 6. 손실 수렴 그래프 ---\n",
        "plt.figure(figsize=(8, 5))\n",
        "plt.plot(range(1, num_epochs + 1), costs, marker='o')\n",
        "plt.xlabel('Epoch')\n",
        "plt.ylabel('Cross-Entropy Loss')\n",
        "plt.title('Training Loss Convergence (lr=0.001, epochs=20)')\n",
        "plt.grid(True)\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "M2efUYCMYGzr",
        "outputId": "9c930026-2d92-4475-e78e-aeccb45284a3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch  1: loss = 0.6293\n",
            "Epoch  2: loss = 0.5891\n",
            "Epoch  3: loss = 0.5631\n",
            "Epoch  4: loss = 0.5458\n",
            "Epoch  5: loss = 0.5340\n",
            "Epoch  6: loss = 0.5258\n",
            "Epoch  7: loss = 0.5199\n",
            "Epoch  8: loss = 0.5157\n",
            "Epoch  9: loss = 0.5125\n",
            "Epoch 10: loss = 0.5102\n",
            "Epoch 11: loss = 0.5084\n",
            "Epoch 12: loss = 0.5071\n",
            "Epoch 13: loss = 0.5060\n",
            "Epoch 14: loss = 0.5052\n",
            "Epoch 15: loss = 0.5046\n",
            "Epoch 16: loss = 0.5041\n",
            "Epoch 17: loss = 0.5037\n",
            "Epoch 18: loss = 0.5034\n",
            "Epoch 19: loss = 0.5031\n",
            "Epoch 20: loss = 0.5029\n",
            "Epoch 21: loss = 0.5028\n",
            "Epoch 22: loss = 0.5027\n",
            "Epoch 23: loss = 0.5025\n",
            "Epoch 24: loss = 0.5025\n",
            "Epoch 25: loss = 0.5024\n",
            "Epoch 26: loss = 0.5023\n",
            "Epoch 27: loss = 0.5023\n",
            "Epoch 28: loss = 0.5022\n",
            "Epoch 29: loss = 0.5022\n",
            "Epoch 30: loss = 0.5022\n",
            "Epoch 31: loss = 0.5022\n",
            "Epoch 32: loss = 0.5022\n",
            "Epoch 33: loss = 0.5021\n",
            "Epoch 34: loss = 0.5021\n",
            "Epoch 35: loss = 0.5021\n",
            "Epoch 36: loss = 0.5021\n",
            "Epoch 37: loss = 0.5021\n",
            "Epoch 38: loss = 0.5021\n",
            "Epoch 39: loss = 0.5021\n",
            "Epoch 40: loss = 0.5021\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x500 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAxYAAAHqCAYAAACZcdjsAAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQAAft5JREFUeJzt3Xd8U/X6B/DPSdom3ZMO2tKWllX2ailDUEYBBfHiBUFkKfxEELAucJWigoICDi4oXgRFEMXLkqHIlC0tKHuWsjpoS/cKyfn9URIIXUlz2iTt5/169SU5Od+TJ09Pa55+lyCKoggiIiIiIiITyMwdABERERERWT8WFkREREREZDIWFkREREREZDIWFkREREREZDIWFkREREREZDIWFkREREREZDIWFkREREREZDIWFkREREREZDIWFkREREREZDIWFkR1wNixYxEcHFyttrNmzYIgCNIGRGTBrl+/DqVSiQMHDuiOmfIzRNZlxYoVEAQBx44dM3coksrIyICjoyO2bt1q7lCoHmNhQVSDBEEw6GvPnj3mDtUsxo4dCycnJ3OHYbD169djwIAB8PLygp2dHRo2bIhhw4Zh165d5g6NjDB79mxERkaiW7dutf7aGo0G8+bNQ0hICJRKJdq0aYM1a9YY3D4rKwsTJ05EgwYN4OjoiEcffRQJCQnlnrtp0yZ06NABSqUSjRo1QmxsLO7evat3TnJyMmbMmIFHH30Uzs7O9fr3UW26fv064uLiEBERAXd3d3h5eaFXr174448/yj3fkO+7p6cnXnjhBbz77ru18RaIymVj7gCI6rLvv/9e7/F3332HHTt2lDneokULk15n2bJl0Gg01Wr7zjvvYMaMGSa9fl0niiLGjx+PFStWoH379oiJiYGvry+Sk5Oxfv169O7dGwcOHEDXrl3NHSpV4fbt21i5ciVWrlxpltd/++238dFHH2HChAno3LkzNm7ciJEjR0IQBDzzzDOVttVoNHj88cfx999/4/XXX4eXlxf+85//oFevXoiPj0eTJk10527btg1DhgxBr1698MUXX+DkyZP44IMPkJaWhiVLlujOO3/+PD7++GM0adIErVu3xqFDh2rsvdN9GzduxMcff4whQ4ZgzJgxuHv3Lr777jv07dsXy5cvx7hx43TnGvN9f/HFF/H5559j165deOyxx8zx1qi+E4mo1kye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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# --- 1. 데이터 로드 & 전처리 ---\n",
        "train_df = pd.read_csv('process1_result.csv')\n",
        "features = ['Sex', 'SibSp', 'Parch', 'Embarked', 'TicketNumeric']\n",
        "X_raw    = train_df[features].values\n",
        "y        = train_df['Survived'].values\n",
        "\n",
        "# --- 2. 수동 표준화 ---\n",
        "means = X_raw.mean(axis=0)\n",
        "stds  = X_raw.std(axis=0)\n",
        "stds[stds == 0] = 1.0\n",
        "X = (X_raw - means) / stds\n",
        "\n",
        "# --- 3. 시그모이드 정의 ---\n",
        "def sigmoid(z):\n",
        "    return 1 / (1 + np.exp(-z))\n",
        "\n",
        "# --- 4. 하이퍼파라미터 고정 ---\n",
        "lr         = 0.001\n",
        "max_epoch  = 17   # 1부터 17까지\n",
        "m, n       = X.shape\n",
        "\n",
        "# --- 5. 파라미터 초기화 & 에폭별 정확도 기록 ---\n",
        "w = np.zeros(n)\n",
        "b = 0.0\n",
        "epochs = []\n",
        "accs   = []\n",
        "\n",
        "for epoch in range(1, max_epoch + 1):\n",
        "    # SGD 업데이트\n",
        "    for xi, yi in zip(X, y):\n",
        "        z_i   = np.dot(xi, w) + b\n",
        "        delta = sigmoid(z_i) - yi\n",
        "        w    -= lr * delta * xi\n",
        "        b    -= lr * delta\n",
        "\n",
        "    # 에폭 종료 후 train(process1) 정확도 계산\n",
        "    z_all  = X.dot(w) + b\n",
        "    preds  = (sigmoid(z_all) >= 0.5).astype(int)\n",
        "    acc    = np.mean(preds == y)\n",
        "\n",
        "    epochs.append(epoch)\n",
        "    accs.append(acc)\n",
        "    print(f\"Epoch {epoch:2d}: Train ACC = {acc:.4f}\")\n",
        "\n",
        "# --- 6. Epoch 15~17에 대한 정확도 그래프 ---\n",
        "# 슬라이스로 15,16,17 에폭에 대응하는 인덱스 14,15,16 선택\n",
        "plot_epochs = epochs[14:17]\n",
        "plot_accs   = accs  [14:17]\n",
        "\n",
        "plt.figure(figsize=(6,4))\n",
        "plt.plot(plot_epochs, plot_accs, marker='o', linestyle='-')\n",
        "plt.xticks(plot_epochs)\n",
        "plt.xlabel('Epoch')\n",
        "plt.ylabel('Train Accuracy')\n",
        "plt.title('Train Accuracy at Epochs 15–17 (lr=0.001)')\n",
        "plt.grid(True)\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 719
        },
        "id": "DiA8tPzFaqha",
        "outputId": "6b29a963-4030-48df-c44c-ce9433e52210"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch  1: Train ACC = 0.7823\n",
            "Epoch  2: Train ACC = 0.7823\n",
            "Epoch  3: Train ACC = 0.7823\n",
            "Epoch  4: Train ACC = 0.7823\n",
            "Epoch  5: Train ACC = 0.7823\n",
            "Epoch  6: Train ACC = 0.7834\n",
            "Epoch  7: Train ACC = 0.7834\n",
            "Epoch  8: Train ACC = 0.7834\n",
            "Epoch  9: Train ACC = 0.7868\n",
            "Epoch 10: Train ACC = 0.7868\n",
            "Epoch 11: Train ACC = 0.7868\n",
            "Epoch 12: Train ACC = 0.7868\n",
            "Epoch 13: Train ACC = 0.7868\n",
            "Epoch 14: Train ACC = 0.7868\n",
            "Epoch 15: Train ACC = 0.7868\n",
            "Epoch 16: Train ACC = 0.7868\n",
            "Epoch 17: Train ACC = 0.7868\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "## 에폭스는 9부터 17까지 tets1에 대한 정확도가 같으므로, 과적합을 피하기 위해 초기에 잡았던 목표에 대해서\n",
        "## 에폭스를 9로 지정하기로 한다.\n",
        "## 이후 교차검증을 k=2 부터 m(전체 데이터) 만큼 돌리는 코드\n",
        "## 너무 오랜시간이 걸리므로, 200정도에서 임의로 멈춘다.\n",
        "## 추후에 코드를 돌린다면, 코드를 수정해야 할 것.\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn.model_selection import StratifiedKFold\n",
        "from sklearn.metrics import accuracy_score, f1_score\n",
        "\n",
        "# --- 1. 데이터 로드 & 피처/레이블 분리 ---\n",
        "train_df = pd.read_csv('process1_result.csv')\n",
        "features = ['Sex', 'SibSp', 'Parch', 'Embarked', 'TicketNumeric']\n",
        "X_raw    = train_df[features].values\n",
        "y        = train_df['Survived'].values\n",
        "\n",
        "# --- 2. 수동 표준화 함수 ---\n",
        "def standardize(train, test):\n",
        "    means = train.mean(axis=0)\n",
        "    stds  = train.std(axis=0)\n",
        "    stds[stds == 0] = 1.0\n",
        "    return (train - means) / stds, (test - means) / stds\n",
        "\n",
        "# --- 3. 시그모이드 정의 ---\n",
        "def sigmoid(z):\n",
        "    return 1 / (1 + np.exp(-z))\n",
        "\n",
        "# --- 4. 하이퍼파라미터 고정 ---\n",
        "lr         = 0.001\n",
        "num_epochs = 9\n",
        "\n",
        "# --- 5. k-fold 교차검증 (k = 2 ~ N) ---\n",
        "m = X_raw.shape[0]\n",
        "\n",
        "for k in range(2, m + 1):\n",
        "    skf = StratifiedKFold(n_splits=k, shuffle=True, random_state=42)\n",
        "    fold_accs = []\n",
        "    fold_f1s  = []\n",
        "\n",
        "    for train_idx, val_idx in skf.split(X_raw, y):\n",
        "        X_tr_raw, y_tr = X_raw[train_idx], y[train_idx]\n",
        "        X_val_raw, y_val = X_raw[val_idx], y[val_idx]\n",
        "\n",
        "        # 표준화\n",
        "        X_tr, X_val = standardize(X_tr_raw, X_val_raw)\n",
        "\n",
        "        # 파라미터 초기화\n",
        "        w = np.zeros(X_tr.shape[1])\n",
        "        b = 0.0\n",
        "\n",
        "        # SGD 학습\n",
        "        for _ in range(num_epochs):\n",
        "            for xi, yi in zip(X_tr, y_tr):\n",
        "                z_i   = np.dot(xi, w) + b\n",
        "                delta = sigmoid(z_i) - yi\n",
        "                w    -= lr * delta * xi\n",
        "                b    -= lr * delta\n",
        "\n",
        "        # 예측 & 평가\n",
        "        preds = (sigmoid(X_val.dot(w) + b) >= 0.5).astype(int)\n",
        "        fold_accs.append(accuracy_score(y_val, preds))\n",
        "        fold_f1s .append(f1_score(y_val, preds))\n",
        "\n",
        "    # Fold별 결과 평균·표준편차 출력\n",
        "    acc_mean, acc_std = np.mean(fold_accs), np.std(fold_accs)\n",
        "    f1_mean,  f1_std  = np.mean(fold_f1s ), np.std(fold_f1s )\n",
        "    print(f\"k = {k:3d} → ACC = {acc_mean:.4f} ± {acc_std:.4f},  F1 = {f1_mean:.4f} ± {f1_std:.4f}\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 533
        },
        "id": "gQolhVOUb6Y2",
        "outputId": "ed93be96-7000-4a45-c8e1-1b933a3a9a35"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "k =   2 → ACC = 0.7823 ± 0.0087,  F1 = 0.7017 ± 0.0223\n",
            "k =   3 → ACC = 0.7834 ± 0.0114,  F1 = 0.7027 ± 0.0253\n",
            "k =   4 → ACC = 0.7823 ± 0.0199,  F1 = 0.7007 ± 0.0408\n",
            "k =   5 → ACC = 0.7823 ± 0.0175,  F1 = 0.7014 ± 0.0313\n",
            "k =   6 → ACC = 0.7834 ± 0.0257,  F1 = 0.7023 ± 0.0428\n",
            "k =   7 → ACC = 0.7834 ± 0.0282,  F1 = 0.7026 ± 0.0437\n",
            "k =   8 → ACC = 0.7845 ± 0.0329,  F1 = 0.7014 ± 0.0591\n",
            "k =   9 → ACC = 0.7845 ± 0.0340,  F1 = 0.7026 ± 0.0552\n",
            "k =  10 → ACC = 0.7833 ± 0.0288,  F1 = 0.7010 ± 0.0513\n",
            "k =  11 → ACC = 0.7834 ± 0.0304,  F1 = 0.7021 ± 0.0451\n",
            "k =  12 → ACC = 0.7845 ± 0.0316,  F1 = 0.7015 ± 0.0570\n",
            "k =  13 → ACC = 0.7834 ± 0.0262,  F1 = 0.7014 ± 0.0462\n",
            "k =  14 → ACC = 0.7834 ± 0.0371,  F1 = 0.7031 ± 0.0496\n",
            "k =  15 → ACC = 0.7834 ± 0.0346,  F1 = 0.7025 ± 0.0489\n",
            "k =  16 → ACC = 0.7835 ± 0.0484,  F1 = 0.6983 ± 0.0878\n",
            "k =  17 → ACC = 0.7834 ± 0.0439,  F1 = 0.7014 ± 0.0678\n",
            "k =  18 → ACC = 0.7835 ± 0.0420,  F1 = 0.7007 ± 0.0668\n"
          ]
        },
        {
          "output_type": "error",
          "ename": "KeyboardInterrupt",
          "evalue": "",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-50-67c223d490b5>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     55\u001b[0m                 \u001b[0mdelta\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msigmoid\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mz_i\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m-\u001b[0m \u001b[0myi\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     56\u001b[0m                 \u001b[0mw\u001b[0m    \u001b[0;34m-=\u001b[0m \u001b[0mlr\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mdelta\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mxi\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 57\u001b[0;31m                 \u001b[0mb\u001b[0m    \u001b[0;34m-=\u001b[0m \u001b[0mlr\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mdelta\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     58\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     59\u001b[0m         \u001b[0;31m# 예측 & 평가\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import re\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "from mpl_toolkits.mplot3d import Axes3D  # 3D plotting 지원\n",
        "\n",
        "# --- 1. 파일에서 raw 결과 읽어오기 ---\n",
        "with open('fold_results.txt', 'r', encoding='utf-8') as f:\n",
        "    raw = f.read()\n",
        "\n",
        "# --- 2. 정규표현식으로 k, acc_mean, acc_std 추출 ---\n",
        "pattern = (\n",
        "    r\"k\\s*=\\s*(\\d+)\\s*→\\s*ACC\\s*=\\s*([0-9.]+)\\s*±\\s*([0-9.]+),\"\n",
        ")\n",
        "ks, acc_means, acc_stds = [], [], []\n",
        "\n",
        "for line in raw.splitlines():\n",
        "    m = re.search(pattern, line)\n",
        "    if m:\n",
        "        ks.append(int(m.group(1)))\n",
        "        acc_means.append(float(m.group(2)))\n",
        "        acc_stds.append(float(m.group(3)))\n",
        "\n",
        "ks        = np.array(ks)\n",
        "acc_means = np.array(acc_means)\n",
        "acc_stds  = np.array(acc_stds)\n",
        "\n",
        "# --- 3. 3D 산점도 그리기 (z축: Accuracy 표준편차) ---\n",
        "fig = plt.figure(figsize=(9, 6))\n",
        "ax  = fig.add_subplot(111, projection='3d')\n",
        "\n",
        "sc = ax.scatter(\n",
        "    ks,            # x축: k (Number of Folds)\n",
        "    acc_means,     # y축: Accuracy mean\n",
        "    acc_stds,      # z축: Accuracy std\n",
        "    c=acc_means,   # 색상: 평균 Accuracy\n",
        "    cmap='viridis',\n",
        "    marker='o',\n",
        "    s=30,\n",
        "    alpha=0.8\n",
        ")\n",
        "\n",
        "ax.set_xlabel('k (Number of Folds)')\n",
        "ax.set_ylabel('Accuracy (mean)')\n",
        "ax.set_zlabel('Accuracy (std)')\n",
        "ax.set_title('3D Scatter: k vs. ACC_mean vs. ACC_std')\n",
        "\n",
        "cbar = fig.colorbar(sc, pad=0.1)\n",
        "cbar.set_label('ACC mean')\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 607
        },
        "id": "A97IZ6EYhvx9",
        "outputId": "70b2bcfb-abc2-4855-9c11-202d76dfb1ee"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 900x600 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import re\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# --- 1. fold_results.txt에서 raw 결과 읽어오기 ---\n",
        "with open('fold_results.txt', 'r', encoding='utf-8') as f:\n",
        "    raw = f.read()\n",
        "\n",
        "# --- 2. 정규표현식으로 k, acc_mean, acc_std 추출 ---\n",
        "pattern = (\n",
        "    r\"k\\s*=\\s*(\\d+)\\s*→\\s*ACC\\s*=\\s*([0-9.]+)\\s*±\\s*([0-9.]+),\"\n",
        ")\n",
        "ks, acc_means, acc_stds = [], [], []\n",
        "\n",
        "for line in raw.splitlines():\n",
        "    m = re.search(pattern, line)\n",
        "    if m:\n",
        "        ks.append(int(m.group(1)))\n",
        "        acc_means.append(float(m.group(2)))\n",
        "        acc_stds.append(float(m.group(3)))\n",
        "\n",
        "ks = np.array(ks)\n",
        "acc_means = np.array(acc_means)\n",
        "acc_stds = np.array(acc_stds)\n",
        "\n",
        "# --- 3. 변화율(상대 변화율 %) 계산 ---\n",
        "rel_delta_acc = np.diff(acc_means) / acc_means[:-1] * 100\n",
        "rel_delta_std = np.diff(acc_stds) / acc_stds[:-1] * 100\n",
        "k_mid = (ks[:-1] + ks[1:]) / 2\n",
        "\n",
        "# --- 4. 2D 변화율 시각화 ---\n",
        "fig, ax = plt.subplots(2, 1, figsize=(8, 8), sharex=True)\n",
        "\n",
        "# (a) ACC relative change rate\n",
        "ax[0].plot(k_mid, rel_delta_acc, marker='o', linestyle='-')\n",
        "ax[0].axhline(0, color='gray', linewidth=0.8, linestyle='--')\n",
        "ax[0].set_ylabel('Relative Δ ACC (%)')\n",
        "ax[0].set_title('Relative Change Rate of Accuracy vs. k')\n",
        "\n",
        "# (b) ACC std relative change rate\n",
        "ax[1].plot(k_mid, rel_delta_std, marker='s', linestyle='-')\n",
        "ax[1].axhline(0, color='gray', linewidth=0.8, linestyle='--')\n",
        "ax[1].set_xlabel('k (Number of Folds)')\n",
        "ax[1].set_ylabel('Relative Δ ACC std (%)')\n",
        "ax[1].set_title('Relative Change Rate of Accuracy Std vs. k')\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 807
        },
        "id": "ePfrcKAooiDr",
        "outputId": "1e24955c-6ade-4e72-a6c7-3b8568a349e0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x800 with 2 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAxYAAAMWCAYAAABsvhCnAAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQABAABJREFUeJzsnXl4FFX297+9d2dPSEICsgYEIcqOoiiKIBkVxRUXxm1GZ3CZcVDH8ecoouOoI+o4jqOOjssrqLjv4gKioiDIpiwqOwgJSUjI2mtVvX9U31u3qqu6q7ekE+7neXhIOtVVt6pu3brnnnO+xyJJkgQOh8PhcDgcDofDSQJrZzeAw+FwOBwOh8PhdH24YcHhcDgcDofD4XCShhsWHA6Hw+FwOBwOJ2m4YcHhcDgcDofD4XCShhsWHA6Hw+FwOBwOJ2m4YcHhcDgcDofD4XCShhsWHA6Hw+FwOBwOJ2m4YcHhcDgcDofD4XCShhsWHA6Hw+FwOBwOJ2m4YcHhcDqcZcuWwWKxYNmyZSndr8ViwV133ZXSfaaaK664Ajk5OZ3dDE4ChEIh/PnPf0afPn1gtVoxY8aMzm4SJ8Xw55PDSQ5uWHA4nKg8//zzsFgs9J/dbkfv3r1xxRVXYN++fR3eng8//DAjjQefz4dHHnkExx57LPLz8+F2u3HkkUfi+uuvx88//9zZzetQ0tFn2tvbcdddd6XcGI2HZ599Fg8++CDOP/98vPDCC/jTn/5k6nvjx4+HxWLBE088keYWcjgcTudi7+wGcDicrsHdd9+NAQMGwOfzYeXKlXj++eexfPlybNy4EW63u8Pa8eGHH+Lxxx/XNS68Xi/s9o4f1urr61FVVYU1a9bgzDPPxCWXXIKcnBz89NNPeOWVV/Df//4XgUCgw9vV2aSyz7S3t2PevHkAgJNPPjkNrY3N0qVL0bt3bzzyyCOmv7N161asXr0a/fv3x8KFCzF79uw0tpDD4XA6F25YcDgcU/zqV7/C2LFjAQC//e1vUVxcjAceeADvvvsuLrzwwk5unUxHGjgsV1xxBdatW4fXX38d5513nupv99xzD26//fZOaVdn0xX6TDzU1taioKAgru8sWLAApaWleOihh3D++edj165d6N+/f1ralwyiKCIQCHTaM8ThcLoHPBSKw+EkxIknnggA2L59u+rzH3/8Eeeffz6KiorgdrsxduxYvPvuuzH399VXX+GCCy5A37594XK50KdPH/zpT3+C1+ul21xxxRV4/PHHAUAVakNgcyxef/11WCwWfPHFFxHHeuqpp2CxWLBx48ak2/3tt9/igw8+wG9+85sIowIAXC4X5s+fH/H5vn37MGPGDOTk5KCkpAQ333wzBEFQbTN//nwcf/zx6NGjBzweD8aMGYPXX389Yl8WiwXXX3893n77bVRWVsLlcmH48OFYvHhxxLbLli3D2LFj4Xa7UVFRgaeeegp33XWX6joSFixYgDFjxsDj8aCoqAgXXXQR9u7dG/OaGKHXZwKBAO68806MGTMG+fn5yM7OxoknnojPP/+cbrNr1y6UlJQAAObNm0fvO+u1SvT+AUBbWxtuuukm9OnTBy6XC0OGDMH8+fMhSRI9vsViweeff45NmzbR45sJy3rppZdw/vnn48wzz0R+fj5eeukl3e2+/fZbnH766SgsLER2djaOOeYYPProo6ptfvzxR1x44YUoKSmBx+PBkCFDVEbrFVdcoWu06N1f0mcWLlyI4cOHw+Vy0f5itt8Bch8ZP348srKyUFhYiJNOOgmffPIJAODyyy9HcXExgsFgxPdOO+00DBkyxPC6XX/99cjJyUF7e3vE3y6++GKUlZXR5+W7777DtGnTUFxcDI/HgwEDBuCqq64y3He8rF+/HiUlJTj55JPR2tqasv1yON0RblhwOJyE2LVrFwCgsLCQfrZp0yYcd9xx2LJlC/7yl7/goYceQnZ2NmbMmIG33nor6v5ee+01tLe3Y/bs2Xjssccwbdo0PPbYY7jsssvoNr/73e8wdepUAMCLL75I/+lxxhlnICcnB6+++mrE3xYtWoThw4ejsrIy6XaTyeuvf/3rqNuxCIKAadOmoUePHpg/fz4mTZqEhx56CP/9739V2z366KMYNWoU7r77bvz973+H3W7HBRdcgA8++CBin8uXL8e1116Liy66CP/4xz/g8/lw3nnn4eDBg3SbdevWoaqqCgcPHsS8efPwm9/8BnfffTfefvvtiP3de++9uOyyyzB48GA8/PDDuPHGG7FkyRKcdNJJOHTokOlzZdHrM83NzXjmmWdw8skn44EHHsBdd92Furo6TJs2DevXrwcAlJSU0PyEc845h973c889F0By90+SJJx11ll45JFHUFVVhYcffhhDhgzBLbfcgjlz5tDjv/jiixg6dCiOOOIIevyjjjoq6r6//fZbbNu2DRdffDGcTifOPfdcLFy4MGK7Tz/9FCeddBI2b96MP/7xj3jooYdwyimn4P3336fbfP/99zj22GOxdOlSXH311Xj00UcxY8YMvPfee9EvehSWLl2KP/3pT5g5cyYeffRRapSY7Xfz5s3Dr3/9azgcDtx9992YN28e+vTpg6VLlwKQn4mDBw/i448/Vn2vpqYGS5cuxaxZswzbNnPmTLS1tUUcs729He+99x7OP/982Gw21NbW4rTTTsOuXbvwl7/8BY899hguvfRSrFy5MuHrwrJ69WpMnjwZo0aNwkcffcQTuzmcWEgcDocTheeee04CIH322WdSXV2dtHfvXun111+XSkpKJJfLJe3du5due+qpp0pHH3205PP56GeiKErHH3+8NHjwYPrZ559/LgGQPv/8c/pZe3t7xLHvu+8+yWKxSLt376afXXfddZLR0AVAmjt3Lv394osvlkpLS6VQKEQ/q66ulqxWq3T33XfH3W49zjnnHAmA1NjYGHU7wuWXXy4BUB1fkiRp1KhR0pgxY1Sfaa9JIBCQKisrpcmTJ6s+ByA5nU5p27Zt9LMNGzZIAKTHHnuMfjZ9+nQpKytL2rdvH/1s69atkt1uV13TXbt2STabTbr33ntVx/nhhx8ku90e8bmWePpMKBSS/H6/6vuNjY1Sz549pauuuop+VldXF3F/Ccncv7ffflsCIP3tb39TfX7++edLFotFdU0nTZokDR8+POr+WK6//nqpT58+kiiKkiRJ0ieffCIBkNatW0e3CYVC0oABA6R+/fpF9CHyPUmSpJNOOknKzc1VPQvabS6//HKpX79+Ee2YO3duxDMDQLJardKmTZsitjfT77Zu3SpZrVbpnHPOkQRB0G2TIAjSEUccIc2cOVP194cffliyWCzSjh07Io7N7qN3797Seeedp/r81VdflQBIX375pSRJkvTWW29JAKTVq1cb7iseLr/8cik7O1uSJElavny5lJeXJ51xxhmqvsXhcIzhHgsOh2OKKVOmoKSkBH369MH555+P7OxsvPvuuzjiiCMAAA0NDVi6dCkuvPBCtLS0oL6+HvX19Th48CCmTZuGrVu3RlUE8ng89Oe2tjbU19fj+OOPhyRJWLduXUJtnjlzJmpra1UhK6+//jpEUcTMmTNT0u7m5mYAQG5ublxt+/3vf6/6/cQTT8SOHTtUn7HXpLGxEU1NTTjxxBOxdu3aiP1NmTIFFRUV9PdjjjkGeXl5dJ+CIOCzzz7DjBkz0KtXL7rdoEGD8Ktf/Uq1rzfffBOiKOLCCy+k16O+vh5lZWUYPHiwKkwpGrH6DADYbDY4nU4Acpx/Q0MDQqEQxo4dq3ueWpK9fx9++CFsNhv+8Ic/qD6/6aabIEkSPvroI1PnqiUUCmHRokWYOXMmDUOaPHkySktLVV6LdevWYefOnbjxxhsj8jfI9+rq6vDll1/iqquuQt++fXW3SYRJkyZh2LBhEZ+b6Xdvv/02RFHEnXfeCatVPZUgbbJarbj00kvx7rvvoqWlhf594cKFOP744zFgwADDtlksFlxwwQX48MMPVeFHixYtQu/evTFx4kQAoNfs/fff1w25SpTPP/8c06ZNw6mnnoo333wTLpcrZfvmcLoz3LDgcDimePzxx/Hpp5/i9ddfx+mnn476+nrVy3bbtm2QJAl33HEHSkpKVP/mzp0LQE5+NWLPnj244oorUFRURPMOJk2aBABoampKqM1VVVXIz8/HokWL6GeLFi3CyJEjceSRR6ak3Xl5eQCgmjjFwu1205wBQmFhIRobG1Wfvf/++zjuuOPgdrtRVFREQ4L0rod2wqndZ21tLbxeLwYNGhSxnfazrVu3QpIkDB48OOKabNmyJer1YInVZwgvvPACjjnmGLjdbvTo0QMlJSX44IMPTN33ZO/f7t270atXrwjDkIQ57d6929S5avnkk09QV1eH8ePHY9u2bdi2bRt27tyJU045BS+//DJEUQSg5JuQsDw9iHEYbZtEMJrYm+l327dvh9Vq1TVMWC677DJ4vV4akvbTTz9hzZo1pkIHZ86cCa/XS8MNW1tb8eGHH+KCCy6gxsukSZNw3nnnYd68eSguLsbZZ5+N5557Dn6/39Q10MPn8+GMM87AqFGj8Oqrr1LDl8PhxIarQnE4HFOMHz+eKvzMmDEDEydOxCWXXIKffvoJOTk5dKJ08803Y9q0abr70JvUAvJq+tSpU9HQ0IBbb70VQ4cORXZ2Nvbt24crrriC7jteXC4XjbP/z3/+gwMHDuDrr7/G3//+d7pNMu0GgKFDhwIAfvjhB5qcHAubzRZzm6+++gpnnXUWTjrpJPznP/9BeXk5HA4HnnvuOd0EYKN9SuEE5HgQRREWiwUfffSR7n7NxpnH6jOAnPx7xRVXYMaMGbjllltQWloKm82G++67L0IYwKitQOL3L10Qr4SR+tUXX3yBU045JaXHNPJeaEUBCKxnghBvv4vFsGHDMGbMGCxYsACXXXYZFixYAKfTaUoV7LjjjkP//v3x6quv4pJLLsF7770Hr9dLvY2AfM6vv/46Vq5ciffeew8ff/wxrrrqKjz00ENYuXJlQjkRLpcLp59+Ot555x0sXrwYZ555Ztz74HAOV7hhweFw4oZM/E455RT8+9//xl/+8hcMHDgQAOBwODBlypS49vfDDz/g559/xgsvvKBK1v70008jto039GPmzJl44YUXsGTJEmzZsgWSJKkmJsm0GwCmT5+O++67DwsWLDBtWJjhjTfegNvtxscff6xa5X/uuecS2l9paSncbje2bdsW8TftZxUVFZAkCQMGDKCenWTR6zOAHJo2cOBAvPnmm6p7S7wNBKP7nuz969evHz777DO0tLSovBY//vgj/Xu8tLW14Z133sHMmTNx/vnnR/z9D3/4AxYuXIhTTjmFhq9t3LjRsP3kHFkVMz0KCwt1E+vj8bqY7XcVFRUQRRGbN2/GyJEjo+7zsssuw5w5c1BdXY2XXnoJZ5xxhiqBPxoXXnghHn30UTQ3N2PRokXo378/jjvuuIjtjjvuOBx33HG499578dJLL+HSSy/FK6+8gt/+9remjsNisViwcOFCnH322bjgggvw0UcfdVrtFA6nq8FDoTgcTkKcfPLJGD9+PP75z3/C5/OhtLQUJ598Mp566ilUV1dHbF9XV2e4L7Iqzq6uS5IUIbcJANnZ2QBgWploypQpKCoqwqJFi7Bo0SKMHz9eFQKSTLsBYMKECaiqqsIzzzyjq64UCARw8803m2ori81mg8ViUa0279q1S/cYZvc3ZcoUvP3229i/fz/9fNu2bRF5BOeeey5sNhvmzZsX4fGQJEmlNBUP2j5D2kX2S/j222+xYsUK1XezsrIARN73ZO/f6aefDkEQ8O9//1v1+SOPPAKLxRKRf2KGt956C21tbbjuuutw/vnnR/w788wz8cYbb8Dv92P06NEYMGAA/vnPf0acG7kmJSUlOOmkk/Dss89iz549utsA8mS/qakJ33//Pf2suro6pjIWi9l+N2PGDFitVtx9990RHkVtn7n44othsVjwxz/+ETt27IiqBqVl5syZ8Pv9eOGFF7B48eIIT0djY2PE8Yihw4ZDbd++3ZQHjOB0OvHmm29i3LhxmD59OlatWmX6uxzO4Qz3WHA4nIS55ZZbcMEFF+D555/H73//ezz++OOYOHEijj76aFx99dUYOHAgDhw4gBUrVuCXX37Bhg0bdPczdOhQVFRU4Oabb8a+ffuQl5eHN954IyLnAADGjBkDQF71nTZtGmw2Gy666CLDNjocDpx77rl45ZVX0NbWpltTItF2E/7f//t/OO2003Duuedi+vTpOPXUU5GdnY2tW7filVdeQXV1te5xo3HGGWfg4YcfRlVVFS655BLU1tbi8ccfx6BBg1QTx3i466678Mknn+CEE07A7Nmz6YS6srKSSrsC8gT1b3/7G2677Tbs2rULM2bMQG5uLnbu3Im33noL11xzTULGEhDZZ84880y8+eabOOecc3DGGWdg586dePLJJzFs2DBV0q7H48GwYcOwaNEiHHnkkSgqKkJlZSUqKyuTun/Tp0/HKaecgttvvx27du3CiBEj8Mknn+Cdd97BjTfeqEqIN8vChQvRo0cPHH/88bp/P+uss/D000/jgw8+wLnnnosnnngC06dPx8iRI3HllVeivLwcP/74IzZt2kSlWv/1r39h4sSJGD16NK655hoMGDAAu3btwgcffEDv3UUXXYRbb70V55xzDv7whz+gvb0dTzzxBI488khTifCA+X43aNAg3H777bjnnntw4okn4txzz4XL5cLq1avRq1cv3HfffXTbkpISVFVV4bXXXkNBQQHOOOMM09dy9OjR9Fh+v1/lbQTk/Jz//Oc/OOecc1BRUYGWlhY8/fTTyMvLw+mnn063O/XUUwEoksdm8Hg8eP/99zF58mT86le/whdffJHyPBcOp9vR0TJUHA6na0GkQ/XkHAVBkCoqKqSKigoq6bp9+3bpsssuk8rKyiSHwyH17t1bOvPMM6XXX3+dfk9Pbnbz5s3SlClTpJycHKm4uFi6+uqrqWTqc889R7cLhULSDTfcIJWUlEgWi0UlowkDOdJPP/1UAiBZLBaV1CmLmXZHo729XZo/f740btw4KScnR3I6ndLgwYOlG264QSVZyspZsuhJgv7vf/+TBg8eLLlcLmno0KHSc889Zygdet1110Xss1+/ftLll1+u+mzJkiXSqFGjJKfTKVVU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MwfHHXec5m833XQT/vznPxekXYWmGMZMOmzatAnV1dVpfebpp59Gr169cMcdd+D444/HmjVrMHjw4Jy0LxvC4TD8fn/B7iE9wWAQN910EyZNmoR58+bF/X3Tpk0FaBUhJB8wFIqQLsivfvUrAMCPP/6oeX/58uU4/vjj0aNHD5SUlGDs2LF47bXXkn7fRx99hN/97nfYcccd4fP5MHDgQFx66aVoa2tTjznttNNw//33A4Am1EYg51jMmTMHDocDH3zwQdy5Hn74YTgcDixZsiTrdi9cuBBvvvkmzjzzzDijAgB8Ph9uv/32uPfXr1+PKVOmoLy8HDU1NZg5cyZCoZDmmNtvvx0HHHAAevbsidLSUowZMwZz5syJ+y6Hw4ELL7wQr776KkaNGgWfz4fddttNEy4ieP/99zF27FiUlJRg2LBhePjhh3HDDTdo+lHw9NNPY8yYMSgtLUWPHj1w4oknYt26dUn7xAyjMeP3+3HddddhzJgxqKqqQllZGX71q1/hvffeU49Zs2YNampqAACzZs1Sr7vstcr0+gFAS0sLLr/8cgwcOBA+nw+77LILbr/9diiKop7f4XDgvffew9KlS9XzpxKW9eyzz+L444/H0UcfjaqqKjz77LOGxy1cuBBHHnkkunfvjrKyMuyxxx645557NMcsX74cJ5xwAmpqalBaWopddtlFY7SedtpphkaL0fUVY+aZZ57BbrvtBp/Pp46XVMcdEBkj++67L7p164bu3btj/PjxqiFw6qmnYocddkAgEIj73OGHH45ddtnFtN+2bNmCpqYmHHjggYZ/79WrF4DIeN5nn30AAKeffrp6bZ544gn12EceeQTDhg1DaWkp9t13X3z00Uem55UZNWoUDj744Lj3w+Ew+vfvj+OPP15977nnnsOYMWNQUVGByspK7L777nHXLxuefPJJuN1uXHHFFZZ9JyF2hYYFIV2QNWvWAAC6d++uvrd06VLsv//+WLZsGa666irccccdKCsrw5QpU/DKK68k/L4XX3wRra2tOO+883DvvffiiCOOwL333otTTjlFPeYPf/gDJk2aBAD417/+pf4z4qijjkJ5eTleeOGFuL89//zz2G233TBq1Kis2y0Wr7///e8THicTCoVwxBFHoGfPnrj99tsxYcIE3HHHHXjkkUc0x91zzz0YPXo0brzxRtx8881wu9343e9+hzfffDPuOz/++GOcf/75OPHEE3Hbbbehvb0dxx13HLZu3aoe89VXX2Hy5MnYunUrZs2ahTPPPBM33ngjXn311bjv++tf/4pTTjkFw4cPx5133olLLrkE7777LsaPH4+GhoaUf6uM0ZhpamrCP//5T0ycOBG33norbrjhBmzevBlHHHGEGjNfU1Oj5idMnTpVve7HHnssgOyun6Io+M1vfoO77roLkydPxp133olddtkFV1xxBS677DL1/P/6178wYsQIDBgwQD3/rrvumvC7Fy5ciFWrVuGkk06C1+vFsccei2eeeSbuuPnz52P8+PH4/vvvcfHFF+OOO+7AwQcfjDfeeEM95ttvv8V+++2HBQsW4Oyzz8Y999yDKVOm4PXXX0/c6QlYsGABLr30UkybNg333HOPapSkOu5mzZqF3//+9/B4PLjxxhsxa9YsDBw4EAsWLAAQuSe2bt2Kt99+W/O5uro6LFiwADNmzDBtW69evVBaWorXX38d27ZtMz1u1113xY033ggAOOecc9RrM378eADAY489hj/84Q/o06cPbrvtNhx44IH4zW9+k5KBPG3aNHz44Yeoq6vTvP/xxx9jw4YNOPHEEwFErt9JJ52E7t2749Zbb8Xf/vY3TJw4EZ988knSc6TCI488gtNPPx1XXXUV/v73v1vynYTYGoUQ0mmZPXu2AkB55513lM2bNyvr1q1T5syZo9TU1Cg+n09Zt26deuyhhx6q7L777kp7e7v6XjgcVg444ABl+PDh6nvvvfeeAkB577331PdaW1vjzn3LLbcoDodDWbt2rfreBRdcoJhNOwCU66+/Xn190kknKb169VKCwaD6Xm1treJ0OpUbb7wx7XYbMXXqVAWAUl9fn/A4wamnnqoA0JxfURRl9OjRypgxYzTv6fvE7/cro0aNUg455BDN+wAUr9errFq1Sn3vm2++UQAo9957r/reMccco3Tr1k1Zv369+t7KlSsVt9ut6dM1a9YoLpdL+etf/6o5z3fffae43e649/WkM2aCwaDS0dGh+Xx9fb3Su3dv5YwzzlDf27x5c9z1FWRz/V599VUFgPKXv/xF8/7xxx+vOBwOTZ9OmDBB2W233RJ+n8yFF16oDBw4UAmHw4qiKMq8efMUAMpXX32lHhMMBpUhQ4YogwYNihtD4nOKoijjx49XKioqNPeC/phT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szBy5Ej885//hMPhGMCR5RZ//etfccopp6CqqopvozlH9CeBQADnnXceJEnCokWLVK/deuut/OfDDjsMVqsV11xzDR588MGDquOvlh/84Af856lTp+Kwww7D2LFj8emnn+Lkk08ewJHlHs899xwuuugi2O121faDfe7Fs0kOZigUaoAoLS2FyWSKqRLQ2NiIysrKARrV4OaGG27Af/7zHyxZsgTDhg1L+N5Zs2YBAGpqavpjaDlDYWEhJkyYgJqaGlRWVsLv96O9vV31HpqDanbv3o2PPvoIP/rRjxK+j+acPmwuJbrXVVZWxhStCAaDaG1tpbmIqKjYvXs3Fi9erPJW6DFr1iwEg0Hs2rWrfwaYI4wZMwalpaX8GqV5Z4zPP/8c1dXVSe+BwME19+LZJEaerZWVlbr3RPZaLkPCYoCwWq2YMWMGPv74Y74tHA7j448/xuzZswdwZIMPSZJwww034M0338Qnn3yC0aNHJ/2b9evXAwCGDBnSx6PLLbq7u7F9+3YMGTIEM2bMgMViUc3B6upq7Nmzh+aggueffx7l5eU47bTTEr6P5pw+o0ePRmVlpWqedXZ2YtWqVXyezZ49G+3t7Vi7di1/zyeffIJwOMwF28EKExXbtm3DRx99hJKSkqR/s379eoiiGBPmc7Czb98+7N+/n1+jNO+M8de//hUzZszAtGnTkr73YJh7yWwSI8/W2bNn45tvvlEJW7ZocMghh/TPjvQVA5w8flDz6quvSjabTXrhhRekzZs3S1dffbVUWFioqhJASNJ1110nFRQUSJ9++qlUX1/P//X29kqSJEk1NTXSAw88IK1Zs0bauXOn9Pbbb0tjxoyR5syZM8AjH3huu+026dNPP5V27twpLV++XJo7d65UWloqNTU1SZIkSddee600YsQI6ZNPPpHWrFkjzZ49W5o9e/YAj3rwEAqFpBEjRkh33nmnajvNOTVdXV3SunXrpHXr1kkApEcffVRat24dr1z00EMPSYWFhdLbb78tbdiwQTrrrLOk0aNHSx6Ph3/GggULpOnTp0urVq2Sli1bJo0fP1664IILBmqX+o1Ex87v90tnnnmmNGzYMGn9+vWq+x+rHLNixQrpsccek9avXy9t375deumll6SysjLpkksuGeA963sSHbuuri7p9ttvl1auXCnt3LlT+uijj6QjjjhCGj9+vOT1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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import re\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# --- 1. fold_results.txt에서 raw 결과 읽어오기 ---\n",
        "with open('fold_results.txt', 'r', encoding='utf-8') as f:\n",
        "    raw = f.read()\n",
        "\n",
        "# --- 2. 정규표현식으로 k, acc_mean, acc_std 추출 ---\n",
        "pattern = (\n",
        "    r\"k\\s*=\\s*(\\d+)\\s*→\\s*ACC\\s*=\\s*([0-9.]+)\\s*±\\s*([0-9.]+),\"\n",
        ")\n",
        "ks, acc_means, acc_stds = [], [], []\n",
        "\n",
        "for line in raw.splitlines():\n",
        "    m = re.search(pattern, line)\n",
        "    if m:\n",
        "        ks.append(int(m.group(1)))\n",
        "        acc_means.append(float(m.group(2)))\n",
        "        acc_stds.append(float(m.group(3)))\n",
        "\n",
        "ks        = np.array(ks)\n",
        "acc_means = np.array(acc_means)\n",
        "acc_stds  = np.array(acc_stds)\n",
        "\n",
        "# --- 3. k 범위(10~30)로 필터링 ---\n",
        "mask = (ks >= 10) & (ks <= 30)\n",
        "ks2        = ks[mask]\n",
        "acc_means2 = acc_means[mask]\n",
        "acc_stds2  = acc_stds[mask]\n",
        "\n",
        "# --- 4. 상대 변화율 계산 (이후 k_mid는 10~30 구간) ---\n",
        "rel_delta_acc  = np.diff(acc_means2) / acc_means2[:-1] * 100\n",
        "rel_delta_std  = np.diff(acc_stds2)  / acc_stds2[:-1]  * 100\n",
        "k_mid          = (ks2[:-1] + ks2[1:]) / 2\n",
        "\n",
        "# --- 5. 2D 변화율 시각화 (k=10~30) ---\n",
        "fig, ax = plt.subplots(2, 1, figsize=(8, 8), sharex=True)\n",
        "\n",
        "# (a) ACC 상대 변화율\n",
        "ax[0].plot(k_mid, rel_delta_acc, marker='o', linestyle='-')\n",
        "ax[0].axhline(0, color='gray', linewidth=0.8, linestyle='--')\n",
        "ax[0].set_ylabel('Relative Δ ACC (%)')\n",
        "ax[0].set_title('Relative Change Rate of Accuracy (k=10–30)')\n",
        "\n",
        "# (b) ACC std 상대 변화율\n",
        "ax[1].plot(k_mid, rel_delta_std, marker='s', linestyle='-')\n",
        "ax[1].axhline(0, color='gray', linewidth=0.8, linestyle='--')\n",
        "ax[1].set_xlabel('k (Number of Folds)')\n",
        "ax[1].set_ylabel('Relative Δ ACC std (%)')\n",
        "ax[1].set_title('Relative Change Rate of Accuracy Std (k=10–30)')\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 807
        },
        "id": "87E-1f2Jqadl",
        "outputId": "78e504ce-3c7e-4cab-a818-45c3a0bc8d56"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x800 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "로지스틱 회귀에서의 optimal k는 18로 지정한다.\n",
        ">> 표준편차의 변화율, acc의 변화율이 수렴하는 부분이기 때문. (10~30 범위 중에서 가장)"
      ],
      "metadata": {
        "id": "930nn6ZhrOg8"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn.model_selection import StratifiedKFold\n",
        "from sklearn.metrics import accuracy_score, f1_score\n",
        "\n",
        "# --- 1. 데이터 로드 및 피처/레이블 분리 ---\n",
        "train_df = pd.read_csv('process1_result.csv')\n",
        "test_df  = pd.read_csv('process2_result.csv')\n",
        "\n",
        "features      = ['Sex', 'SibSp', 'Parch', 'Embarked', 'TicketNumeric']\n",
        "X_all         = train_df[features].values\n",
        "y_all         = train_df['Survived'].values\n",
        "X_test_raw    = test_df[features].values\n",
        "passenger_ids = test_df['PassengerId'].values\n",
        "\n",
        "# --- 2. 시그모이드 정의 ---\n",
        "def sigmoid(z):\n",
        "    return 1 / (1 + np.exp(-z))\n",
        "\n",
        "# --- 3. 표준화 함수 (훈련셋으로만 fit → train/val/test 변환) ---\n",
        "def standardize(train, other):\n",
        "    mean = train.mean(axis=0)\n",
        "    std  = train .std(axis=0)\n",
        "    std[std == 0] = 1.0\n",
        "    return (train - mean) / std, (other - mean) / std\n",
        "\n",
        "# --- 4. 하이퍼파라미터 고정 ---\n",
        "lr         = 0.001   # 학습률\n",
        "num_epochs = 9       # 에폭 수\n",
        "k_folds    = 18      # k 값\n",
        "\n",
        "# --- 5. 18-fold 교차검증 & 평가 ---\n",
        "skf    = StratifiedKFold(n_splits=k_folds, shuffle=True, random_state=42)\n",
        "accs   = []\n",
        "f1s    = []\n",
        "\n",
        "for fold, (train_idx, val_idx) in enumerate(skf.split(X_all, y_all), start=1):\n",
        "    # 5.1. 분할\n",
        "    X_tr_raw, y_tr = X_all[train_idx], y_all[train_idx]\n",
        "    X_val_raw, y_val = X_all[val_idx], y_all[val_idx]\n",
        "\n",
        "    # 5.2. 표준화\n",
        "    X_tr, X_val = standardize(X_tr_raw, X_val_raw)\n",
        "\n",
        "    # 5.3. 파라미터 초기화\n",
        "    m, n = X_tr.shape\n",
        "    w = np.zeros(n)\n",
        "    b = 0.0\n",
        "\n",
        "    # 5.4. SGD 학습\n",
        "    for epoch in range(num_epochs):\n",
        "        for xi, yi in zip(X_tr, y_tr):\n",
        "            z_i   = np.dot(xi, w) + b\n",
        "            delta = sigmoid(z_i) - yi\n",
        "            w    -= lr * delta * xi\n",
        "            b    -= lr * delta\n",
        "\n",
        "    # 5.5. 검증\n",
        "    preds = (sigmoid(X_val.dot(w) + b) >= 0.5).astype(int)\n",
        "    acc   = accuracy_score(y_val, preds)\n",
        "    f1    = f1_score(y_val, preds)\n",
        "    accs.append(acc)\n",
        "    f1s .append(f1)\n",
        "    print(f\"Fold {fold:2d} — ACC: {acc:.4f}, F1: {f1:.4f}\")\n",
        "\n",
        "# 5.6. Fold별 결과 평균·표준편차\n",
        "print(\"\\n=== Cross-Validation Results (k=18) ===\")\n",
        "print(f\"ACC: {np.mean(accs):.4f} ± {np.std(accs):.4f}\")\n",
        "print(f\"F1 : {np.mean(f1s ):.4f} ± {np.std(f1s ):.4f}\")\n",
        "\n",
        "# --- 6. 최종 모델: 전체 데이터로 재학습 ---\n",
        "# 6.1. 전체 훈련 데이터 표준화\n",
        "X_all_scaled, X_test_scaled = standardize(X_all, X_test_raw)\n",
        "\n",
        "# 6.2. 파라미터 초기화\n",
        "w_final = np.zeros(X_all_scaled.shape[1])\n",
        "b_final = 0.0\n",
        "\n",
        "# 6.3. SGD 학습\n",
        "for epoch in range(num_epochs):\n",
        "    for xi, yi in zip(X_all_scaled, y_all):\n",
        "        z_i   = np.dot(xi, w_final) + b_final\n",
        "        delta = sigmoid(z_i) - yi\n",
        "        w_final -= lr * delta * xi\n",
        "        b_final -= lr * delta\n",
        "\n",
        "# --- 7. 테스트 예측 & 제출 파일 저장 ---\n",
        "z_test      = X_test_scaled.dot(w_final) + b_final\n",
        "predictions = (sigmoid(z_test) >= 0.5).astype(int)\n",
        "\n",
        "submission = pd.DataFrame({\n",
        "    'PassengerId': passenger_ids,\n",
        "    'Survived':    predictions\n",
        "})\n",
        "submission.to_csv('submission_k18_logistic_sgd.csv', index=False)\n",
        "print(\"\\nSaved: submission_k18_logistic_sgd.csv\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-0yzdTf_rbv2",
        "outputId": "f28ea30e-7dbc-4b6c-84de-216d1db5ba74"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Fold  1 — ACC: 0.8200, F1: 0.7692\n",
            "Fold  2 — ACC: 0.8600, F1: 0.8000\n",
            "Fold  3 — ACC: 0.7200, F1: 0.5882\n",
            "Fold  4 — ACC: 0.7400, F1: 0.6667\n",
            "Fold  5 — ACC: 0.8000, F1: 0.7059\n",
            "Fold  6 — ACC: 0.7800, F1: 0.6857\n",
            "Fold  7 — ACC: 0.7600, F1: 0.6667\n",
            "Fold  8 — ACC: 0.7600, F1: 0.6000\n",
            "Fold  9 — ACC: 0.7400, F1: 0.6061\n",
            "Fold 10 — ACC: 0.8163, F1: 0.7568\n",
            "Fold 11 — ACC: 0.7755, F1: 0.6667\n",
            "Fold 12 — ACC: 0.7551, F1: 0.7000\n",
            "Fold 13 — ACC: 0.7551, F1: 0.6842\n",
            "Fold 14 — ACC: 0.7755, F1: 0.6857\n",
            "Fold 15 — ACC: 0.7551, F1: 0.7143\n",
            "Fold 16 — ACC: 0.8776, F1: 0.8500\n",
            "Fold 17 — ACC: 0.8367, F1: 0.7647\n",
            "Fold 18 — ACC: 0.7755, F1: 0.7027\n",
            "\n",
            "=== Cross-Validation Results (k=18) ===\n",
            "ACC: 0.7835 ± 0.0420\n",
            "F1 : 0.7007 ± 0.0668\n",
            "\n",
            "Saved: submission_k18_logistic_sgd.csv\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "교차검증 - Decistion Tree\n"
      ],
      "metadata": {
        "id": "7slyt9hXu_-a"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn.model_selection import StratifiedKFold\n",
        "from sklearn.metrics import accuracy_score, f1_score\n",
        "\n",
        "# --- 0. Gini-기반 수작업 트리 함수 정의 (기존 구현 그대로) ---\n",
        "def gini(labels):\n",
        "    classes, counts = np.unique(labels, return_counts=True)\n",
        "    p = counts / counts.sum()\n",
        "    return 1.0 - np.sum(p**2)\n",
        "\n",
        "def weighted_gini(col, labels, t):\n",
        "    left  = labels[col <= t]\n",
        "    right = labels[col >  t]\n",
        "    if len(left)==0 or len(right)==0:\n",
        "        return None\n",
        "    n = len(labels)\n",
        "    return (len(left)/n)*gini(left) + (len(right)/n)*gini(right)\n",
        "\n",
        "def find_best_split(X, y):\n",
        "    best_gain, best_feat, best_t = 0.0, None, None\n",
        "    parent = gini(y)\n",
        "    for feat in range(X.shape[1]):\n",
        "        vals = np.unique(X[:,feat])\n",
        "        thresholds = (vals[:-1] + vals[1:]) / 2.0\n",
        "        for t in thresholds:\n",
        "            wg = weighted_gini(X[:,feat], y, t)\n",
        "            if wg is None: continue\n",
        "            gain = parent - wg\n",
        "            if gain > best_gain:\n",
        "                best_gain, best_feat, best_t = gain, feat, t\n",
        "    return best_feat, best_t\n",
        "\n",
        "def build_tree(X, y, depth=0, max_depth=15):\n",
        "    if len(np.unique(y)) == 1 or depth == max_depth:\n",
        "        vals, cnts = np.unique(y, return_counts=True)\n",
        "        return {'leaf': True, 'pred': vals[np.argmax(cnts)]}\n",
        "    feat, thresh = find_best_split(X, y)\n",
        "    if feat is None:\n",
        "        vals, cnts = np.unique(y, return_counts=True)\n",
        "        return {'leaf': True, 'pred': vals[np.argmax(cnts)]}\n",
        "    mask = X[:, feat] <= thresh\n",
        "    left  = build_tree(X[mask],  y[mask],  depth+1, max_depth)\n",
        "    right = build_tree(X[~mask], y[~mask], depth+1, max_depth)\n",
        "    return {'leaf': False, 'feat': feat, 'thresh': thresh, 'left': left, 'right': right}\n",
        "\n",
        "def predict(tree, x):\n",
        "    if tree['leaf']:\n",
        "        return tree['pred']\n",
        "    if x[tree['feat']] <= tree['thresh']:\n",
        "        return predict(tree['left'], x)\n",
        "    else:\n",
        "        return predict(tree['right'], x)\n",
        "\n",
        "# --- 1. 데이터 로드 ---\n",
        "train_df = pd.read_csv('process1_result.csv')\n",
        "features = ['Sex', 'SibSp', 'Parch', 'Embarked', 'TicketNumeric']\n",
        "X_all    = train_df[features].values\n",
        "y_all    = train_df['Survived'].values\n",
        "\n",
        "# --- 2. k를 2부터 30까지 바꿔가며 교차검증 ---\n",
        "results = {}\n",
        "for k in range(2, 31):\n",
        "    skf = StratifiedKFold(n_splits=k, shuffle=True, random_state=42)\n",
        "    accs, f1s = [], []\n",
        "\n",
        "    for train_idx, val_idx in skf.split(X_all, y_all):\n",
        "        X_tr, y_tr = X_all[train_idx], y_all[train_idx]\n",
        "        X_val, y_val = X_all[val_idx], y_all[val_idx]\n",
        "\n",
        "        # --- 트리 학습 & 예측 ---\n",
        "        tree = build_tree(X_tr, y_tr, max_depth=15)\n",
        "        preds = np.array([predict(tree, x) for x in X_val])\n",
        "\n",
        "        accs.append( accuracy_score(y_val, preds) )\n",
        "        f1s.append ( f1_score   (y_val, preds) )\n",
        "\n",
        "    results[k] = {\n",
        "        'acc_mean': np.mean(accs),\n",
        "        'acc_std':  np.std(accs),\n",
        "        'f1_mean':  np.mean(f1s),\n",
        "        'f1_std':   np.std(f1s)\n",
        "    }\n",
        "    print(f\"k={k:2d} → ACC={results[k]['acc_mean']:.4f}±{results[k]['acc_std']:.4f}, \"\n",
        "          f\"F1={results[k]['f1_mean']:.4f}±{results[k]['f1_std']:.4f}\")\n",
        "\n",
        "# --- 3. 최적 k 선택 & 최종 모델 재학습 (예시) ---\n",
        "# optimal_k = max(results, key=lambda k: results[k]['acc_mean'])\n",
        "# print(\"Optimal k:\", optimal_k)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 428
        },
        "id": "SHyAU9rcvCmA",
        "outputId": "4cce51e9-c83a-4f65-cd11-74ffb7249d74"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "k= 2 → ACC=0.7520±0.0031, F1=0.6730±0.0165\n",
            "k= 3 → ACC=0.7823±0.0141, F1=0.6949±0.0287\n",
            "k= 4 → ACC=0.7879±0.0172, F1=0.7104±0.0319\n"
          ]
        },
        {
          "output_type": "error",
          "ename": "KeyboardInterrupt",
          "evalue": "",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-55-ce482a287e45>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     70\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     71\u001b[0m         \u001b[0;31m# --- 트리 학습 & 예측 ---\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 72\u001b[0;31m         \u001b[0mtree\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbuild_tree\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_tr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_tr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax_depth\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m15\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     73\u001b[0m         \u001b[0mpreds\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtree\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mx\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mX_val\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     74\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-55-ce482a287e45>\u001b[0m in \u001b[0;36mbuild_tree\u001b[0;34m(X, y, depth, max_depth)\u001b[0m\n\u001b[1;32m     41\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m'leaf'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'pred'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mvals\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0margmax\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcnts\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     42\u001b[0m     \u001b[0mmask\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfeat\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m<=\u001b[0m \u001b[0mthresh\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 43\u001b[0;31m     \u001b[0mleft\u001b[0m  \u001b[0;34m=\u001b[0m \u001b[0mbuild_tree\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m  \u001b[0my\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m  \u001b[0mdepth\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax_depth\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     44\u001b[0m     \u001b[0mright\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbuild_tree\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m~\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m~\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdepth\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax_depth\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     45\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m'leaf'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'feat'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mfeat\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'thresh'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mthresh\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'left'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mleft\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'right'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mright\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-55-ce482a287e45>\u001b[0m in \u001b[0;36mbuild_tree\u001b[0;34m(X, y, depth, max_depth)\u001b[0m\n\u001b[1;32m     42\u001b[0m     \u001b[0mmask\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfeat\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m<=\u001b[0m \u001b[0mthresh\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     43\u001b[0m     \u001b[0mleft\u001b[0m  \u001b[0;34m=\u001b[0m \u001b[0mbuild_tree\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m  \u001b[0my\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m  \u001b[0mdepth\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax_depth\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 44\u001b[0;31m     \u001b[0mright\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbuild_tree\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m~\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m~\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdepth\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax_depth\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     45\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m'leaf'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'feat'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mfeat\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'thresh'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mthresh\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'left'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mleft\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'right'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mright\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     46\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-55-ce482a287e45>\u001b[0m in \u001b[0;36mbuild_tree\u001b[0;34m(X, y, depth, max_depth)\u001b[0m\n\u001b[1;32m     41\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m'leaf'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'pred'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mvals\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0margmax\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcnts\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     42\u001b[0m     \u001b[0mmask\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfeat\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m<=\u001b[0m \u001b[0mthresh\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 43\u001b[0;31m     \u001b[0mleft\u001b[0m  \u001b[0;34m=\u001b[0m \u001b[0mbuild_tree\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m  \u001b[0my\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m  \u001b[0mdepth\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax_depth\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     44\u001b[0m     \u001b[0mright\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbuild_tree\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m~\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m~\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdepth\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax_depth\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     45\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m'leaf'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'feat'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mfeat\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'thresh'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mthresh\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'left'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mleft\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'right'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mright\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-55-ce482a287e45>\u001b[0m in \u001b[0;36mbuild_tree\u001b[0;34m(X, y, depth, max_depth)\u001b[0m\n\u001b[1;32m     42\u001b[0m     \u001b[0mmask\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfeat\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m<=\u001b[0m \u001b[0mthresh\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     43\u001b[0m     \u001b[0mleft\u001b[0m  \u001b[0;34m=\u001b[0m \u001b[0mbuild_tree\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m  \u001b[0my\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m  \u001b[0mdepth\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax_depth\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 44\u001b[0;31m     \u001b[0mright\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbuild_tree\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m~\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m~\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdepth\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax_depth\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     45\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m'leaf'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'feat'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mfeat\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'thresh'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mthresh\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'left'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mleft\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'right'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mright\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     46\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-55-ce482a287e45>\u001b[0m in \u001b[0;36mbuild_tree\u001b[0;34m(X, y, depth, max_depth)\u001b[0m\n\u001b[1;32m     42\u001b[0m     \u001b[0mmask\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfeat\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m<=\u001b[0m \u001b[0mthresh\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     43\u001b[0m     \u001b[0mleft\u001b[0m  \u001b[0;34m=\u001b[0m \u001b[0mbuild_tree\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m  \u001b[0my\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m  \u001b[0mdepth\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax_depth\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 44\u001b[0;31m     \u001b[0mright\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbuild_tree\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m~\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m~\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdepth\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax_depth\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     45\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m'leaf'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'feat'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mfeat\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'thresh'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mthresh\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'left'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mleft\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'right'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mright\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     46\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-55-ce482a287e45>\u001b[0m in \u001b[0;36mbuild_tree\u001b[0;34m(X, y, depth, max_depth)\u001b[0m\n\u001b[1;32m     42\u001b[0m     \u001b[0mmask\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfeat\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m<=\u001b[0m \u001b[0mthresh\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     43\u001b[0m     \u001b[0mleft\u001b[0m  \u001b[0;34m=\u001b[0m \u001b[0mbuild_tree\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m  \u001b[0my\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m  \u001b[0mdepth\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax_depth\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 44\u001b[0;31m     \u001b[0mright\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbuild_tree\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m~\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m~\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdepth\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax_depth\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     45\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m'leaf'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'feat'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mfeat\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'thresh'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mthresh\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'left'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mleft\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'right'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mright\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     46\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-55-ce482a287e45>\u001b[0m in \u001b[0;36mbuild_tree\u001b[0;34m(X, y, depth, max_depth)\u001b[0m\n\u001b[1;32m     41\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m'leaf'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'pred'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mvals\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0margmax\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcnts\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     42\u001b[0m     \u001b[0mmask\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfeat\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m<=\u001b[0m \u001b[0mthresh\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 43\u001b[0;31m     \u001b[0mleft\u001b[0m  \u001b[0;34m=\u001b[0m \u001b[0mbuild_tree\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m  \u001b[0my\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m  \u001b[0mdepth\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax_depth\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     44\u001b[0m     \u001b[0mright\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbuild_tree\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m~\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m~\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdepth\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax_depth\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     45\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m'leaf'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'feat'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mfeat\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'thresh'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mthresh\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'left'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mleft\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'right'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mright\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-55-ce482a287e45>\u001b[0m in \u001b[0;36mbuild_tree\u001b[0;34m(X, y, depth, max_depth)\u001b[0m\n\u001b[1;32m     36\u001b[0m         \u001b[0mvals\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcnts\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munique\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreturn_counts\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     37\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m'leaf'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'pred'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mvals\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0margmax\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcnts\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 38\u001b[0;31m     \u001b[0mfeat\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mthresh\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfind_best_split\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     39\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mfeat\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     40\u001b[0m         \u001b[0mvals\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcnts\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munique\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreturn_counts\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-55-ce482a287e45>\u001b[0m in \u001b[0;36mfind_best_split\u001b[0;34m(X, y)\u001b[0m\n\u001b[1;32m     25\u001b[0m         \u001b[0mthresholds\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mvals\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mvals\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m/\u001b[0m \u001b[0;36m2.0\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     26\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mt\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mthresholds\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 27\u001b[0;31m             \u001b[0mwg\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mweighted_gini\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mfeat\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mt\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     28\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mwg\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;32mcontinue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     29\u001b[0m             \u001b[0mgain\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mparent\u001b[0m \u001b[0;34m-\u001b[0m \u001b[0mwg\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-55-ce482a287e45>\u001b[0m in \u001b[0;36mweighted_gini\u001b[0;34m(col, labels, t)\u001b[0m\n\u001b[1;32m     16\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     17\u001b[0m     \u001b[0mn\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 18\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mleft\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m/\u001b[0m\u001b[0mn\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mgini\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mleft\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mright\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m/\u001b[0m\u001b[0mn\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mgini\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mright\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     19\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     20\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mfind_best_split\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-55-ce482a287e45>\u001b[0m in \u001b[0;36mgini\u001b[0;34m(labels)\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;31m# --- 0. Gini-기반 수작업 트리 함수 정의 (기존 구현 그대로) ---\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mgini\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m     \u001b[0mclasses\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcounts\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munique\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreturn_counts\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m     \u001b[0mp\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcounts\u001b[0m \u001b[0;34m/\u001b[0m \u001b[0mcounts\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0;36m1.0\u001b[0m \u001b[0;34m-\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mp\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/numpy/lib/arraysetops.py\u001b[0m in \u001b[0;36munique\u001b[0;34m(ar, return_index, return_inverse, return_counts, axis, equal_nan)\u001b[0m\n\u001b[1;32m    272\u001b[0m     \u001b[0mar\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0masanyarray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mar\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    273\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0maxis\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 274\u001b[0;31m         ret = _unique1d(ar, return_index, return_inverse, return_counts, \n\u001b[0m\u001b[1;32m    275\u001b[0m                         equal_nan=equal_nan)\n\u001b[1;32m    276\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0m_unpack_tuple\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mret\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/numpy/lib/arraysetops.py\u001b[0m in \u001b[0;36m_unique1d\u001b[0;34m(ar, return_index, return_inverse, return_counts, equal_nan)\u001b[0m\n\u001b[1;32m    362\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mreturn_counts\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    363\u001b[0m         \u001b[0midx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconcatenate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnonzero\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msize\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 364\u001b[0;31m         \u001b[0mret\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdiff\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0midx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    365\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mret\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    366\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/numpy/lib/function_base.py\u001b[0m in \u001b[0;36mdiff\u001b[0;34m(a, n, axis, prepend, append)\u001b[0m\n\u001b[1;32m   1441\u001b[0m         \u001b[0ma\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconcatenate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcombined\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1442\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1443\u001b[0;31m     \u001b[0mslice1\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mslice\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mnd\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1444\u001b[0m     \u001b[0mslice2\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mslice\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mnd\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1445\u001b[0m     \u001b[0mslice1\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mslice\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "Wt8TEKCfwQQS"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import re\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# --- 1. Decision Tree k-fold 결과를 멀티라인 문자열로 붙여넣기 ---\n",
        "raw = \"\"\"\n",
        "k=  2 → ACC=0.7520±0.0031, F1=0.6730±0.0165\n",
        "k=  3 → ACC=0.7823±0.0141, F1=0.6949±0.0287\n",
        "k=  4 → ACC=0.7879±0.0172, F1=0.7104±0.0319\n",
        "k=  5 → ACC=0.7800±0.0259, F1=0.6978±0.0380\n",
        "k=  6 → ACC=0.7677±0.0172, F1=0.6849±0.0322\n",
        "k=  7 → ACC=0.7868±0.0389, F1=0.7098±0.0508\n",
        "k=  8 → ACC=0.7846±0.0185, F1=0.7036±0.0315\n",
        "k=  9 → ACC=0.7912±0.0333, F1=0.7111±0.0542\n",
        "k= 10 → ACC=0.7890±0.0349, F1=0.7104±0.0542\n",
        "k= 11 → ACC=0.7834±0.0339, F1=0.7021±0.0588\n",
        "k= 12 → ACC=0.7902±0.0407, F1=0.7089±0.0623\n",
        "k= 13 → ACC=0.7902±0.0255, F1=0.7056±0.0491\n",
        "k= 14 → ACC=0.7958±0.0374, F1=0.7180±0.0620\n",
        "k= 15 → ACC=0.7869±0.0370, F1=0.7061±0.0556\n",
        "k= 16 → ACC=0.7869±0.0375, F1=0.7064±0.0600\n",
        "k= 17 → ACC=0.7858±0.0431, F1=0.7045±0.0629\n",
        "k= 18 → ACC=0.7868±0.0498, F1=0.7027±0.0743\n",
        "k= 19 → ACC=0.7822±0.0395, F1=0.6996±0.0587\n",
        "k= 20 → ACC=0.7925±0.0524, F1=0.7141±0.0732\n",
        "k= 21 → ACC=0.7903±0.0594, F1=0.7085±0.0874\n",
        "k= 22 → ACC=0.7780±0.0578, F1=0.6927±0.0791\n",
        "k= 23 → ACC=0.7856±0.0620, F1=0.7014±0.0875\n",
        "k= 24 → ACC=0.7856±0.0596, F1=0.7048±0.0786\n",
        "k= 25 → ACC=0.7778±0.0638, F1=0.6932±0.0871\n",
        "k= 26 → ACC=0.7890±0.0557, F1=0.7067±0.0736\n",
        "k= 27 → ACC=0.7912±0.0656, F1=0.7125±0.0844\n",
        "k= 28 → ACC=0.7845±0.0781, F1=0.7019±0.1058\n",
        "k= 29 → ACC=0.7766±0.0770, F1=0.6947±0.0994\n",
        "k= 30 → ACC=0.7833±0.0678, F1=0.6971±0.0967\n",
        "\"\"\"\n",
        "\n",
        "# --- 2. 정규표현식으로 k, acc_mean, acc_std 추출 ---\n",
        "pattern = r\"k\\s*=\\s*(\\d+)\\s*→\\s*ACC\\s*=\\s*([0-9.]+)±([0-9.]+),\"\n",
        "ks, acc_means, acc_stds = [], [], []\n",
        "\n",
        "for line in raw.strip().splitlines():\n",
        "    m = re.search(pattern, line)\n",
        "    if m:\n",
        "        ks.append(int(m.group(1)))\n",
        "        acc_means.append(float(m.group(2)))\n",
        "        acc_stds.append(float(m.group(3)))\n",
        "\n",
        "ks        = np.array(ks)\n",
        "acc_means = np.array(acc_means)\n",
        "acc_stds  = np.array(acc_stds)\n",
        "\n",
        "# --- 3. 상대 변화율(%): successive differences ---\n",
        "rel_delta_acc = np.diff(acc_means) / acc_means[:-1] * 100\n",
        "rel_delta_std = np.diff(acc_stds)  / acc_stds[:-1]  * 100\n",
        "k_mid         = (ks[:-1] + ks[1:]) / 2\n",
        "\n",
        "# --- 4. 2D 변화율 시각화 ---\n",
        "fig, (ax1, ax2) = plt.subplots(2, 1, figsize=(8, 8), sharex=True)\n",
        "\n",
        "ax1.plot(k_mid, rel_delta_acc, marker='o', linestyle='-')\n",
        "ax1.axhline(0, color='gray', linestyle='--')\n",
        "ax1.set_ylabel('Δ Accuracy (%)')\n",
        "ax1.set_title('Relative Change Rate of ACC Mean vs. k')\n",
        "\n",
        "ax2.plot(k_mid, rel_delta_std, marker='s', linestyle='-')\n",
        "ax2.axhline(0, color='gray', linestyle='--')\n",
        "ax2.set_xlabel('k (Number of Folds)')\n",
        "ax2.set_ylabel('Δ ACC Std (%)')\n",
        "ax2.set_title('Relative Change Rate of ACC Std vs. k')\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 807
        },
        "id": "YIVLNn9Xwd4h",
        "outputId": "c07822e4-84df-42ce-944e-c35b62d90957"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x800 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "DT에서 K=16으로 지정."
      ],
      "metadata": {
        "id": "M6qml1mlxHHg"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn.model_selection import StratifiedKFold\n",
        "from sklearn.metrics import accuracy_score, f1_score\n",
        "\n",
        "# --- 1. 데이터 로드 & 피처/레이블 분리 ---\n",
        "train_df = pd.read_csv('process1_result.csv')\n",
        "features = ['Sex', 'SibSp', 'Parch', 'Embarked', 'TicketNumeric']\n",
        "X_all    = train_df[features].values\n",
        "y_all    = train_df['Survived'].values\n",
        "\n",
        "# --- 2. Gini 기반 수작업 Decision Tree 함수들 ---\n",
        "def gini(labels):\n",
        "    classes, counts = np.unique(labels, return_counts=True)\n",
        "    p = counts / counts.sum()\n",
        "    return 1.0 - np.sum(p**2)\n",
        "\n",
        "def weighted_gini(col, labels, t):\n",
        "    left  = labels[col <= t]\n",
        "    right = labels[col >  t]\n",
        "    if len(left)==0 or len(right)==0:\n",
        "        return None\n",
        "    n = len(labels)\n",
        "    return (len(left)/n)*gini(left) + (len(right)/n)*gini(right)\n",
        "\n",
        "def find_best_split(X, y):\n",
        "    best_gain, best_feat, best_t = 0.0, None, None\n",
        "    parent = gini(y)\n",
        "    for feat in range(X.shape[1]):\n",
        "        vals = np.unique(X[:,feat])\n",
        "        thresholds = (vals[:-1] + vals[1:]) / 2.0\n",
        "        for t in thresholds:\n",
        "            wg = weighted_gini(X[:,feat], y, t)\n",
        "            if wg is None: continue\n",
        "            gain = parent - wg\n",
        "            if gain > best_gain:\n",
        "                best_gain, best_feat, best_t = gain, feat, t\n",
        "    return best_feat, best_t\n",
        "\n",
        "def build_tree(X, y, depth=0, max_depth=15):\n",
        "    if len(np.unique(y)) == 1 or depth == max_depth:\n",
        "        vals, cnts = np.unique(y, return_counts=True)\n",
        "        return {'leaf': True, 'pred': vals[np.argmax(cnts)]}\n",
        "    feat, thresh = find_best_split(X, y)\n",
        "    if feat is None:\n",
        "        vals, cnts = np.unique(y, return_counts=True)\n",
        "        return {'leaf': True, 'pred': vals[np.argmax(cnts)]}\n",
        "    mask = X[:, feat] <= thresh\n",
        "    left  = build_tree(X[mask],  y[mask],  depth+1, max_depth)\n",
        "    right = build_tree(X[~mask], y[~mask], depth+1, max_depth)\n",
        "    return {'leaf': False, 'feat': feat, 'thresh': thresh, 'left': left, 'right': right}\n",
        "\n",
        "def predict(tree, x):\n",
        "    if tree['leaf']:\n",
        "        return tree['pred']\n",
        "    if x[tree['feat']] <= tree['thresh']:\n",
        "        return predict(tree['left'], x)\n",
        "    else:\n",
        "        return predict(tree['right'], x)\n",
        "\n",
        "# --- 3. k=16 고정, 16-fold 교차검증 ---\n",
        "k = 16\n",
        "skf = StratifiedKFold(n_splits=k, shuffle=True, random_state=42)\n",
        "accs, f1s = [], []\n",
        "\n",
        "print(f\"--- {k}-Fold Cross-Validation (Decision Tree) ---\")\n",
        "for fold, (train_idx, val_idx) in enumerate(skf.split(X_all, y_all), start=1):\n",
        "    X_tr, y_tr = X_all[train_idx], y_all[train_idx]\n",
        "    X_val, y_val = X_all[val_idx], y_all[val_idx]\n",
        "\n",
        "    # 트리 학습\n",
        "    tree = build_tree(X_tr, y_tr, max_depth=15)\n",
        "\n",
        "    # 예측 및 평가\n",
        "    preds = np.array([predict(tree, x) for x in X_val])\n",
        "    acc = accuracy_score(y_val, preds)\n",
        "    f1  = f1_score(y_val, preds)\n",
        "\n",
        "    accs.append(acc)\n",
        "    f1s.append(f1)\n",
        "    print(f\"Fold {fold:2d} — ACC: {acc:.4f}, F1: {f1:.4f}\")\n",
        "\n",
        "# 요약\n",
        "print(\"\\n=== Cross-Validation Results (k=16) ===\")\n",
        "print(f\"ACC: {np.mean(accs):.4f} ± {np.std(accs):.4f}\")\n",
        "print(f\"F1 : {np.mean(f1s ):.4f} ± {np.std(f1s ):.4f}\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 649
        },
        "id": "H8TnNtQRxGsc",
        "outputId": "aba01f5e-6377-4e76-8586-48aa35c4609b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "--- 16-Fold Cross-Validation (Decision Tree) ---\n",
            "Fold  1 — ACC: 0.8036, F1: 0.7442\n",
            "Fold  2 — ACC: 0.8036, F1: 0.7442\n",
            "Fold  3 — ACC: 0.7143, F1: 0.5789\n",
            "Fold  4 — ACC: 0.7500, F1: 0.6818\n",
            "Fold  5 — ACC: 0.7857, F1: 0.6842\n",
            "Fold  6 — ACC: 0.7500, F1: 0.6667\n",
            "Fold  7 — ACC: 0.7321, F1: 0.5946\n",
            "Fold  8 — ACC: 0.8036, F1: 0.7179\n",
            "Fold  9 — ACC: 0.8214, F1: 0.7727\n",
            "Fold 10 — ACC: 0.8036, F1: 0.6857\n",
            "Fold 11 — ACC: 0.8036, F1: 0.7317\n",
            "Fold 12 — ACC: 0.8182, F1: 0.7500\n",
            "Fold 13 — ACC: 0.8182, F1: 0.7619\n",
            "Fold 14 — ACC: 0.8364, F1: 0.8000\n"
          ]
        },
        {
          "output_type": "error",
          "ename": "KeyboardInterrupt",
          "evalue": "",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-57-8489fc6b1039>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     70\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     71\u001b[0m     \u001b[0;31m# 트리 학습\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 72\u001b[0;31m     \u001b[0mtree\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbuild_tree\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_tr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_tr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax_depth\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m15\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     73\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     74\u001b[0m     \u001b[0;31m# 예측 및 평가\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-57-8489fc6b1039>\u001b[0m in \u001b[0;36mbuild_tree\u001b[0;34m(X, y, depth, max_depth)\u001b[0m\n\u001b[1;32m     47\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m'leaf'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'pred'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mvals\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0margmax\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcnts\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     48\u001b[0m     \u001b[0mmask\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfeat\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m<=\u001b[0m \u001b[0mthresh\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 49\u001b[0;31m     \u001b[0mleft\u001b[0m  \u001b[0;34m=\u001b[0m \u001b[0mbuild_tree\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m  \u001b[0my\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m  \u001b[0mdepth\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax_depth\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     50\u001b[0m     \u001b[0mright\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbuild_tree\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m~\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m~\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdepth\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax_depth\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     51\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m'leaf'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'feat'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mfeat\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'thresh'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mthresh\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'left'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mleft\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'right'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mright\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-57-8489fc6b1039>\u001b[0m in \u001b[0;36mbuild_tree\u001b[0;34m(X, y, depth, max_depth)\u001b[0m\n\u001b[1;32m     47\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m'leaf'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'pred'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mvals\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0margmax\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcnts\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     48\u001b[0m     \u001b[0mmask\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfeat\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m<=\u001b[0m \u001b[0mthresh\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 49\u001b[0;31m     \u001b[0mleft\u001b[0m  \u001b[0;34m=\u001b[0m \u001b[0mbuild_tree\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m  \u001b[0my\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m  \u001b[0mdepth\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax_depth\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     50\u001b[0m     \u001b[0mright\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbuild_tree\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m~\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m~\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdepth\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax_depth\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     51\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m'leaf'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'feat'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mfeat\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'thresh'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mthresh\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'left'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mleft\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'right'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mright\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-57-8489fc6b1039>\u001b[0m in \u001b[0;36mbuild_tree\u001b[0;34m(X, y, depth, max_depth)\u001b[0m\n\u001b[1;32m     47\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m'leaf'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'pred'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mvals\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0margmax\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcnts\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     48\u001b[0m     \u001b[0mmask\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfeat\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m<=\u001b[0m \u001b[0mthresh\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 49\u001b[0;31m     \u001b[0mleft\u001b[0m  \u001b[0;34m=\u001b[0m \u001b[0mbuild_tree\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m  \u001b[0my\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m  \u001b[0mdepth\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax_depth\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     50\u001b[0m     \u001b[0mright\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbuild_tree\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m~\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m~\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdepth\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax_depth\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     51\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m'leaf'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'feat'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mfeat\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'thresh'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mthresh\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'left'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mleft\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'right'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mright\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-57-8489fc6b1039>\u001b[0m in \u001b[0;36mbuild_tree\u001b[0;34m(X, y, depth, max_depth)\u001b[0m\n\u001b[1;32m     42\u001b[0m         \u001b[0mvals\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcnts\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munique\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreturn_counts\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     43\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m'leaf'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'pred'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mvals\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0margmax\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcnts\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 44\u001b[0;31m     \u001b[0mfeat\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mthresh\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfind_best_split\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     45\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mfeat\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     46\u001b[0m         \u001b[0mvals\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcnts\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munique\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreturn_counts\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-57-8489fc6b1039>\u001b[0m in \u001b[0;36mfind_best_split\u001b[0;34m(X, y)\u001b[0m\n\u001b[1;32m     31\u001b[0m         \u001b[0mthresholds\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mvals\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mvals\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m/\u001b[0m \u001b[0;36m2.0\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     32\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mt\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mthresholds\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 33\u001b[0;31m             \u001b[0mwg\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mweighted_gini\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mfeat\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mt\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     34\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mwg\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;32mcontinue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     35\u001b[0m             \u001b[0mgain\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mparent\u001b[0m \u001b[0;34m-\u001b[0m \u001b[0mwg\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-57-8489fc6b1039>\u001b[0m in \u001b[0;36mweighted_gini\u001b[0;34m(col, labels, t)\u001b[0m\n\u001b[1;32m     22\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     23\u001b[0m     \u001b[0mn\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 24\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mleft\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m/\u001b[0m\u001b[0mn\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mgini\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mleft\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mright\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m/\u001b[0m\u001b[0mn\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mgini\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mright\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     25\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     26\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mfind_best_split\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-57-8489fc6b1039>\u001b[0m in \u001b[0;36mgini\u001b[0;34m(labels)\u001b[0m\n\u001b[1;32m     12\u001b[0m \u001b[0;31m# --- 2. Gini 기반 수작업 Decision Tree 함수들 ---\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     13\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mgini\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 14\u001b[0;31m     \u001b[0mclasses\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcounts\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munique\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreturn_counts\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     15\u001b[0m     \u001b[0mp\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcounts\u001b[0m \u001b[0;34m/\u001b[0m \u001b[0mcounts\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     16\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0;36m1.0\u001b[0m \u001b[0;34m-\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mp\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/numpy/lib/arraysetops.py\u001b[0m in \u001b[0;36munique\u001b[0;34m(ar, return_index, return_inverse, return_counts, axis, equal_nan)\u001b[0m\n\u001b[1;32m    272\u001b[0m     \u001b[0mar\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0masanyarray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mar\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    273\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0maxis\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 274\u001b[0;31m         ret = _unique1d(ar, return_index, return_inverse, return_counts, \n\u001b[0m\u001b[1;32m    275\u001b[0m                         equal_nan=equal_nan)\n\u001b[1;32m    276\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0m_unpack_tuple\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mret\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/numpy/lib/arraysetops.py\u001b[0m in \u001b[0;36m_unique1d\u001b[0;34m(ar, return_index, return_inverse, return_counts, equal_nan)\u001b[0m\n\u001b[1;32m    361\u001b[0m         \u001b[0mret\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0minv_idx\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    362\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mreturn_counts\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 363\u001b[0;31m         \u001b[0midx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mconcatenate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnonzero\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msize\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    364\u001b[0m         \u001b[0mret\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdiff\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0midx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    365\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mret\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Knn - 교차검증\n"
      ],
      "metadata": {
        "id": "1l0sP6bHy_5c"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn.model_selection import StratifiedKFold\n",
        "from sklearn.metrics       import accuracy_score, f1_score\n",
        "\n",
        "# --- 1. 데이터 로드 & 수동 스케일링 ---\n",
        "train_df = pd.read_csv('process1_result.csv')\n",
        "test_df  = pd.read_csv('process2_result.csv')\n",
        "features      = ['Sex','SibSp','Parch','Embarked','TicketNumeric']\n",
        "X = train_df[features].values\n",
        "y = train_df['Survived'].values\n",
        "\n",
        "# train 기준으로 평균·표준편차 계산\n",
        "means = X.mean(axis=0)\n",
        "stds  = X.std(axis=0)\n",
        "stds[stds==0] = 1.0\n",
        "X_scaled     = (X      - means) / stds\n",
        "\n",
        "# --- 2. 거리 행렬 미리 계산 (Train vs Train) ---\n",
        "def euclid_dist_matrix(A, B):\n",
        "    return np.sqrt(((A[:,None,:] - B[None,:,:])**2).sum(axis=2))\n",
        "\n",
        "D_full = euclid_dist_matrix(X_scaled, X_scaled)\n",
        "\n",
        "# --- 3. KNN 배치 예측 함수 (k=20 고정) ---\n",
        "k = 20\n",
        "def knn_predict_batch(D, y_train, k):\n",
        "    # D: (n_samples, n_train) 거리 행렬\n",
        "    idx = np.argpartition(D, kth=k, axis=1)[:, :k]\n",
        "    # 각 행마다 다수결로 예측\n",
        "    return np.array([ np.bincount(y_train[row]).argmax() for row in idx ])\n",
        "\n",
        "# --- 4. n_splits = 2부터 100까지 교차검증 반복 ---\n",
        "results = {}\n",
        "for n_splits in range(2, 101):\n",
        "    skf = StratifiedKFold(n_splits=n_splits, shuffle=True, random_state=42)\n",
        "    accs, f1s = [], []\n",
        "\n",
        "    for train_idx, val_idx in skf.split(X_scaled, y):\n",
        "        # Fold별 거리 서브셋\n",
        "        D_va_tr = D_full[val_idx][:, train_idx]\n",
        "        y_tr    = y[train_idx]\n",
        "\n",
        "        # 예측 & 평가\n",
        "        preds = knn_predict_batch(D_va_tr, y_tr, k)\n",
        "        accs.append( accuracy_score(y[val_idx], preds) )\n",
        "        f1s .append( f1_score   (y[val_idx], preds) )\n",
        "\n",
        "    results[n_splits] = {\n",
        "        'acc_mean': np.mean(accs),\n",
        "        'acc_std':  np.std(accs),\n",
        "        'f1_mean':  np.mean(f1s),\n",
        "        'f1_std':   np.std(f1s)\n",
        "    }\n",
        "    print(f\"n_splits={n_splits:3d} → \"\n",
        "          f\"ACC={results[n_splits]['acc_mean']:.4f}±{results[n_splits]['acc_std']:.4f}, \"\n",
        "          f\"F1 ={results[n_splits]['f1_mean']:.4f}±{results[n_splits]['f1_std']:.4f}\")\n",
        "\n",
        "# --- 5. 최적 n_splits 선택 (ACC mean 기준) ---\n",
        "best_splits = max(results, key=lambda s: results[s]['acc_mean'])\n",
        "print(f\"\\n▶ Optimal number of folds: {best_splits} (ACC mean = {results[best_splits]['acc_mean']:.4f})\")\n",
        "\n",
        "# --- 6. 최종 모델(k=20, best_splits)로 테스트 예측 & 저장 ---\n",
        "# 테스트 데이터 거리 계산\n",
        "X_test  = test_df[features].values\n",
        "X_test_scaled = (X_test - means) / stds\n",
        "D_test = euclid_dist_matrix(X_test_scaled, X_scaled)\n",
        "\n",
        "final_preds = knn_predict_batch(D_test, y, k)\n",
        "submission = pd.DataFrame({\n",
        "    'PassengerId': test_df['PassengerId'].values,\n",
        "    'Survived':    final_preds\n",
        "})\n",
        "submission.to_csv('knn_manual_k20_cv_to100.csv', index=False)\n",
        "print(\"Saved: knn_manual_k20_cv_to100.csv\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "165E-k6IzBhK",
        "outputId": "489f4e44-9b7e-4290-f19d-69e9c33c19d4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "n_splits=  2 → ACC=0.7901±0.0144, F1 =0.7089±0.0314\n",
            "n_splits=  3 → ACC=0.7879±0.0192, F1 =0.6978±0.0405\n",
            "n_splits=  4 → ACC=0.7958±0.0254, F1 =0.7098±0.0552\n",
            "n_splits=  5 → ACC=0.7969±0.0186, F1 =0.7129±0.0351\n",
            "n_splits=  6 → ACC=0.7902±0.0184, F1 =0.7022±0.0372\n",
            "n_splits=  7 → ACC=0.7868±0.0275, F1 =0.6952±0.0535\n",
            "n_splits=  8 → ACC=0.7913±0.0261, F1 =0.7026±0.0536\n",
            "n_splits=  9 → ACC=0.7879±0.0326, F1 =0.6980±0.0552\n",
            "n_splits= 10 → ACC=0.7879±0.0279, F1 =0.6947±0.0592\n",
            "n_splits= 11 → ACC=0.7879±0.0348, F1 =0.6961±0.0592\n",
            "n_splits= 12 → ACC=0.7946±0.0305, F1 =0.7020±0.0632\n",
            "n_splits= 13 → ACC=0.7925±0.0284, F1 =0.7019±0.0491\n",
            "n_splits= 14 → ACC=0.7936±0.0499, F1 =0.7044±0.0727\n",
            "n_splits= 15 → ACC=0.7925±0.0429, F1 =0.7035±0.0655\n",
            "n_splits= 16 → ACC=0.7970±0.0471, F1 =0.7048±0.0852\n",
            "n_splits= 17 → ACC=0.7925±0.0486, F1 =0.6982±0.0862\n",
            "n_splits= 18 → ACC=0.7926±0.0397, F1 =0.6984±0.0713\n",
            "n_splits= 19 → ACC=0.7947±0.0447, F1 =0.7009±0.0792\n",
            "n_splits= 20 → ACC=0.7925±0.0513, F1 =0.6990±0.0924\n",
            "n_splits= 21 → ACC=0.7959±0.0582, F1 =0.7024±0.0947\n",
            "n_splits= 22 → ACC=0.7948±0.0596, F1 =0.7011±0.1003\n",
            "n_splits= 23 → ACC=0.7937±0.0570, F1 =0.7004±0.0909\n",
            "n_splits= 24 → ACC=0.7912±0.0458, F1 =0.6931±0.0928\n",
            "n_splits= 25 → ACC=0.7937±0.0529, F1 =0.6981±0.1005\n",
            "n_splits= 26 → ACC=0.7946±0.0568, F1 =0.6985±0.1017\n",
            "n_splits= 27 → ACC=0.7957±0.0631, F1 =0.6992±0.1099\n",
            "n_splits= 28 → ACC=0.7971±0.0646, F1 =0.7038±0.1069\n",
            "n_splits= 29 → ACC=0.7915±0.0553, F1 =0.6951±0.0963\n",
            "n_splits= 30 → ACC=0.7970±0.0666, F1 =0.7046±0.1069\n",
            "n_splits= 31 → ACC=0.7960±0.0714, F1 =0.7001±0.1213\n",
            "n_splits= 32 → ACC=0.7993±0.0709, F1 =0.7053±0.1114\n",
            "n_splits= 33 → ACC=0.7980±0.0683, F1 =0.6989±0.1292\n",
            "n_splits= 34 → ACC=0.7980±0.0637, F1 =0.7020±0.1085\n",
            "n_splits= 35 → ACC=0.7948±0.0647, F1 =0.6961±0.1193\n",
            "n_splits= 36 → ACC=0.7961±0.0809, F1 =0.6991±0.1333\n",
            "n_splits= 37 → ACC=0.7979±0.0653, F1 =0.6962±0.1251\n",
            "n_splits= 38 → ACC=0.7948±0.0684, F1 =0.6951±0.1252\n",
            "n_splits= 39 → ACC=0.7971±0.0703, F1 =0.7036±0.1150\n",
            "n_splits= 40 → ACC=0.7969±0.0722, F1 =0.6982±0.1282\n",
            "n_splits= 41 → ACC=0.7984±0.0834, F1 =0.7030±0.1354\n",
            "n_splits= 42 → ACC=0.7968±0.0832, F1 =0.6990±0.1425\n",
            "n_splits= 43 → ACC=0.8017±0.0711, F1 =0.7051±0.1204\n",
            "n_splits= 44 → ACC=0.7991±0.0774, F1 =0.6896±0.1723\n",
            "n_splits= 45 → ACC=0.8016±0.0843, F1 =0.7061±0.1381\n",
            "n_splits= 46 → ACC=0.8019±0.0861, F1 =0.7088±0.1290\n",
            "n_splits= 47 → ACC=0.8024±0.0838, F1 =0.7054±0.1425\n",
            "n_splits= 48 → ACC=0.8029±0.0892, F1 =0.7070±0.1460\n",
            "n_splits= 49 → ACC=0.8015±0.0909, F1 =0.7037±0.1500\n",
            "n_splits= 50 → ACC=0.8016±0.0822, F1 =0.7010±0.1492\n",
            "n_splits= 51 → ACC=0.8008±0.0765, F1 =0.6974±0.1447\n",
            "n_splits= 52 → ACC=0.8002±0.0851, F1 =0.6930±0.1712\n",
            "n_splits= 53 → ACC=0.7993±0.1034, F1 =0.6975±0.1804\n",
            "n_splits= 54 → ACC=0.7998±0.1017, F1 =0.7000±0.1673\n",
            "n_splits= 55 → ACC=0.8003±0.0957, F1 =0.6962±0.1664\n",
            "n_splits= 56 → ACC=0.8025±0.0925, F1 =0.6970±0.1771\n",
            "n_splits= 57 → ACC=0.8018±0.0940, F1 =0.6966±0.1780\n",
            "n_splits= 58 → ACC=0.8017±0.0948, F1 =0.6942±0.1823\n",
            "n_splits= 59 → ACC=0.8011±0.1063, F1 =0.6993±0.1823\n",
            "n_splits= 60 → ACC=0.8017±0.0961, F1 =0.7028±0.1513\n",
            "n_splits= 61 → ACC=0.8020±0.0992, F1 =0.7007±0.1735\n",
            "n_splits= 62 → ACC=0.8009±0.0957, F1 =0.6966±0.1698\n",
            "n_splits= 63 → ACC=0.8048±0.1040, F1 =0.6957±0.1976\n",
            "n_splits= 64 → ACC=0.8025±0.1005, F1 =0.6981±0.1701\n",
            "n_splits= 65 → ACC=0.8042±0.0975, F1 =0.7036±0.1658\n",
            "n_splits= 66 → ACC=0.8044±0.0968, F1 =0.7065±0.1516\n",
            "n_splits= 67 → ACC=0.8040±0.0926, F1 =0.7021±0.1558\n"
          ]
        },
        {
          "output_type": "error",
          "ename": "KeyboardInterrupt",
          "evalue": "",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-58-2d38c2f7b1d7>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     45\u001b[0m         \u001b[0mpreds\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mknn_predict_batch\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mD_va_tr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_tr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mk\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     46\u001b[0m         \u001b[0maccs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m \u001b[0maccuracy_score\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mval_idx\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpreds\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 47\u001b[0;31m         \u001b[0mf1s\u001b[0m \u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m \u001b[0mf1_score\u001b[0m   \u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mval_idx\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpreds\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     48\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     49\u001b[0m     results[n_splits] = {\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/sklearn/utils/_param_validation.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    214\u001b[0m                     )\n\u001b[1;32m    215\u001b[0m                 ):\n\u001b[0;32m--> 216\u001b[0;31m                     \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    217\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mInvalidParameterError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    218\u001b[0m                 \u001b[0;31m# When the function is just a wrapper around an estimator, we allow\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py\u001b[0m in \u001b[0;36mf1_score\u001b[0;34m(y_true, y_pred, labels, pos_label, average, sample_weight, zero_division)\u001b[0m\n\u001b[1;32m   1322\u001b[0m     \u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0.66666667\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m1.\u001b[0m        \u001b[0;34m,\u001b[0m \u001b[0;36m0.66666667\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1323\u001b[0m     \"\"\"\n\u001b[0;32m-> 1324\u001b[0;31m     return fbeta_score(\n\u001b[0m\u001b[1;32m   1325\u001b[0m         \u001b[0my_true\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1326\u001b[0m         \u001b[0my_pred\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/sklearn/utils/_param_validation.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    187\u001b[0m             \u001b[0mglobal_skip_validation\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mget_config\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"skip_parameter_validation\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    188\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mglobal_skip_validation\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 189\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    190\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    191\u001b[0m             \u001b[0mfunc_sig\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msignature\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py\u001b[0m in \u001b[0;36mfbeta_score\u001b[0;34m(y_true, y_pred, beta, labels, pos_label, average, sample_weight, zero_division)\u001b[0m\n\u001b[1;32m   1515\u001b[0m     \"\"\"\n\u001b[1;32m   1516\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1517\u001b[0;31m     _, _, f, _ = precision_recall_fscore_support(\n\u001b[0m\u001b[1;32m   1518\u001b[0m         \u001b[0my_true\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1519\u001b[0m         \u001b[0my_pred\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/sklearn/utils/_param_validation.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    187\u001b[0m             \u001b[0mglobal_skip_validation\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mget_config\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"skip_parameter_validation\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    188\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mglobal_skip_validation\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 189\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    190\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    191\u001b[0m             \u001b[0mfunc_sig\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msignature\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py\u001b[0m in \u001b[0;36mprecision_recall_fscore_support\u001b[0;34m(y_true, y_pred, beta, labels, pos_label, average, warn_for, sample_weight, zero_division)\u001b[0m\n\u001b[1;32m   1857\u001b[0m         \u001b[0mtp_sum\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpred_sum\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"precision\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"predicted\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maverage\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mwarn_for\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mzero_division\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1858\u001b[0m     )\n\u001b[0;32m-> 1859\u001b[0;31m     recall = _prf_divide(\n\u001b[0m\u001b[1;32m   1860\u001b[0m         \u001b[0mtp_sum\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrue_sum\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"recall\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"true\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maverage\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mwarn_for\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mzero_division\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1861\u001b[0m     )\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/sklearn/metrics/_classification.py\u001b[0m in \u001b[0;36m_prf_divide\u001b[0;34m(numerator, denominator, metric, modifier, average, warn_for, zero_division)\u001b[0m\n\u001b[1;32m   1542\u001b[0m     \"\"\"\n\u001b[1;32m   1543\u001b[0m     \u001b[0mxp\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0m_\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mget_namespace\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnumerator\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdenominator\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1544\u001b[0;31m     \u001b[0mdtype_float\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_find_matching_floating_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnumerator\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdenominator\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mxp\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mxp\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1545\u001b[0m     \u001b[0mmask\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdenominator\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1546\u001b[0m     \u001b[0mdenominator\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mxp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0masarray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdenominator\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype_float\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/sklearn/utils/_array_api.py\u001b[0m in \u001b[0;36m_find_matching_floating_dtype\u001b[0;34m(xp, *arrays)\u001b[0m\n\u001b[1;32m    690\u001b[0m     \"\"\"\n\u001b[1;32m    691\u001b[0m     \u001b[0mdtyped_arrays\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0ma\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0ma\u001b[0m \u001b[0;32min\u001b[0m \u001b[0marrays\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0mhasattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"dtype\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 692\u001b[0;31m     floating_dtypes = [\n\u001b[0m\u001b[1;32m    693\u001b[0m         \u001b[0ma\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0ma\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mdtyped_arrays\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0mxp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0misdtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"real floating\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    694\u001b[0m     ]\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/sklearn/utils/_array_api.py\u001b[0m in \u001b[0;36m<listcomp>\u001b[0;34m(.0)\u001b[0m\n\u001b[1;32m    691\u001b[0m     \u001b[0mdtyped_arrays\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0ma\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0ma\u001b[0m \u001b[0;32min\u001b[0m \u001b[0marrays\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0mhasattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"dtype\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    692\u001b[0m     floating_dtypes = [\n\u001b[0;32m--> 693\u001b[0;31m         \u001b[0ma\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0ma\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mdtyped_arrays\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0mxp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0misdtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"real floating\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    694\u001b[0m     ]\n\u001b[1;32m    695\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mfloating_dtypes\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/sklearn/utils/_array_api.py\u001b[0m in \u001b[0;36misdtype\u001b[0;34m(self, dtype, kind)\u001b[0m\n\u001b[1;32m    441\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0misdtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkind\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    442\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 443\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0misdtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkind\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mxp\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    444\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    445\u001b[0m             \u001b[0;31m# In older versions of numpy, data types that arise from outside\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/sklearn/utils/_array_api.py\u001b[0m in \u001b[0;36misdtype\u001b[0;34m(dtype, kind, xp)\u001b[0m\n\u001b[1;32m    232\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0many\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_isdtype_single\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mk\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mxp\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mxp\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mk\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mkind\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    233\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 234\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0m_isdtype_single\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkind\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mxp\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mxp\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    235\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    236\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/sklearn/utils/_array_api.py\u001b[0m in \u001b[0;36m_isdtype_single\u001b[0;34m(dtype, kind, xp)\u001b[0m\n\u001b[1;32m    235\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    236\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 237\u001b[0;31m \u001b[0;32mdef\u001b[0m \u001b[0m_isdtype_single\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkind\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mxp\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    238\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkind\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    239\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mkind\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"bool\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import re\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# --- 1. Raw KNN CV results as provided ---\n",
        "raw = \"\"\"\n",
        "n_splits=  2 → ACC=0.7890±0.0132, F1 =0.7078±0.0303\n",
        "n_splits=  3 → ACC=0.7879±0.0192, F1 =0.6978±0.0405\n",
        "n_splits=  4 → ACC=0.7935±0.0237, F1 =0.7067±0.0532\n",
        "n_splits=  5 → ACC=0.7969±0.0186, F1 =0.7129±0.0351\n",
        "n_splits=  6 → ACC=0.7890±0.0149, F1 =0.6992±0.0337\n",
        "n_splits=  7 → ACC=0.7879±0.0265, F1 =0.6963±0.0530\n",
        "n_splits=  8 → ACC=0.7890±0.0273, F1 =0.6996±0.0537\n",
        "n_splits=  9 → ACC=0.7879±0.0326, F1 =0.6980±0.0552\n",
        "n_splits= 10 → ACC=0.7867±0.0295, F1 =0.6936±0.0603\n",
        "n_splits= 11 → ACC=0.7879±0.0348, F1 =0.6961±0.0592\n",
        "n_splits= 12 → ACC=0.7924±0.0270, F1 =0.7005±0.0558\n",
        "n_splits= 13 → ACC=0.7925±0.0278, F1 =0.7005±0.0515\n",
        "n_splits= 14 → ACC=0.7913±0.0472, F1 =0.7002±0.0689\n",
        "n_splits= 15 → ACC=0.7925±0.0389, F1 =0.7026±0.0605\n",
        "n_splits= 16 → ACC=0.7959±0.0497, F1 =0.7036±0.0883\n",
        "n_splits= 17 → ACC=0.7913±0.0471, F1 =0.6963±0.0840\n",
        "n_splits= 18 → ACC=0.7948±0.0360, F1 =0.7033±0.0629\n",
        "n_splits= 19 → ACC=0.7946±0.0437, F1 =0.7014±0.0757\n",
        "n_splits= 20 → ACC=0.7914±0.0528, F1 =0.6980±0.0932\n",
        "n_splits= 21 → ACC=0.7948±0.0558, F1 =0.7007±0.0912\n",
        "n_splits= 22 → ACC=0.7948±0.0568, F1 =0.7022±0.0933\n",
        "n_splits= 23 → ACC=0.7926±0.0557, F1 =0.6986±0.0888\n",
        "n_splits= 24 → ACC=0.7901±0.0443, F1 =0.6913±0.0907\n",
        "n_splits= 25 → ACC=0.7937±0.0493, F1 =0.6987±0.0931\n",
        "n_splits= 26 → ACC=0.7946±0.0556, F1 =0.6989±0.0989\n",
        "n_splits= 27 → ACC=0.7969±0.0638, F1 =0.7012±0.1109\n",
        "n_splits= 28 → ACC=0.7948±0.0652, F1 =0.6985±0.1115\n",
        "n_splits= 29 → ACC=0.7915±0.0553, F1 =0.6951±0.0963\n",
        "n_splits= 30 → ACC=0.7959±0.0674, F1 =0.7020±0.1094\n",
        "n_splits= 31 → ACC=0.7949±0.0706, F1 =0.6981±0.1201\n",
        "n_splits= 32 → ACC=0.7982±0.0720, F1 =0.7025±0.1153\n",
        "n_splits= 33 → ACC=0.7980±0.0689, F1 =0.6982±0.1299\n",
        "n_splits= 34 → ACC=0.7968±0.0659, F1 =0.6984±0.1188\n",
        "n_splits= 35 → ACC=0.7971±0.0663, F1 =0.7000±0.1217\n",
        "n_splits= 36 → ACC=0.7972±0.0811, F1 =0.7014±0.1335\n",
        "n_splits= 37 → ACC=0.7979±0.0639, F1 =0.6970±0.1219\n",
        "n_splits= 38 → ACC=0.7948±0.0684, F1 =0.6951±0.1252\n",
        "n_splits= 39 → ACC=0.7994±0.0711, F1 =0.7080±0.1154\n",
        "n_splits= 40 → ACC=0.7958±0.0722, F1 =0.6961±0.1280\n",
        "n_splits= 41 → ACC=0.7973±0.0834, F1 =0.7006±0.1361\n",
        "n_splits= 42 → ACC=0.7968±0.0832, F1 =0.6990±0.1425\n",
        "n_splits= 43 → ACC=0.8006±0.0713, F1 =0.7023±0.1226\n",
        "n_splits= 44 → ACC=0.8002±0.0771, F1 =0.6923±0.1709\n",
        "n_splits= 45 → ACC=0.8016±0.0869, F1 =0.7060±0.1426\n",
        "n_splits= 46 → ACC=0.7986±0.0913, F1 =0.7057±0.1302\n",
        "n_splits= 47 → ACC=0.8013±0.0857, F1 =0.7016±0.1525\n",
        "n_splits= 48 → ACC=0.8007±0.0909, F1 =0.7012±0.1554\n",
        "n_splits= 49 → ACC=0.8004±0.0919, F1 =0.7004±0.1575\n",
        "n_splits= 50 → ACC=0.8027±0.0807, F1 =0.7039±0.1447\n",
        "n_splits= 51 → ACC=0.8019±0.0750, F1 =0.7002±0.1402\n",
        "n_splits= 52 → ACC=0.7991±0.0844, F1 =0.6905±0.1705\n",
        "n_splits= 53 → ACC=0.8004±0.1039, F1 =0.7000±0.1809\n",
        "n_splits= 54 → ACC=0.8010±0.1021, F1 =0.7025±0.1678\n",
        "n_splits= 55 → ACC=0.8003±0.0957, F1 =0.6962±0.1664\n",
        "n_splits= 56 → ACC=0.8036±0.0915, F1 =0.6998±0.1743\n",
        "n_splits= 57 → ACC=0.8041±0.0926, F1 =0.7016±0.1748\n",
        "n_splits= 58 → ACC=0.8028±0.0944, F1 =0.6964±0.1819\n",
        "n_splits= 59 → ACC=0.8023±0.1073, F1 =0.7005±0.1852\n",
        "n_splits= 60 → ACC=0.8051±0.0955, F1 =0.7099±0.1488\n",
        "n_splits= 61 → ACC=0.8032±0.0994, F1 =0.7029±0.1739\n",
        "n_splits= 62 → ACC=0.8021±0.0960, F1 =0.6995±0.1692\n",
        "n_splits= 63 → ACC=0.8026±0.1044, F1 =0.6914±0.1983\n",
        "n_splits= 64 → ACC=0.8048±0.1017, F1 =0.7019±0.1720\n",
        "n_splits= 65 → ACC=0.8041±0.0967, F1 =0.7035±0.1647\n",
        "n_splits= 66 → ACC=0.8033±0.0958, F1 =0.7044±0.1500\n",
        "n_splits= 67 → ACC=0.8029±0.0916, F1 =0.7000±0.1543\n",
        "n_splits= 68 → ACC=0.8022±0.0899, F1 =0.6952±0.1733\n",
        "n_splits= 69 → ACC=0.8026±0.1003, F1 =0.7042±0.1589\n",
        "n_splits= 70 → ACC=0.8019±0.0994, F1 =0.7009±0.1607\n",
        "n_splits= 71 → ACC=0.8021±0.0899, F1 =0.6998±0.1529\n",
        "n_splits= 72 → ACC=0.8007±0.0940, F1 =0.6957±0.1587\n",
        "n_splits= 73 → ACC=0.8002±0.1004, F1 =0.6878±0.1961\n",
        "n_splits= 74 → ACC=0.8023±0.1077, F1 =0.6987±0.1884\n",
        "n_splits= 75 → ACC=0.8014±0.1079, F1 =0.6983±0.1784\n",
        "n_splits= 76 → ACC=0.8021±0.1185, F1 =0.7010±0.1929\n",
        "n_splits= 77 → ACC=0.8024±0.1021, F1 =0.7046±0.1623\n",
        "n_splits= 78 → ACC=0.8035±0.1107, F1 =0.7041±0.1837\n",
        "n_splits= 79 → ACC=0.8031±0.1157, F1 =0.7041±0.1790\n",
        "n_splits= 80 → ACC=0.8003±0.1119, F1 =0.6940±0.1867\n",
        "n_splits= 81 → ACC=0.8047±0.1070, F1 =0.6981±0.1905\n",
        "n_splits= 82 → ACC=0.8039±0.1068, F1 =0.6986±0.1869\n",
        "n_splits= 83 → ACC=0.8043±0.1083, F1 =0.7015±0.1849\n",
        "n_splits= 84 → ACC=0.8042±0.1047, F1 =0.7000±0.1835\n",
        "n_splits= 85 → ACC=0.8044±0.1067, F1 =0.7017±0.1823\n",
        "n_splits= 86 → ACC=0.8041±0.1081, F1 =0.7014±0.1865\n",
        "n_splits= 87 → ACC=0.8045±0.1147, F1 =0.6967±0.2079\n",
        "n_splits= 88 → ACC=0.8043±0.1159, F1 =0.6983±0.2026\n",
        "n_splits= 89 → ACC=0.8046±0.1151, F1 =0.6948±0.2080\n",
        "n_splits= 90 → ACC=0.8038±0.1141, F1 =0.6968±0.2054\n",
        "n_splits= 91 → ACC=0.8031±0.1119, F1 =0.6912±0.2062\n",
        "n_splits= 92 → ACC=0.8024±0.1207, F1 =0.7011±0.1938\n",
        "n_splits= 93 → ACC=0.8016±0.1283, F1 =0.7011±0.2029\n",
        "n_splits= 94 → ACC=0.8015±0.1116, F1 =0.6964±0.1814\n",
        "n_splits= 95 → ACC=0.8049±0.1203, F1 =0.7000±0.1949\n",
        "n_splits= 96 → ACC=0.8044±0.1214, F1 =0.6964±0.1985\n",
        "n_splits= 97 → ACC=0.8039±0.1112, F1 =0.6860±0.2135\n",
        "n_splits= 98 → ACC=0.8034±0.1226, F1 =0.6882±0.2254\n",
        "n_splits= 99 → ACC=0.8047±0.1172, F1 =0.6864±0.2338\n",
        "n_splits=100 → ACC=0.8037±0.1142, F1 =0.6853±0.2309\n",
        "\"\"\"\n",
        "\n",
        "# --- 2. Parse k, acc_mean, acc_std ---\n",
        "pattern = r\"n_splits=\\s*(\\d+)\\s*→\\s*ACC=([0-9.]+)±([0-9.]+),\"\n",
        "ks, acc_means, acc_stds = [], [], []\n",
        "\n",
        "for line in raw.strip().splitlines():\n",
        "    m = re.search(pattern, line)\n",
        "    if m:\n",
        "        ks.append(int(m.group(1)))\n",
        "        acc_means.append(float(m.group(2)))\n",
        "        acc_stds.append(float(m.group(3)))\n",
        "\n",
        "ks = np.array(ks)\n",
        "acc_means = np.array(acc_means)\n",
        "acc_stds = np.array(acc_stds)\n",
        "\n",
        "# --- 3. Compute relative change rates (%) ---\n",
        "rel_delta_acc = np.diff(acc_means) / acc_means[:-1] * 100\n",
        "rel_delta_std = np.diff(acc_stds)  / acc_stds[:-1]  * 100\n",
        "k_mid = (ks[:-1] + ks[1:]) / 2\n",
        "\n",
        "fig, axes = plt.subplots(2, 1, figsize=(10, 8), sharex=True)\n",
        "\n",
        "axes[0].plot(k_mid, rel_delta_acc, marker='o', linestyle='-')\n",
        "axes[0].axhline(0, color='gray', linestyle='--')\n",
        "axes[0].set_ylabel('Relative Δ ACC (%)')\n",
        "axes[0].set_title('Relative Change Rate of Accuracy vs. n_splits')\n",
        "\n",
        "axes[1].plot(k_mid, rel_delta_std, marker='s', linestyle='-')\n",
        "axes[1].axhline(0, color='gray', linestyle='--')\n",
        "axes[1].set_xlabel('n_splits')\n",
        "axes[1].set_ylabel('Relative Δ ACC std (%)')\n",
        "axes[1].set_title('Relative Change Rate of ACC std vs. n_splits')\n",
        "\n",
        "# x축 눈금(2~100) 설정\n",
        "axes[1].set_xticks(ks)                     # 2부터 100까지 모든 n_splits를 눈금으로\n",
        "axes[1].set_xticklabels(ks, rotation=90, fontsize=6)  # 보기 좋게 90도 회전\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 807
        },
        "id": "R7vx_8aK0A6Q",
        "outputId": "a20543b5-527d-42ad-9c24-7e4d7f51d612"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import re\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# --- 1. Raw KNN CV results (as before) ---\n",
        "raw = \"\"\"\n",
        "n_splits=  2 → ACC=0.7890±0.0132, F1 =0.7078±0.0303\n",
        "n_splits=  3 → ACC=0.7879±0.0192, F1 =0.6978±0.0405\n",
        "n_splits=  4 → ACC=0.7935±0.0237, F1 =0.7067±0.0532\n",
        "n_splits=  5 → ACC=0.7969±0.0186, F1 =0.7129±0.0351\n",
        "n_splits=  6 → ACC=0.7890±0.0149, F1 =0.6992±0.0337\n",
        "n_splits=  7 → ACC=0.7879±0.0265, F1 =0.6963±0.0530\n",
        "n_splits=  8 → ACC=0.7890±0.0273, F1 =0.6996±0.0537\n",
        "n_splits=  9 → ACC=0.7879±0.0326, F1 =0.6980±0.0552\n",
        "n_splits= 10 → ACC=0.7867±0.0295, F1 =0.6936±0.0603\n",
        "n_splits= 11 → ACC=0.7879±0.0348, F1 =0.6961±0.0592\n",
        "n_splits= 12 → ACC=0.7924±0.0270, F1 =0.7005±0.0558\n",
        "n_splits= 13 → ACC=0.7925±0.0278, F1 =0.7005±0.0515\n",
        "n_splits= 14 → ACC=0.7913±0.0472, F1 =0.7002±0.0689\n",
        "n_splits= 15 → ACC=0.7925±0.0389, F1 =0.7026±0.0605\n",
        "n_splits= 16 → ACC=0.7959±0.0497, F1 =0.7036±0.0883\n",
        "n_splits= 17 → ACC=0.7913±0.0471, F1 =0.6963±0.0840\n",
        "n_splits= 18 → ACC=0.7948±0.0360, F1 =0.7033±0.0629\n",
        "n_splits= 19 → ACC=0.7946±0.0437, F1 =0.7014±0.0757\n",
        "n_splits= 20 → ACC=0.7914±0.0528, F1 =0.6980±0.0932\n",
        "n_splits= 21 → ACC=0.7948±0.0558, F1 =0.7007±0.0912\n",
        "n_splits= 22 → ACC=0.7948±0.0568, F1 =0.7022±0.0933\n",
        "n_splits= 23 → ACC=0.7926±0.0557, F1 =0.6986±0.0888\n",
        "n_splits= 24 → ACC=0.7901±0.0443, F1 =0.6913±0.0907\n",
        "n_splits= 25 → ACC=0.7937±0.0493, F1 =0.6987±0.0931\n",
        "n_splits= 26 → ACC=0.7946±0.0556, F1 =0.6989±0.0989\n",
        "n_splits= 27 → ACC=0.7969±0.0638, F1 =0.7012±0.1109\n",
        "n_splits= 28 → ACC=0.7948±0.0652, F1 =0.6985±0.1115\n",
        "n_splits= 29 → ACC=0.7915±0.0553, F1 =0.6951±0.0963\n",
        "n_splits= 30 → ACC=0.7959±0.0674, F1 =0.7020±0.1094\n",
        "n_splits= 31 → ACC=0.7949±0.0706, F1 =0.6981±0.1201\n",
        "n_splits= 32 → ACC=0.7982±0.0720, F1 =0.7025±0.1153\n",
        "n_splits= 33 → ACC=0.7980±0.0689, F1 =0.6982±0.1299\n",
        "n_splits= 34 → ACC=0.7968±0.0659, F1 =0.6984±0.1188\n",
        "n_splits= 35 → ACC=0.7971±0.0663, F1 =0.7000±0.1217\n",
        "n_splits= 36 → ACC=0.7972±0.0811, F1 =0.7014±0.1335\n",
        "n_splits= 37 → ACC=0.7979±0.0639, F1 =0.6970±0.1219\n",
        "n_splits= 38 → ACC=0.7948±0.0684, F1 =0.6951±0.1252\n",
        "n_splits= 39 → ACC=0.7994±0.0711, F1 =0.7080±0.1154\n",
        "n_splits= 40 → ACC=0.7958±0.0722, F1 =0.6961±0.1280\n",
        "n_splits= 41 → ACC=0.7973±0.0834, F1 =0.7006±0.1361\n",
        "n_splits= 42 → ACC=0.7968±0.0832, F1 =0.6990±0.1425\n",
        "n_splits= 43 → ACC=0.8006±0.0713, F1 =0.7023±0.1226\n",
        "n_splits= 44 → ACC=0.8002±0.0771, F1 =0.6923±0.1709\n",
        "n_splits= 45 → ACC=0.8016±0.0869, F1 =0.7060±0.1426\n",
        "\"\"\"\n",
        "\n",
        "# --- 2. Parse k, acc_mean, acc_std ---\n",
        "pattern = r\"n_splits=\\s*(\\d+)\\s*→\\s*ACC=([0-9.]+)±([0-9.]+),\"\n",
        "ks, acc_means, acc_stds = [], [], []\n",
        "for line in raw.strip().splitlines():\n",
        "    m = re.search(pattern, line)\n",
        "    if m:\n",
        "        ks.append(int(m.group(1)))\n",
        "        acc_means.append(float(m.group(2)))\n",
        "        acc_stds.append(float(m.group(3)))\n",
        "\n",
        "ks        = np.array(ks)\n",
        "acc_means = np.array(acc_means)\n",
        "acc_stds  = np.array(acc_stds)\n",
        "\n",
        "# --- 3. Calculate relative change rates ---\n",
        "rel_delta_acc = np.diff(acc_means) / acc_means[:-1] * 100\n",
        "rel_delta_std = np.diff(acc_stds)  / acc_stds[:-1]  * 100\n",
        "k_mid         = (ks[:-1] + ks[1:]) / 2\n",
        "\n",
        "# --- 4. Restrict to n_splits 35~45 ---\n",
        "mask_mid = (k_mid >= 35) & (k_mid <= 45)\n",
        "k_mid2         = k_mid[mask_mid]\n",
        "rel_delta_acc2 = rel_delta_acc[mask_mid]\n",
        "rel_delta_std2 = rel_delta_std[mask_mid]\n",
        "\n",
        "# --- 5. Plot 2D graphs for 35 ≤ n_splits ≤ 45 ---\n",
        "fig, (ax1, ax2) = plt.subplots(2, 1, figsize=(8, 6), sharex=True)\n",
        "\n",
        "ax1.plot(k_mid2, rel_delta_acc2, marker='o', linestyle='-')\n",
        "ax1.axhline(0, color='gray', linestyle='--')\n",
        "ax1.set_ylabel('Relative Δ ACC (%)')\n",
        "ax1.set_title('Relative Change Rate of Accuracy (n_splits=35–45)')\n",
        "\n",
        "ax2.plot(k_mid2, rel_delta_std2, marker='s', linestyle='-')\n",
        "ax2.axhline(0, color='gray', linestyle='--')\n",
        "ax2.set_xlabel('n_splits')\n",
        "ax2.set_ylabel('Relative Δ ACC std (%)')\n",
        "ax2.set_title('Relative Change Rate of ACC std (n_splits=35–45)')\n",
        "\n",
        "# x-axis ticks from 35 to 45\n",
        "ax2.set_xticks(np.arange(35, 46))\n",
        "ax2.set_xticklabels(np.arange(35, 46), rotation=45)\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 607
        },
        "id": "BUX-umVz2TEp",
        "outputId": "33ee077e-b420-4de6-e58a-5f668f15fce4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 2 Axes>"
            ],
            "image/png": "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zMxU/P39lSeffDLP/YBibm6uXLlyRXff6dOnFUD55ptvdPf16dNHsba2Vm7fvq277/Lly4qpqWme1zQ8PFwxMTFRPv/88zz7OXPmjGJqaprv/v8qznsmOztbycjIyPP8O3fuKO7u7spLL72kuy82Njbf7zdXaX5/69evVwDls88+y3P/4MGDFZVKlec17dixo9K4ceOHbu9Bb775puLt7a1otVpFURRl+/btCqCcPHlSNyY7O1vx8fFRatWqle89lPs8RVGUDh06KHZ2dnk+C/8d8+KLLyq1atXKF8eUKVPyfWYARa1WK+fOncs3vijvu8uXLytqtVoZMGCAotFoCoxJo9EoNWrUUIYMGZLn8Tlz5igqlUq5du1avn0/qF27dvk+E4ryv/dX165d8/z/x40bp5iYmCh379596HYf5ODgoLzxxhsPHdOxY0cFUGbPnq27LyMjQwkMDFTc3NyUzMxMRVEUJSwsTAGUJUuW6MYV9Nrb2NgoL774Yoliyd3eo24FvQ8URVEsLCx0Y5ydnZWvv/4635i2bdsq8+bNUzZs2KAsXLhQ8ff3VwDlu+++e2hsBdm8ebNiamqqe5+9+OKLio2NTb5xkyZNUiZOnKisWrVK+f3333Xfk0888YSSlZWVb/z06dMVQImOji52TEKUlFypEEJPunbtiqurK97e3gwePBgbGxs2btxIjRo1AEhISGD37t0888wzJCcn686YxcfH06NHDy5fvvzQzj9WVla6f6ekpBAXF0fbtm1RFIWTJ0+WKOYhQ4YQExOTp0xl9erVaLVahgwZope4cy/VF3fC4GuvvZbn5/bt23Pt2rU89z34mty5c4fExETat29fYDlE165dqVu3ru7ngIAA7O3tddvUaDTs3LmT/v3755mUWa9ePZ566qk821q7di1arZZnnnkmz9lPDw8P6tevn6c06WEe9Z4BMDExwdzcHMip609ISCA7O5uWLVsWqeyjtL+/rVu3YmJiwttvv53n/nfffRdFUfjrr7+K9H/9r+zsbFatWsWQIUN05S9PPvkkbm5uea5WnDx5krCwMN5555188zVynxcbG8u+fft46aWXqFmzZoFjSqJjx474+fnlu78o77v169ej1Wr5+OOPUavz/qnNjUmtVvPcc8+xceNGkpOTdY+vWLGCtm3b4uPj89D44uPj81zV+q/Ro0fn+f+3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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn.model_selection import StratifiedKFold\n",
        "from sklearn.metrics       import accuracy_score, f1_score\n",
        "\n",
        "# --- 1. 데이터 로드 & 수동 스케일링 ---\n",
        "train_df = pd.read_csv('process1_result.csv')\n",
        "test_df  = pd.read_csv('process2_result.csv')\n",
        "features      = ['Sex','SibSp','Parch','Embarked','TicketNumeric']\n",
        "X = train_df[features].values\n",
        "y = train_df['Survived'].values\n",
        "X_test = test_df[features].values\n",
        "ids    = test_df['PassengerId'].values\n",
        "\n",
        "# train 데이터로만 평균·표준편차 계산\n",
        "means = X.mean(axis=0)\n",
        "stds  = X.std(axis=0)\n",
        "stds[stds==0] = 1.0\n",
        "\n",
        "X_scaled      = (X      - means) / stds\n",
        "X_test_scaled = (X_test - means) / stds\n",
        "\n",
        "# --- 2. 거리 행렬 계산 함수 ---\n",
        "def euclid_dist_matrix(A, B):\n",
        "    # A: (n, d), B: (m, d) → (n, m)\n",
        "    return np.sqrt(((A[:,None,:] - B[None,:,:])**2).sum(axis=2))\n",
        "\n",
        "# 전체 train↔train 거리 행렬\n",
        "D_full = euclid_dist_matrix(X_scaled, X_scaled)\n",
        "\n",
        "# --- 3. Manual k-NN 예측 함수 ---\n",
        "def knn_predict_batch(D, y_train, k):\n",
        "    # D: (n_samples, n_train) 거리 행렬\n",
        "    # return: 길이 n_samples 예측 벡터\n",
        "    idx = np.argpartition(D, kth=k, axis=1)[:,:k]\n",
        "    return np.array([ np.bincount(y_train[row]).argmax() for row in idx ])\n",
        "\n",
        "# --- 4. 37-fold CV with k=20 ---\n",
        "k_neighbors = 20\n",
        "n_splits    = 37\n",
        "skf = StratifiedKFold(n_splits=n_splits, shuffle=True, random_state=42)\n",
        "\n",
        "accs, f1s = [], []\n",
        "print(f\"--- {n_splits}-Fold CV (k_neighbors={k_neighbors}) ---\")\n",
        "for fold, (tr_idx, va_idx) in enumerate(skf.split(X_scaled, y), start=1):\n",
        "    # train/val 거리 서브행렬\n",
        "    D_va_tr = D_full[va_idx][:, tr_idx]\n",
        "    y_tr    = y[tr_idx]\n",
        "\n",
        "    # 예측 및 평가\n",
        "    preds = knn_predict_batch(D_va_tr, y_tr, k_neighbors)\n",
        "    acc   = accuracy_score(y[va_idx], preds)\n",
        "    f1    = f1_score    (y[va_idx], preds)\n",
        "\n",
        "    accs.append(acc)\n",
        "    f1s .append(f1)\n",
        "    print(f\"Fold {fold:2d} — ACC: {acc:.4f}, F1: {f1:.4f}\")\n",
        "\n",
        "# CV 결과 요약\n",
        "print(\"\\n=== Cross-Validation Results ===\")\n",
        "print(f\"ACC: {np.mean(accs):.4f} ± {np.std(accs):.4f}\")\n",
        "print(f\"F1 : {np.mean(f1s ): .4f} ± {np.std(f1s):.4f}\")\n",
        "\n",
        "# --- 5. 최종 예측: 전체 train↔test 거리로 k-NN 적용 ---\n",
        "D_test = euclid_dist_matrix(X_test_scaled, X_scaled)\n",
        "final_preds = knn_predict_batch(D_test, y, k_neighbors)\n",
        "\n",
        "submission = pd.DataFrame({\n",
        "    'PassengerId': ids,\n",
        "    'Survived':    final_preds\n",
        "})\n",
        "submission.to_csv('knn_manual_k20_cv37_submission.csv', index=False)\n",
        "print(\"\\nSaved: knn_manual_k20_cv37_submission.csv\")\n"
      ],
      "metadata": {
        "id": "yAniobxx2vDo",
        "outputId": "1c09410e-2470-4189-8499-770e169a6940",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "--- 37-Fold CV (k_neighbors=20) ---\n",
            "Fold  1 — ACC: 0.8400, F1: 0.7778\n",
            "Fold  2 — ACC: 0.8000, F1: 0.7619\n",
            "Fold  3 — ACC: 0.8400, F1: 0.8000\n",
            "Fold  4 — ACC: 0.8333, F1: 0.7143\n",
            "Fold  5 — ACC: 0.7500, F1: 0.5714\n",
            "Fold  6 — ACC: 0.7083, F1: 0.5333\n",
            "Fold  7 — ACC: 0.7083, F1: 0.5882\n",
            "Fold  8 — ACC: 0.8750, F1: 0.8235\n",
            "Fold  9 — ACC: 0.8333, F1: 0.8000\n",
            "Fold 10 — ACC: 0.7500, F1: 0.5000\n",
            "Fold 11 — ACC: 0.7917, F1: 0.7368\n",
            "Fold 12 — ACC: 0.6667, F1: 0.3333\n",
            "Fold 13 — ACC: 0.6667, F1: 0.5000\n",
            "Fold 14 — ACC: 0.9167, F1: 0.8889\n",
            "Fold 15 — ACC: 0.7500, F1: 0.5000\n",
            "Fold 16 — ACC: 0.7500, F1: 0.5714\n",
            "Fold 17 — ACC: 0.8333, F1: 0.7143\n",
            "Fold 18 — ACC: 0.7083, F1: 0.5882\n",
            "Fold 19 — ACC: 0.7500, F1: 0.6250\n",
            "Fold 20 — ACC: 0.7917, F1: 0.7059\n",
            "Fold 21 — ACC: 0.8750, F1: 0.8235\n",
            "Fold 22 — ACC: 0.8750, F1: 0.8000\n",
            "Fold 23 — ACC: 0.8333, F1: 0.7143\n",
            "Fold 24 — ACC: 0.7500, F1: 0.6667\n",
            "Fold 25 — ACC: 0.8750, F1: 0.8235\n",
            "Fold 26 — ACC: 0.7917, F1: 0.6667\n",
            "Fold 27 — ACC: 0.8333, F1: 0.8000\n",
            "Fold 28 — ACC: 0.7917, F1: 0.6154\n",
            "Fold 29 — ACC: 0.8333, F1: 0.7778\n",
            "Fold 30 — ACC: 0.7917, F1: 0.7059\n",
            "Fold 31 — ACC: 0.7083, F1: 0.6667\n",
            "Fold 32 — ACC: 0.7917, F1: 0.7368\n",
            "Fold 33 — ACC: 0.9167, F1: 0.9000\n",
            "Fold 34 — ACC: 0.8750, F1: 0.8421\n",
            "Fold 35 — ACC: 0.8750, F1: 0.8235\n",
            "Fold 36 — ACC: 0.7917, F1: 0.7368\n",
            "Fold 37 — ACC: 0.7500, F1: 0.6250\n",
            "\n",
            "=== Cross-Validation Results ===\n",
            "ACC: 0.7979 ± 0.0653\n",
            "F1 :  0.6962 ± 0.1251\n",
            "\n",
            "Saved: knn_manual_k20_cv37_submission.csv\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "pca에 대해서 logistic부터 진행"
      ],
      "metadata": {
        "id": "BJ7xGnYJJzWH"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# --- 1. 데이터 로드 & 스케일링 ---\n",
        "train_df = pd.read_csv('process1_result.csv')\n",
        "features      = ['Sex','SibSp','Parch','Embarked','TicketNumeric']\n",
        "X_train       = train_df[features].values\n",
        "y_train       = train_df['Survived'].values\n",
        "\n",
        "# 1. 데이터 zero centering (평균 제거) 및 unit-variance 스케일링\n",
        "means = X_train.mean(axis=0)\n",
        "stds  = X_train.std(axis=0)\n",
        "stds[stds==0] = 1.0\n",
        "Z = (X_train - means) / stds    # 중앙화·표준화된 데이터\n",
        "\n",
        "# --- 2. PCA 고유벡터 한 번만 계산 ---\n",
        "# 2. 공분산 행렬 계산\n",
        "cov_mat = np.cov(Z, rowvar=False)       # (d, d)\n",
        "\n",
        "# 3. 고유분해 (eigen decomposition)\n",
        "eigvals, eigvecs = np.linalg.eigh(cov_mat)\n",
        "\n",
        "print(eigvals)\n",
        "\n",
        "\n",
        "# 4. 고유값 내림차순 정렬 (λ1 ≥ λ2 ≥ …)\n",
        "idx = np.argsort(eigvals)[::-1]\n",
        "eigvecs = eigvecs[:, idx]\n",
        "\n",
        "# --- 3. k별 PCA 투사 → 복원 → MSE 계산 → SGD 로지스틱 학습 → Test1 정확도 ---\n",
        "def sigmoid(z):\n",
        "    return 1 / (1 + np.exp(-z))\n",
        "\n",
        "def train_logistic_sgd(X, y, lr=0.001, epochs=9):\n",
        "    m, d = X.shape\n",
        "    w = np.zeros(d)\n",
        "    b = 0.0\n",
        "    for _ in range(epochs):\n",
        "        for i in range(m):\n",
        "            xi, yi = X[i], y[i]\n",
        "            z = xi.dot(w) + b\n",
        "            h = sigmoid(z)\n",
        "            delta = h - yi\n",
        "            w -= lr * delta * xi\n",
        "            b -= lr * delta\n",
        "    return w, b\n",
        "\n",
        "ks = list(range(1, eigvecs.shape[1] + 1))\n",
        "mses = []\n",
        "accuracies = []\n",
        "\n",
        "for k in ks:\n",
        "    # 5. 상위 k 주성분(고유벡터) 선택\n",
        "    V_k = eigvecs[:, :k]             # (d, k)\n",
        "\n",
        "    # 6. 저차원 투사\n",
        "    T = Z.dot(V_k)                   # (n, k)\n",
        "\n",
        "    # 7. 데이터 복원\n",
        "    Z_hat = T.dot(V_k.T)             # (n, d)\n",
        "\n",
        "    # 8. 재구성 오차(MSE) 계산\n",
        "    mse = np.mean((Z - Z_hat) ** 2)\n",
        "    mses.append(mse)\n",
        "\n",
        "    # --- 이하 Test1 학습 및 평가 (기존 코드) ---\n",
        "    w, b = train_logistic_sgd(T, y_train, lr=0.001, epochs=9)\n",
        "    probs = sigmoid(T.dot(w) + b)\n",
        "    preds = (probs >= 0.5).astype(int)\n",
        "    acc   = np.mean(preds == y_train) * 100\n",
        "    accuracies.append(acc)\n",
        "\n",
        "    print(f\"k={k:2d} → MSE={mse:.4f}, Test1 ACC={acc:.2f}%\")\n",
        "\n",
        "# --- 4. k vs. MSE & ACC 그래프 ---\n",
        "fig, ax1 = plt.subplots(figsize=(8,4))\n",
        "\n",
        "color = 'tab:blue'\n",
        "ax1.set_xlabel('Number of PCA components (k)')\n",
        "ax1.set_ylabel('MSE', color=color)\n",
        "ax1.plot(ks, mses, marker='o', color=color, label='Reconstruction MSE')\n",
        "ax1.tick_params(axis='y', labelcolor=color)\n",
        "\n",
        "ax2 = ax1.twinx()\n",
        "color = 'tab:red'\n",
        "ax2.set_ylabel('Test1 ACC (%)', color=color)\n",
        "ax2.plot(ks, accuracies, marker='s', color=color, label='Test1 Accuracy')\n",
        "ax2.tick_params(axis='y', labelcolor=color)\n",
        "\n",
        "fig.tight_layout()\n",
        "plt.title('PCA Components vs. Reconstruction MSE & Accuracy')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 539
        },
        "id": "9CaZfLptJ2lO",
        "outputId": "f416ed1b-3359-43db-a5de-fddd1cda3b97"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[0.55078737 0.7795421  0.95167167 1.15075507 1.57286177]\n",
            "k= 1 → MSE=0.6858, Test1 ACC=57.91%\n",
            "k= 2 → MSE=0.4559, Test1 ACC=72.28%\n",
            "k= 3 → MSE=0.2658, Test1 ACC=75.42%\n",
            "k= 4 → MSE=0.1100, Test1 ACC=78.56%\n",
            "k= 5 → MSE=0.0000, Test1 ACC=78.68%\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x400 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# --- 1. 데이터 로드 & 스케일링 ---\n",
        "train_df = pd.read_csv('process1_result.csv')\n",
        "features      = ['Sex','SibSp','Parch','Embarked','TicketNumeric']\n",
        "X_train       = train_df[features].values\n",
        "y_train       = train_df['Survived'].values\n",
        "\n",
        "# 1. 데이터 zero centering (평균 제거) 및 unit-variance 스케일링\n",
        "means = X_train.mean(axis=0)\n",
        "stds  = X_train.std(axis=0)\n",
        "stds[stds==0] = 1.0\n",
        "Z = (X_train - means) / stds    # 중앙화·표준화된 데이터\n",
        "\n",
        "# --- 2. PCA 고유벡터 한 번만 계산 ---\n",
        "# 2. 공분산 행렬 계산\n",
        "cov_mat = np.cov(Z, rowvar=False)       # (d, d)\n",
        "\n",
        "# 3. 고유분해 (eigen decomposition)\n",
        "eigvals, eigvecs = np.linalg.eigh(cov_mat)\n",
        "\n",
        "# 4. 고유값 내림차순 정렬 (λ1 ≥ λ2 ≥ …)\n",
        "idx = np.argsort(eigvals)[::-1]\n",
        "eigvecs = eigvecs[:, idx]\n",
        "\n",
        "# --- 3. k별 PCA 투사 → 복원 → MSE 계산 → SGD 로지스틱 학습 → Test1 ACC・F1 계산 ---\n",
        "def sigmoid(z):\n",
        "    return 1 / (1 + np.exp(-z))\n",
        "\n",
        "def train_logistic_sgd(X, y, lr=0.001, epochs=9):\n",
        "    m, d = X.shape\n",
        "    w = np.zeros(d)\n",
        "    b = 0.0\n",
        "    for _ in range(epochs):\n",
        "        for i in range(m):\n",
        "            xi, yi = X[i], y[i]\n",
        "            z = xi.dot(w) + b\n",
        "            h = sigmoid(z)\n",
        "            delta = h - yi\n",
        "            w -= lr * delta * xi\n",
        "            b -= lr * delta\n",
        "    return w, b\n",
        "\n",
        "ks = list(range(1, eigvecs.shape[1] + 1))\n",
        "mses = []\n",
        "accuracies = []\n",
        "f1_scores = []\n",
        "\n",
        "for k in ks:\n",
        "    # 5. 상위 k 주성분(고유벡터) 선택\n",
        "    V_k = eigvecs[:, :k]             # (d, k)\n",
        "\n",
        "    # 6. 저차원 투사\n",
        "    T = Z.dot(V_k)                   # (n, k)\n",
        "\n",
        "    # 7. 데이터 복원\n",
        "    Z_hat = T.dot(V_k.T)             # (n, d)\n",
        "\n",
        "    # 8. 재구성 오차(MSE) 계산\n",
        "    mse = np.mean((Z - Z_hat) ** 2)\n",
        "    mses.append(mse)\n",
        "\n",
        "    # --- SGD 로지스틱 학습 및 Test1 예측 ---\n",
        "    w, b = train_logistic_sgd(T, y_train, lr=0.001, epochs=9)\n",
        "    probs = sigmoid(T.dot(w) + b)\n",
        "    preds = (probs >= 0.5).astype(int)\n",
        "\n",
        "    # 9. Test1 정확도 계산\n",
        "    acc = np.mean(preds == y_train) * 100\n",
        "    accuracies.append(acc)\n",
        "\n",
        "    # 10. Test1 F1-score 계산 (수동 구현)\n",
        "    tp = np.sum((preds == 1) & (y_train == 1))\n",
        "    fp = np.sum((preds == 1) & (y_train == 0))\n",
        "    fn = np.sum((preds == 0) & (y_train == 1))\n",
        "    precision = tp / (tp + fp) if (tp + fp) > 0 else 0.0\n",
        "    recall    = tp / (tp + fn) if (tp + fn) > 0 else 0.0\n",
        "    f1 = 2 * precision * recall / (precision + recall) if (precision + recall) > 0 else 0.0\n",
        "    f1_scores.append(f1 * 100)\n",
        "\n",
        "    print(f\"k={k:2d} → MSE={mse:.4f}, ACC={acc:.2f}%, F1={f1*100:.2f}%\")\n",
        "\n",
        "# --- 4. k vs. MSE, ACC & F1 그래프 ---\n",
        "fig, ax1 = plt.subplots(figsize=(8,4))\n",
        "\n",
        "ax1.set_xlabel('Number of PCA components (k)')\n",
        "ax1.set_ylabel('Reconstruction MSE', color='tab:blue')\n",
        "ax1.plot(ks, mses, marker='o', color='tab:blue', label='MSE')\n",
        "ax1.tick_params(axis='y', labelcolor='tab:blue')\n",
        "\n",
        "ax2 = ax1.twinx()\n",
        "ax2.set_ylabel('Test1 ACC & F1 (%)', color='tab:red')\n",
        "ax2.plot(ks, accuracies, marker='s', linestyle='-', label='ACC')\n",
        "ax2.plot(ks, f1_scores, marker='^', linestyle='--', label='F1')\n",
        "ax2.tick_params(axis='y', labelcolor='tab:red')\n",
        "\n",
        "fig.tight_layout()\n",
        "ax2.legend(loc='lower right')\n",
        "plt.title('PCA Components vs. MSE, ACC & F1')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 521
        },
        "id": "675yOMTS1EO-",
        "outputId": "fd23664c-8e66-4fe3-a1a3-7bbd20b6ebf7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "k= 1 → MSE=0.6858, ACC=57.91%, F1=10.93%\n",
            "k= 2 → MSE=0.4559, ACC=72.28%, F1=61.82%\n",
            "k= 3 → MSE=0.2658, ACC=75.42%, F1=65.18%\n",
            "k= 4 → MSE=0.1100, ACC=78.56%, F1=70.57%\n",
            "k= 5 → MSE=0.0000, ACC=78.68%, F1=70.68%\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x400 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "\n",
        "# --- 1. 데이터 로드 & 수동 스케일링 ---\n",
        "train_df = pd.read_csv('process1_result.csv')\n",
        "test_df  = pd.read_csv('process2_result.csv')\n",
        "\n",
        "features      = ['Sex','SibSp','Parch','Embarked','TicketNumeric']\n",
        "X_train       = train_df[features].values\n",
        "y_train       = train_df['Survived'].values\n",
        "X_test        = test_df[features].values\n",
        "passenger_ids = test_df['PassengerId'].values\n",
        "\n",
        "# zero-mean, unit-variance\n",
        "means = X_train.mean(axis=0)\n",
        "stds  = X_train.std(axis=0)\n",
        "stds[stds == 0] = 1.0\n",
        "\n",
        "X_train_scaled = (X_train - means) / stds\n",
        "X_test_scaled  = (X_test  - means) / stds\n",
        "\n",
        "# --- 2. PCA 고유벡터 계산 & k=4 주성분 선택 ---\n",
        "cov_mat      = np.cov(X_train_scaled, rowvar=False)\n",
        "eigvals, eigvecs = np.linalg.eigh(cov_mat)\n",
        "idx          = np.argsort(eigvals)[::-1]\n",
        "eigvecs      = eigvecs[:, idx]\n",
        "\n",
        "k = 4\n",
        "V_k = eigvecs[:, :k]               # (d, 4)\n",
        "\n",
        "# --- 3. Train/Test2에 PCA 투사 ---\n",
        "X_train_pca = X_train_scaled.dot(V_k)  # (n_train, 4)\n",
        "X_test_pca  = X_test_scaled.dot(V_k)   # (n_test,  4)\n",
        "\n",
        "# --- 4. SGD 로지스틱 회귀 학습 (lr=0.001, epochs=9) ---\n",
        "def sigmoid(z):\n",
        "    return 1 / (1 + np.exp(-z))\n",
        "\n",
        "def train_logistic_sgd(X, y, lr=0.001, epochs=9):\n",
        "    m, d = X.shape\n",
        "    w = np.zeros(d)\n",
        "    b = 0.0\n",
        "    for _ in range(epochs):\n",
        "        for i in range(m):\n",
        "            xi, yi = X[i], y[i]\n",
        "            z  = xi.dot(w) + b\n",
        "            h  = sigmoid(z)\n",
        "            g  = h - yi\n",
        "            w -= lr * g * xi\n",
        "            b -= lr * g\n",
        "    return w, b\n",
        "\n",
        "w, b = train_logistic_sgd(X_train_pca, y_train, lr=0.001, epochs=9)\n",
        "\n",
        "# --- 5. Test2 예측 & 제출 파일 생성 ---\n",
        "probs_test = sigmoid(X_test_pca.dot(w) + b)\n",
        "preds_test = (probs_test >= 0.5).astype(int)\n",
        "\n",
        "submission_df = pd.DataFrame({\n",
        "    'PassengerId': passenger_ids,\n",
        "    'Survived':    preds_test\n",
        "})\n",
        "submission_df.to_csv('submission_logistic_pca_k4.csv', index=False)\n",
        "print(\"Saved: submission_logistic_pca_k4.csv\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jAayJO4dvwNI",
        "outputId": "270db918-b7bb-416f-cf25-1c67ffdea7c8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Saved: submission_logistic_pca_k4.csv\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "pca에 대해 knn 진행"
      ],
      "metadata": {
        "id": "HoK7V1qdyEFH"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "## pca to knn\n",
        "\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "\n",
        "# --- 1. 데이터 로드 & 수동 스케일링 ---\n",
        "train_df = pd.read_csv('process1_result.csv')\n",
        "test_df  = pd.read_csv('process2_result.csv')\n",
        "\n",
        "features      = ['Sex','SibSp','Parch','Embarked','TicketNumeric']\n",
        "X_train       = train_df[features].values\n",
        "y_train       = train_df['Survived'].values\n",
        "X_test        = test_df[features].values\n",
        "passenger_ids = test_df['PassengerId'].values\n",
        "\n",
        "# 1. 데이터 zero-centering & unit-variance 스케일링\n",
        "means = X_train.mean(axis=0)\n",
        "stds  = X_train.std(axis=0)\n",
        "stds[stds == 0] = 1.0\n",
        "X_train_scaled = (X_train - means) / stds\n",
        "X_test_scaled  = (X_test  - means) / stds\n",
        "\n",
        "# --- 2. PCA 고유벡터 계산 & k_pca=4 주성분 선택 ---\n",
        "cov_mat      = np.cov(X_train_scaled, rowvar=False)   # (d, d)\n",
        "eigvals, eigvecs = np.linalg.eigh(cov_mat)            # 공분산 행렬 고유분해\n",
        "idx          = np.argsort(eigvals)[::-1]              # 고유값 내림차순 인덱스\n",
        "eigvecs      = eigvecs[:, idx]\n",
        "\n",
        "k_pca = 4\n",
        "V_k   = eigvecs[:, :k_pca]    # (d, 4) 주성분 행렬\n",
        "\n",
        "# --- 3. PCA 투사 ---\n",
        "X_train_pca = X_train_scaled.dot(V_k)   # (n_train, 4)\n",
        "X_test_pca  = X_test_scaled.dot(V_k)    # (n_test,  4)\n",
        "\n",
        "# --- 4. KNN 예측 함수 정의 (k_neighbors=20) ---\n",
        "def euclid_dist_matrix(A, B):\n",
        "    # A: (n_a, d), B: (n_b, d)\n",
        "    # 반환 D: (n_a, n_b) 거리 행렬\n",
        "    return np.sqrt(((A[:, None, :] - B[None, :, :]) ** 2).sum(axis=2))\n",
        "\n",
        "def knn_predict(train_X, train_y, test_X, k_neighbors=20):\n",
        "    # 거리 계산\n",
        "    D = euclid_dist_matrix(test_X, train_X)\n",
        "    # 각 테스트 샘플에 대해 k_neighbors개의 최근접 이웃 예측\n",
        "    neighbor_idxs = np.argpartition(D, k_neighbors, axis=1)[:, :k_neighbors]\n",
        "    preds = np.array([\n",
        "        np.bincount(train_y[idxs]).argmax()\n",
        "        for idxs in neighbor_idxs\n",
        "    ])\n",
        "    return preds\n",
        "\n",
        "# --- 5. Test2 예측 & 제출 파일 생성 ---\n",
        "k_neighbors = 20\n",
        "preds_test = knn_predict(\n",
        "    train_X= X_train_pca,\n",
        "    train_y= y_train,\n",
        "    test_X = X_test_pca,\n",
        "    k_neighbors = k_neighbors\n",
        ")\n",
        "\n",
        "submission_df = pd.DataFrame({\n",
        "    'PassengerId': passenger_ids,\n",
        "    'Survived':    preds_test\n",
        "})\n",
        "submission_df.to_csv('knn_pca_k4_test2.csv', index=False)\n",
        "print(\"Saved: knn_pca_k4_test2.csv\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UeggJFbCyHV_",
        "outputId": "4346f9e1-78da-46c3-b751-32c573358130"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Saved: knn_pca_k4_test2.csv\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "## pca to knn, acc and f1 score\n",
        "\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "\n",
        "# --- 1. 데이터 로드 & 스케일링 ---\n",
        "train_df = pd.read_csv('process1_result.csv')\n",
        "test_df  = pd.read_csv('process2_result.csv')\n",
        "\n",
        "features      = ['Sex','SibSp','Parch','Embarked','TicketNumeric']\n",
        "X_train       = train_df[features].values\n",
        "y_train       = train_df['Survived'].values\n",
        "X_test        = test_df[features].values\n",
        "passenger_ids = test_df['PassengerId'].values\n",
        "\n",
        "# 1) zero-mean, unit-variance 스케일링\n",
        "means = X_train.mean(axis=0)\n",
        "stds  = X_train.std(axis=0)\n",
        "stds[stds == 0] = 1.0\n",
        "X_train_scaled = (X_train - means) / stds\n",
        "X_test_scaled  = (X_test  - means) / stds\n",
        "\n",
        "# --- 2. PCA 고유벡터 계산 & k_pca=4 주성분 선택 ---\n",
        "cov_mat         = np.cov(X_train_scaled, rowvar=False)\n",
        "eigvals, eigvecs= np.linalg.eigh(cov_mat)\n",
        "idx             = np.argsort(eigvals)[::-1]\n",
        "V_k             = eigvecs[:, idx[:4]]   # (d,4)\n",
        "\n",
        "# --- 3. PCA 투사 ---\n",
        "X_train_pca = X_train_scaled.dot(V_k)\n",
        "X_test_pca  = X_test_scaled.dot(V_k)\n",
        "\n",
        "# --- 4. KNN 예측 함수 정의 ---\n",
        "def euclid_dist_matrix(A, B):\n",
        "    return np.sqrt(((A[:,None,:] - B[None,:,:])**2).sum(axis=2))\n",
        "\n",
        "def knn_predict(train_X, train_y, test_X, k_neighbors=20):\n",
        "    D = euclid_dist_matrix(test_X, train_X)\n",
        "    neigh = np.argpartition(D, k_neighbors, axis=1)[:,:k_neighbors]\n",
        "    preds = []\n",
        "    for idxs in neigh:\n",
        "        # 다수결\n",
        "        counts = np.bincount(train_y[idxs])\n",
        "        preds.append(np.argmax(counts))\n",
        "    return np.array(preds)\n",
        "\n",
        "# --- 5. Test1 (Train 데이터) 예측 & 평가 ---\n",
        "k_neighbors = 20\n",
        "preds_train = knn_predict(X_train_pca, y_train, X_train_pca, k_neighbors)\n",
        "\n",
        "# 정확도 계산\n",
        "accuracy = np.mean(preds_train == y_train)\n",
        "\n",
        "# F1-score 계산 (binary)\n",
        "tp = np.sum((preds_train == 1) & (y_train == 1))\n",
        "fp = np.sum((preds_train == 1) & (y_train == 0))\n",
        "fn = np.sum((preds_train == 0) & (y_train == 1))\n",
        "\n",
        "precision = tp / (tp + fp) if (tp + fp) > 0 else 0.0\n",
        "recall    = tp / (tp + fn) if (tp + fn) > 0 else 0.0\n",
        "f1_score  = 2 * precision * recall / (precision + recall) if (precision + recall) > 0 else 0.0\n",
        "\n",
        "print(f\"Test1 Accuracy: {accuracy*100:.2f}%\")\n",
        "print(f\"Test1 F1-score : {f1_score*100:.2f}%\")\n",
        "\n",
        "# --- 6. Test2 예측 & 캐글 제출 파일 생성 ---\n",
        "preds_test = knn_predict(X_train_pca, y_train, X_test_pca, k_neighbors)\n",
        "\n",
        "submission_df = pd.DataFrame({\n",
        "    'PassengerId': passenger_ids,\n",
        "    'Survived':    preds_test\n",
        "})\n",
        "submission_df.to_csv('knn_pca_k4_test2.csv', index=False)\n",
        "print(\"Saved: knn_pca_k4_test2.csv\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MQTe0EItzXyZ",
        "outputId": "e3a6a715-b609-4f8c-be49-ce38e95b25fe"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Test1 Accuracy: 80.81%\n",
            "Test1 F1-score : 72.01%\n",
            "Saved: knn_pca_k4_test2.csv\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "## pca to dicision tree\n",
        "\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "\n",
        "# --- 1. 데이터 로드 & 수동 스케일링 ---\n",
        "train_df = pd.read_csv('process1_result.csv')\n",
        "test_df  = pd.read_csv('process2_result.csv')\n",
        "\n",
        "features      = ['Sex','SibSp','Parch','Embarked','TicketNumeric']\n",
        "X_train       = train_df[features].values\n",
        "y_train       = train_df['Survived'].values\n",
        "X_test        = test_df[features].values\n",
        "passenger_ids = test_df['PassengerId'].values\n",
        "\n",
        "# 1) zero-centering & unit-variance 스케일링\n",
        "means = X_train.mean(axis=0)\n",
        "stds  = X_train.std(axis=0)\n",
        "stds[stds == 0] = 1.0\n",
        "X_train_scaled = (X_train - means) / stds\n",
        "X_test_scaled  = (X_test  - means) / stds\n",
        "\n",
        "# --- 2. PCA 고유벡터 계산 & k_pca=4 주성분 선택 ---\n",
        "cov_mat         = np.cov(X_train_scaled, rowvar=False)\n",
        "eigvals, eigvecs= np.linalg.eigh(cov_mat)\n",
        "idx             = np.argsort(eigvals)[::-1]\n",
        "V_k             = eigvecs[:, idx[:4]]   # (d,4)\n",
        "\n",
        "# --- 3. PCA 투사 ---\n",
        "X_train_pca = X_train_scaled.dot(V_k)    # (n_train,4)\n",
        "X_test_pca  = X_test_scaled.dot(V_k)     # (n_test, 4)\n",
        "\n",
        "# --- 4. Decision Tree 구현 함수들 ---\n",
        "def gini(labels):\n",
        "    classes, counts = np.unique(labels, return_counts=True)\n",
        "    p = counts / counts.sum()\n",
        "    return 1.0 - np.sum(p**2)\n",
        "\n",
        "def weighted_gini(col, labels, t):\n",
        "    left  = labels[col <= t]\n",
        "    right = labels[col >  t]\n",
        "    if len(left)==0 or len(right)==0:\n",
        "        return None\n",
        "    n = len(labels)\n",
        "    return (len(left)/n)*gini(left) + (len(right)/n)*gini(right)\n",
        "\n",
        "def find_best_split(X, y):\n",
        "    best_gain, best_feat, best_t = 0.0, None, None\n",
        "    parent = gini(y)\n",
        "    for feat in range(X.shape[1]):\n",
        "        vals = np.unique(X[:,feat])\n",
        "        thresholds = (vals[:-1] + vals[1:]) / 2.0\n",
        "        for t in thresholds:\n",
        "            wg = weighted_gini(X[:,feat], y, t)\n",
        "            if wg is None: continue\n",
        "            gain = parent - wg\n",
        "            if gain > best_gain:\n",
        "                best_gain, best_feat, best_t = gain, feat, t\n",
        "    return best_feat, best_t\n",
        "\n",
        "def build_tree(X, y, depth=0, max_depth=15):\n",
        "    if len(np.unique(y)) == 1 or depth == max_depth:\n",
        "        vals, cnts = np.unique(y, return_counts=True)\n",
        "        return {'leaf': True, 'pred': vals[np.argmax(cnts)]}\n",
        "    feat, thresh = find_best_split(X, y)\n",
        "    if feat is None:\n",
        "        vals, cnts = np.unique(y, return_counts=True)\n",
        "        return {'leaf': True, 'pred': vals[np.argmax(cnts)]}\n",
        "    mask = X[:, feat] <= thresh\n",
        "    left  = build_tree(X[mask],  y[mask],  depth+1, max_depth)\n",
        "    right = build_tree(X[~mask], y[~mask], depth+1, max_depth)\n",
        "    return {'leaf': False, 'feat': feat, 'thresh': thresh, 'left': left, 'right': right}\n",
        "\n",
        "def predict(tree, x):\n",
        "    if tree['leaf']:\n",
        "        return tree['pred']\n",
        "    if x[tree['feat']] <= tree['thresh']:\n",
        "        return predict(tree['left'], x)\n",
        "    else:\n",
        "        return predict(tree['right'], x)\n",
        "\n",
        "# --- 5. 전체 Train으로 트리 학습 ---\n",
        "tree = build_tree(X_train_pca, y_train, max_depth=15)\n",
        "\n",
        "# --- 6. Test1 (Train) 예측 & 평가 ---\n",
        "preds_train = np.array([predict(tree, x) for x in X_train_pca])\n",
        "accuracy    = np.mean(preds_train == y_train)\n",
        "\n",
        "# F1-score 계산 (binary)\n",
        "tp = np.sum((preds_train == 1) & (y_train == 1))\n",
        "fp = np.sum((preds_train == 1) & (y_train == 0))\n",
        "fn = np.sum((preds_train == 0) & (y_train == 1))\n",
        "precision = tp / (tp + fp) if (tp + fp) > 0 else 0.0\n",
        "recall    = tp / (tp + fn) if (tp + fn) > 0 else 0.0\n",
        "f1_score  = 2 * precision * recall / (precision + recall) if (precision + recall) > 0 else 0.0\n",
        "\n",
        "print(f\"Test1 (Train) Accuracy: {accuracy*100:.2f}%\")\n",
        "print(f\"Test1 (Train) F1-score : {f1_score*100:.2f}%\")\n",
        "\n",
        "# --- 7. Test2 예측 & 제출 파일 생성 ---\n",
        "preds_test = np.array([predict(tree, x) for x in X_test_pca])\n",
        "submission_df = pd.DataFrame({\n",
        "    'PassengerId': passenger_ids,\n",
        "    'Survived':    preds_test\n",
        "})\n",
        "submission_df.to_csv('submission_dt_pca_k4.csv', index=False)\n",
        "print(\"Saved: submission_dt_pca_k4.csv\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "T3wAkXam1jkw",
        "outputId": "b2a4dc43-8a37-4e4b-e208-d337acd70463"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Test1 (Train) Accuracy: 94.16%\n",
            "Test1 (Train) F1-score : 92.02%\n",
            "Saved: submission_dt_pca_k4.csv\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "FLD에 대한 logistic\n"
      ],
      "metadata": {
        "id": "aQlIlBa5Ioih"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "\n",
        "# --- 1. 데이터 로드 & zero-centering·스케일링 ---\n",
        "train_df = pd.read_csv('process1_result.csv')\n",
        "test_df  = pd.read_csv('process2_result.csv')\n",
        "\n",
        "features      = ['Sex','SibSp','Parch','Embarked','TicketNumeric']\n",
        "X_train       = train_df[features].values   # (n_train, d)\n",
        "y_train       = train_df['Survived'].values # (n_train,)\n",
        "X_test        = test_df[features].values    # (n_test, d)\n",
        "passenger_ids = test_df['PassengerId'].values\n",
        "\n",
        "# 1) zero-centering & unit-variance 스케일링\n",
        "means = X_train.mean(axis=0)\n",
        "stds  = X_train.std(axis=0)\n",
        "stds[stds == 0] = 1.0\n",
        "Z_train = (X_train - means) / stds         # (n_train, d)\n",
        "Z_test  = (X_test  - means) / stds         # (n_test,  d)\n",
        "\n",
        "# --- 2. 클래스별 평균 벡터 계산 ---\n",
        "mu0 = Z_train[y_train == 0].mean(axis=0)   # (d,)\n",
        "mu1 = Z_train[y_train == 1].mean(axis=0)   # (d,)\n",
        "\n",
        "# --- 3. 클래스 내 산포 행렬 SW ---\n",
        "d = Z_train.shape[1]\n",
        "SW = np.zeros((d, d))\n",
        "for z, y in zip(Z_train, y_train):\n",
        "    diff = (z - (mu1 if y == 1 else mu0)).reshape(-1, 1)\n",
        "    SW += diff.dot(diff.T)\n",
        "\n",
        "# --- 4. 클래스 간 산포 행렬 SB ---\n",
        "diff_mu = (mu1 - mu0).reshape(-1, 1)\n",
        "SB = diff_mu.dot(diff_mu.T)\n",
        "\n",
        "# --- 5. 판별 벡터 w 계산 & 정규화 ---\n",
        "w_fld = np.linalg.inv(SW).dot(mu1 - mu0)   # (d,)\n",
        "w_fld /= np.linalg.norm(w_fld)\n",
        "\n",
        "# --- 6. 1차원 투사 ---\n",
        "z_train = Z_train.dot(w_fld).reshape(-1, 1)  # (n_train, 1)\n",
        "z_test  = Z_test.dot(w_fld).reshape(-1, 1)   # (n_test, 1)\n",
        "\n",
        "# --- 7. SGD 로지스틱 회귀 정의 & 학습 (lr=0.001, epochs=9) ---\n",
        "def sigmoid(x):\n",
        "    return 1 / (1 + np.exp(-x))\n",
        "\n",
        "def train_logistic_sgd_1d(z, y, lr=0.001, epochs=9):\n",
        "    n = z.shape[0]\n",
        "    w = 0.0   # weight for 1D feature\n",
        "    b = 0.0   # bias\n",
        "    for _ in range(epochs):\n",
        "        for i in range(n):\n",
        "            zi = z[i,0]\n",
        "            yi = y[i]\n",
        "            pred = sigmoid(w * zi + b)\n",
        "            grad = pred - yi\n",
        "            w -= lr * grad * zi\n",
        "            b -= lr * grad\n",
        "    return w, b\n",
        "\n",
        "w_log, b_log = train_logistic_sgd_1d(z_train, y_train, lr=0.001, epochs=9)\n",
        "\n",
        "# --- 8. Test1 (Train) 예측 & 평가 ---\n",
        "probs_train = sigmoid(w_log * z_train[:,0] + b_log)\n",
        "preds_train = (probs_train >= 0.5).astype(int)\n",
        "\n",
        "# 정확도\n",
        "acc_train = np.mean(preds_train == y_train) * 100\n",
        "\n",
        "# F1-score (수동 계산)\n",
        "tp = np.sum((preds_train == 1) & (y_train == 1))\n",
        "fp = np.sum((preds_train == 1) & (y_train == 0))\n",
        "fn = np.sum((preds_train == 0) & (y_train == 1))\n",
        "precision = tp / (tp + fp) if (tp + fp) else 0.0\n",
        "recall    = tp / (tp + fn) if (tp + fn) else 0.0\n",
        "f1_score  = 2 * precision * recall / (precision + recall) if (precision + recall) else 0.0\n",
        "f1_train  = f1_score * 100\n",
        "\n",
        "print(f\"Test1 Accuracy: {acc_train:.2f}%\")\n",
        "print(f\"Test1 F1-score : {f1_train:.2f}%\")\n",
        "\n",
        "# --- 9. Test2 예측 & CSV 저장 ---\n",
        "probs_test = sigmoid(w_log * z_test[:,0] + b_log)\n",
        "preds_test = (probs_test >= 0.5).astype(int)\n",
        "\n",
        "submission = pd.DataFrame({\n",
        "    'PassengerId': passenger_ids,\n",
        "    'Survived':    preds_test\n",
        "})\n",
        "submission.to_csv('submission_logistic_fld.csv', index=False)\n",
        "print(\"Saved: submission_logistic_fld.csv\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PnMdiDdFIriS",
        "outputId": "cb21b1f0-8740-40d5-b216-80c4255705f4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Test1 Accuracy: 78.90%\n",
            "Test1 F1-score : 71.08%\n",
            "Saved: submission_logistic_fld.csv\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "FLD 에 대해 dicision tree를 진행한 코드"
      ],
      "metadata": {
        "id": "acGd7eHkL04T"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "\n",
        "# --- 1. 데이터 로드 & 수동 스케일링 ---\n",
        "train_df = pd.read_csv('process1_result.csv')\n",
        "test_df  = pd.read_csv('process2_result.csv')\n",
        "\n",
        "features      = ['Sex','SibSp','Parch','Embarked','TicketNumeric']\n",
        "X_train       = train_df[features].values   # (n_train, d)\n",
        "y_train       = train_df['Survived'].values # (n_train,)\n",
        "X_test        = test_df[features].values    # (n_test,  d)\n",
        "passenger_ids = test_df['PassengerId'].values\n",
        "\n",
        "# 1) zero-centering & unit-variance 스케일링\n",
        "means = X_train.mean(axis=0)\n",
        "stds  = X_train.std(axis=0)\n",
        "stds[stds == 0] = 1.0\n",
        "Z_train = (X_train - means) / stds         # (n_train, d)\n",
        "Z_test  = (X_test  - means) / stds         # (n_test,  d)\n",
        "\n",
        "# --- 2. FLD 축(w) 계산 ---\n",
        "# 2.1 클래스별 평균\n",
        "mu0 = Z_train[y_train == 0].mean(axis=0)   # (d,)\n",
        "mu1 = Z_train[y_train == 1].mean(axis=0)   # (d,)\n",
        "\n",
        "# 2.2 클래스 내 산포 행렬 SW\n",
        "d   = Z_train.shape[1]\n",
        "SW  = np.zeros((d, d))\n",
        "for z, y in zip(Z_train, y_train):\n",
        "    diff = (z - (mu1 if y == 1 else mu0)).reshape(-1,1)\n",
        "    SW += diff.dot(diff.T)\n",
        "\n",
        "# 2.3 판별 벡터 w ∝ SW^{-1}(μ1−μ0)\n",
        "w_fld = np.linalg.inv(SW).dot(mu1 - mu0)\n",
        "w_fld /= np.linalg.norm(w_fld)            # 정규화\n",
        "\n",
        "# --- 3. 1D 투사 ---\n",
        "z_train = Z_train.dot(w_fld).reshape(-1,1)  # (n_train, 1)\n",
        "z_test  = Z_test.dot(w_fld).reshape(-1,1)   # (n_test, 1)\n",
        "\n",
        "# --- 4. Decision Tree 구현 함수들 ---\n",
        "def gini(labels):\n",
        "    classes, counts = np.unique(labels, return_counts=True)\n",
        "    p = counts / counts.sum()\n",
        "    return 1.0 - np.sum(p**2)\n",
        "\n",
        "def weighted_gini(col, labels, t):\n",
        "    left  = labels[col <= t]\n",
        "    right = labels[col >  t]\n",
        "    if len(left)==0 or len(right)==0:\n",
        "        return None\n",
        "    n = len(labels)\n",
        "    return (len(left)/n)*gini(left) + (len(right)/n)*gini(right)\n",
        "\n",
        "def find_best_split(X, y):\n",
        "    best_gain, best_feat, best_t = 0.0, None, None\n",
        "    parent = gini(y)\n",
        "    # X.shape[1] == 1\n",
        "    vals = np.unique(X[:,0])\n",
        "    thresholds = (vals[:-1] + vals[1:]) / 2.0\n",
        "    for t in thresholds:\n",
        "        wg = weighted_gini(X[:,0], y, t)\n",
        "        if wg is None: continue\n",
        "        gain = parent - wg\n",
        "        if gain > best_gain:\n",
        "            best_gain, best_feat, best_t = gain, 0, t\n",
        "    return best_feat, best_t\n",
        "\n",
        "def build_tree(X, y, depth=0, max_depth=15):\n",
        "    if len(np.unique(y)) == 1 or depth == max_depth:\n",
        "        vals, cnts = np.unique(y, return_counts=True)\n",
        "        return {'leaf': True, 'pred': vals[np.argmax(cnts)]}\n",
        "    feat, thresh = find_best_split(X, y)\n",
        "    if feat is None:\n",
        "        vals, cnts = np.unique(y, return_counts=True)\n",
        "        return {'leaf': True, 'pred': vals[np.argmax(cnts)]}\n",
        "    mask = X[:, feat] <= thresh\n",
        "    left  = build_tree(X[mask],  y[mask],  depth+1, max_depth)\n",
        "    right = build_tree(X[~mask], y[~mask], depth+1, max_depth)\n",
        "    return {'leaf': False, 'feat': feat, 'thresh': thresh, 'left': left, 'right': right}\n",
        "\n",
        "def predict(tree, x):\n",
        "    if tree['leaf']:\n",
        "        return tree['pred']\n",
        "    if x[tree['feat']] <= tree['thresh']:\n",
        "        return predict(tree['left'], x)\n",
        "    else:\n",
        "        return predict(tree['right'], x)\n",
        "\n",
        "# --- 5. Train 전체로 트리 학습 ---\n",
        "tree = build_tree(z_train, y_train, max_depth=15)\n",
        "\n",
        "# --- 6. Test1 (Train) 예측 & 평가 ---\n",
        "preds_train = np.array([predict(tree, x) for x in z_train])\n",
        "\n",
        "# Accuracy\n",
        "acc_train = np.mean(preds_train == y_train) * 100\n",
        "\n",
        "# F1-score 수동 계산\n",
        "tp = np.sum((preds_train == 1) & (y_train == 1))\n",
        "fp = np.sum((preds_train == 1) & (y_train == 0))\n",
        "fn = np.sum((preds_train == 0) & (y_train == 1))\n",
        "precision = tp / (tp + fp) if (tp + fp) > 0 else 0.0\n",
        "recall    = tp / (tp + fn) if (tp + fn) > 0 else 0.0\n",
        "f1_train  = 2 * precision * recall / (precision + recall) if (precision + recall) > 0 else 0.0\n",
        "f1_train *= 100\n",
        "\n",
        "print(f\"Test1 Accuracy: {acc_train:.2f}%\")\n",
        "print(f\"Test1 F1-score : {f1_train:.2f}%\")\n",
        "\n",
        "# --- 7. Test2 예측 & 제출 파일 생성 ---\n",
        "preds_test = np.array([predict(tree, x) for x in z_test])\n",
        "submission_df = pd.DataFrame({\n",
        "    'PassengerId': passenger_ids,\n",
        "    'Survived':    preds_test\n",
        "})\n",
        "submission_df.to_csv('submission_dt_fld.csv', index=False)\n",
        "print(\"Saved: submission_dt_fld.csv\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "V8LNyL4qLy0i",
        "outputId": "b80ad86e-9a70-4693-b20a-44c12896f92d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Test1 Accuracy: 92.14%\n",
            "Test1 F1-score : 89.16%\n",
            "Saved: submission_dt_fld.csv\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "\n",
        "# --- 1. 데이터 로드 & 스케일링 ---\n",
        "train_df = pd.read_csv('process1_result.csv')\n",
        "test_df  = pd.read_csv('process2_result.csv')\n",
        "\n",
        "features      = ['Sex','SibSp','Parch','Embarked','TicketNumeric']\n",
        "X_train       = train_df[features].values   # (n_train, d)\n",
        "y_train       = train_df['Survived'].values # (n_train,)\n",
        "X_test        = test_df[features].values    # (n_test,  d)\n",
        "passenger_ids = test_df['PassengerId'].values\n",
        "\n",
        "# 1) zero-centering & unit-variance 스케일링\n",
        "means = X_train.mean(axis=0)\n",
        "stds  = X_train.std(axis=0)\n",
        "stds[stds == 0] = 1.0\n",
        "Z_train = (X_train - means) / stds         # (n_train, d)\n",
        "Z_test  = (X_test  - means) / stds         # (n_test,  d)\n",
        "\n",
        "# --- 2. FLD 축(w) 계산 ---\n",
        "# 2.1 클래스별 평균\n",
        "mu0 = Z_train[y_train == 0].mean(axis=0)   # (d,)\n",
        "mu1 = Z_train[y_train == 1].mean(axis=0)   # (d,)\n",
        "\n",
        "# 2.2 클래스 내 산포 행렬 SW\n",
        "d   = Z_train.shape[1]\n",
        "SW  = np.zeros((d, d))\n",
        "for z, y in zip(Z_train, y_train):\n",
        "    diff = (z - (mu1 if y == 1 else mu0)).reshape(-1,1)\n",
        "    SW += diff.dot(diff.T)\n",
        "\n",
        "# 2.3 판별 벡터 w ∝ SW^{-1}(μ1−μ0)\n",
        "w_fld = np.linalg.inv(SW).dot(mu1 - mu0)\n",
        "w_fld /= np.linalg.norm(w_fld)            # 정규화\n",
        "\n",
        "# --- 3. 1D 투사 ---\n",
        "z_train = Z_train.dot(w_fld).reshape(-1,1)  # (n_train, 1)\n",
        "z_test  = Z_test.dot(w_fld).reshape(-1,1)   # (n_test, 1)\n",
        "\n",
        "# --- 4. 1D KNN 예측 함수 정의 ---\n",
        "def knn_predict_1d(train_z, train_y, query_z, k=20):\n",
        "    \"\"\"1D 거리 기반 KNN 예측\"\"\"\n",
        "    preds = []\n",
        "    for q in query_z[:,0]:\n",
        "        # 거리 계산\n",
        "        dists = np.abs(train_z[:,0] - q)\n",
        "        # 최근접 k개 인덱스\n",
        "        idxs = np.argpartition(dists, k)[:k]\n",
        "        # 다수결 투표\n",
        "        counts = np.bincount(train_y[idxs])\n",
        "        preds.append(np.argmax(counts))\n",
        "    return np.array(preds)\n",
        "\n",
        "# --- 5. Test1 (Train) 예측 & 평가 ---\n",
        "k_neighbors = 20\n",
        "preds_train = knn_predict_1d(z_train, y_train, z_train, k=k_neighbors)\n",
        "\n",
        "# Accuracy\n",
        "acc_train = np.mean(preds_train == y_train) * 100\n",
        "\n",
        "# F1-score (binary 수동 계산)\n",
        "tp = np.sum((preds_train == 1) & (y_train == 1))\n",
        "fp = np.sum((preds_train == 1) & (y_train == 0))\n",
        "fn = np.sum((preds_train == 0) & (y_train == 1))\n",
        "precision = tp / (tp + fp) if (tp + fp) > 0 else 0.0\n",
        "recall    = tp / (tp + fn) if (tp + fn) > 0 else 0.0\n",
        "f1_train  = 2 * precision * recall / (precision + recall) if (precision + recall) > 0 else 0.0\n",
        "f1_train *= 100\n",
        "\n",
        "print(f\"Test1 Accuracy: {acc_train:.2f}%\")\n",
        "print(f\"Test1 F1-score : {f1_train:.2f}%\")\n",
        "\n",
        "# --- 6. Test2 예측 & 제출 파일 생성 ---\n",
        "preds_test = knn_predict_1d(z_train, y_train, z_test, k=k_neighbors)\n",
        "\n",
        "submission_df = pd.DataFrame({\n",
        "    'PassengerId': passenger_ids,\n",
        "    'Survived':    preds_test\n",
        "})\n",
        "submission_df.to_csv('submission_knn_fld.csv', index=False)\n",
        "print(\"Saved: submission_knn_fld.csv\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fDHWER_aMLJD",
        "outputId": "7b923234-68a1-49d4-d160-3c50b8f9ae18"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Test1 Accuracy: 79.46%\n",
            "Test1 F1-score : 70.72%\n",
            "Saved: submission_knn_fld.csv\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "[ MLP ] - 다층 퍼셉트론, full feature.\n",
        "\n",
        "> hidden layer = 1, newron = 16, 32, 64, 128 test Code\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "EFwTZDYMT98u"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn.neural_network import MLPClassifier\n",
        "from sklearn.metrics import accuracy_score\n",
        "\n",
        "# --- 1. 데이터 로드 & full feature 추출 ---\n",
        "df = pd.read_csv('process1_result.csv')\n",
        "\n",
        "# full feature로 사용할 피처 이름\n",
        "features = ['Sex', 'SibSp', 'Parch', 'Embarked', 'TicketNumeric']\n",
        "\n",
        "# 특성 행렬 X_full, 라벨 벡터 y_full\n",
        "X_full = df[features].values    # shape: (n_samples, 5)\n",
        "y_full = df['Survived'].values  # shape: (n_samples,)\n",
        "\n",
        "# --- 2. 데이터 셔플 & Train/Test1 분할 (80:20) ---\n",
        "np.random.seed(42)\n",
        "indices = np.arange(X_full.shape[0])\n",
        "np.random.shuffle(indices)\n",
        "\n",
        "# 80%를 train, 20%를 test1로 분할\n",
        "split_idx = int(0.8 * len(indices))\n",
        "train_idx = indices[:split_idx]\n",
        "test1_idx = indices[split_idx:]\n",
        "\n",
        "X_train_full = X_full[train_idx]\n",
        "y_train_full = y_full[train_idx]\n",
        "X_test1_full = X_full[test1_idx]\n",
        "y_test1_full = y_full[test1_idx]\n",
        "\n",
        "# --- 3. Zero-centering + Unit-variance 스케일링 (Train 기반) ---\n",
        "means = X_train_full.mean(axis=0)     # (5,)\n",
        "stds  = X_train_full.std(axis=0)      # (5,)\n",
        "stds[stds == 0] = 1.0                 # 혹시 표준편차가 0인 열 방지\n",
        "\n",
        "X_train_full_scaled = (X_train_full - means) / stds\n",
        "X_test1_full_scaled = (X_test1_full - means) / stds\n",
        "\n",
        "# --- 4. 은닉층 1개일 때 뉴런 수 목록 & 정확도 저장용 리스트 ---\n",
        "hidden_sizes = [16, 32, 64, 128]\n",
        "results = []\n",
        "\n",
        "for h in hidden_sizes:\n",
        "    # MLPClassifier 정의\n",
        "    mlp = MLPClassifier(\n",
        "        hidden_layer_sizes=(h,),     # 은닉층 1개, 뉴런 = h\n",
        "        activation='relu',           # ReLU 활성화\n",
        "        solver='adam',               # Adam 옵티마이저\n",
        "        learning_rate='constant',    # 학습률 고정\n",
        "        learning_rate_init=0.001,    # 초기 학습률 = 0.001 (필요시 변경)\n",
        "        alpha=1e-4,                  # L2 정규화 계수\n",
        "        batch_size=32,               # 배치 크기\n",
        "        max_iter=200,                # 최대 에포크\n",
        "        shuffle=True,                # 에포크마다 데이터 셔플\n",
        "        random_state=42,\n",
        "        early_stopping=False         # (원한다면 True로 켜도 됨)\n",
        "    )\n",
        "\n",
        "    # 4-1. Train 데이터 학습\n",
        "    mlp.fit(X_train_full_scaled, y_train_full)\n",
        "\n",
        "    # 4-2. Test1 데이터 예측\n",
        "    preds = mlp.predict(X_test1_full_scaled)\n",
        "\n",
        "    # 4-3. 정확도 계산\n",
        "    acc = accuracy_score(y_test1_full, preds)\n",
        "\n",
        "    # 결과 저장\n",
        "    results.append((h, acc))\n",
        "\n",
        "    print(f\"hidden_layer_sizes=({h},)  →  Test1 Accuracy = {acc*100:.2f}%\")\n",
        "\n",
        "# --- 5. 결과 정리 ---\n",
        "print(\"\\n=== 최종 결과 요약 ===\")\n",
        "for h, acc in results:\n",
        "    print(f\"은닉 노드 {h:3d}개  →  Test1 Accuracy = {acc*100:.2f}%\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UV_tIAdFUBdr",
        "outputId": "f296aeb2-e466-48ad-cc9c-9f771c9c3989"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "hidden_layer_sizes=(16,)  →  Test1 Accuracy = 79.89%\n",
            "hidden_layer_sizes=(32,)  →  Test1 Accuracy = 80.45%\n",
            "hidden_layer_sizes=(64,)  →  Test1 Accuracy = 81.01%\n",
            "hidden_layer_sizes=(128,)  →  Test1 Accuracy = 80.45%\n",
            "\n",
            "=== 최종 결과 요약 ===\n",
            "은닉 노드  16개  →  Test1 Accuracy = 79.89%\n",
            "은닉 노드  32개  →  Test1 Accuracy = 80.45%\n",
            "은닉 노드  64개  →  Test1 Accuracy = 81.01%\n",
            "은닉 노드 128개  →  Test1 Accuracy = 80.45%\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn.neural_network import MLPClassifier\n",
        "from sklearn.metrics import accuracy_score\n",
        "\n",
        "# --- 1. 데이터 로드 & full feature 추출 ---\n",
        "df = pd.read_csv('process1_result.csv')\n",
        "\n",
        "features = ['Sex', 'SibSp', 'Parch', 'Embarked', 'TicketNumeric']\n",
        "X_full = df[features].values    # (n_samples, 5)\n",
        "y_full = df['Survived'].values  # (n_samples,)\n",
        "\n",
        "# --- 2. 데이터 셔플 & Train/Test1 분할 (80:20) ---\n",
        "np.random.seed(42)\n",
        "indices = np.arange(X_full.shape[0])\n",
        "np.random.shuffle(indices)\n",
        "\n",
        "split_idx = int(0.8 * len(indices))\n",
        "train_idx = indices[:split_idx]\n",
        "test1_idx = indices[split_idx:]\n",
        "\n",
        "X_train_full = X_full[train_idx]\n",
        "y_train_full = y_full[train_idx]\n",
        "X_test1_full = X_full[test1_idx]\n",
        "y_test1_full = y_full[test1_idx]\n",
        "\n",
        "# --- 3. Zero-centering + Unit-variance 스케일링 (Train 기준) ---\n",
        "means = X_train_full.mean(axis=0)    # (5,)\n",
        "stds  = X_train_full.std(axis=0)     # (5,)\n",
        "stds[stds == 0] = 1.0\n",
        "\n",
        "X_train_full_scaled = (X_train_full - means) / stds\n",
        "X_test1_full_scaled = (X_test1_full - means) / stds\n",
        "\n",
        "# --- 4. 은닉층 2개일 때 노드 수 조합 & 정확도 저장용 리스트 ---\n",
        "# 첫 번째 은닉층 후보 노드 수\n",
        "candidates = [16, 32, 64, 128]\n",
        "\n",
        "results = []\n",
        "\n",
        "for h1 in candidates:\n",
        "    for h2 in candidates:\n",
        "        # 두 번째 층 노드 수는 첫 층보다 작거나 같은 경우만 시도\n",
        "        if h2 > h1:\n",
        "            continue\n",
        "\n",
        "        mlp = MLPClassifier(\n",
        "            hidden_layer_sizes=(h1, h2),  # 은닉층 2개: (h1, h2)\n",
        "            activation='relu',\n",
        "            solver='adam',\n",
        "            learning_rate='constant',\n",
        "            learning_rate_init=0.001,\n",
        "            alpha=1e-4,\n",
        "            batch_size=32,\n",
        "            max_iter=200,\n",
        "            shuffle=True,\n",
        "            random_state=42,\n",
        "            early_stopping=False\n",
        "        )\n",
        "\n",
        "        # 4-1. Train 학습\n",
        "        mlp.fit(X_train_full_scaled, y_train_full)\n",
        "\n",
        "        # 4-2. Test1 예측\n",
        "        preds = mlp.predict(X_test1_full_scaled)\n",
        "\n",
        "        # 4-3. 정확도 계산\n",
        "        acc = accuracy_score(y_test1_full, preds)\n",
        "\n",
        "        results.append((h1, h2, acc))\n",
        "        print(f\"hidden_layer_sizes=({h1},{h2})  →  Test1 Accuracy = {acc*100:.2f}%\")\n",
        "\n",
        "# --- 5. 결과 정리 및 상위 5개 출력 ---\n",
        "results_sorted = sorted(results, key=lambda x: x[2], reverse=True)\n",
        "\n",
        "print(\"\\n=== 상위 5개 조합 (h1, h2, Accuracy) ===\")\n",
        "for h1, h2, acc in results_sorted[:5]:\n",
        "    print(f\"({h1}, {h2})  →  Test1 Accuracy = {acc*100:.2f}%\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OUEWoC2JVJyp",
        "outputId": "c339615c-3807-4d56-87f1-3ca03201d6e6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "hidden_layer_sizes=(16,16)  →  Test1 Accuracy = 79.33%\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "hidden_layer_sizes=(32,16)  →  Test1 Accuracy = 79.89%\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "hidden_layer_sizes=(32,32)  →  Test1 Accuracy = 78.21%\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "hidden_layer_sizes=(64,16)  →  Test1 Accuracy = 79.33%\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "hidden_layer_sizes=(64,32)  →  Test1 Accuracy = 79.89%\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "hidden_layer_sizes=(64,64)  →  Test1 Accuracy = 78.21%\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "hidden_layer_sizes=(128,16)  →  Test1 Accuracy = 79.89%\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "hidden_layer_sizes=(128,32)  →  Test1 Accuracy = 79.33%\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "hidden_layer_sizes=(128,64)  →  Test1 Accuracy = 80.45%\n",
            "hidden_layer_sizes=(128,128)  →  Test1 Accuracy = 79.33%\n",
            "\n",
            "=== 상위 5개 조합 (h1, h2, Accuracy) ===\n",
            "(128, 64)  →  Test1 Accuracy = 80.45%\n",
            "(32, 16)  →  Test1 Accuracy = 79.89%\n",
            "(64, 32)  →  Test1 Accuracy = 79.89%\n",
            "(128, 16)  →  Test1 Accuracy = 79.89%\n",
            "(16, 16)  →  Test1 Accuracy = 79.33%\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn.neural_network import MLPClassifier\n",
        "from sklearn.metrics import accuracy_score\n",
        "\n",
        "# --- 1. 데이터 로드 & full feature 추출 ---\n",
        "df = pd.read_csv('process1_result.csv')\n",
        "\n",
        "features = ['Sex', 'SibSp', 'Parch', 'Embarked', 'TicketNumeric']\n",
        "X_full = df[features].values    # (n_samples, 5)\n",
        "y_full = df['Survived'].values  # (n_samples,)\n",
        "\n",
        "# --- 2. 데이터 셔플 & Train/Test1 분할 (80:20) ---\n",
        "np.random.seed(42)\n",
        "idx = np.arange(X_full.shape[0])\n",
        "np.random.shuffle(idx)\n",
        "\n",
        "split = int(0.8 * len(idx))\n",
        "train_idx = idx[:split]\n",
        "test1_idx = idx[split:]\n",
        "\n",
        "X_train = X_full[train_idx]\n",
        "y_train = y_full[train_idx]\n",
        "X_test1 = X_full[test1_idx]\n",
        "y_test1 = y_full[test1_idx]\n",
        "\n",
        "# --- 3. Zero‐centering & Unit‐variance 스케일링 (Train 기준) ---\n",
        "means = X_train.mean(axis=0)\n",
        "stds  = X_train.std(axis=0)\n",
        "stds[stds == 0] = 1.0\n",
        "\n",
        "X_train_scaled = (X_train - means) / stds\n",
        "X_test1_scaled = (X_test1 - means) / stds\n",
        "\n",
        "# --- 4. 은닉층 3개짜리 MLP: (h1 ≥ h2 ≥ h3) 조합 실험 ---\n",
        "candidates = [16, 32, 64, 128]\n",
        "results = []\n",
        "\n",
        "for h1 in candidates:\n",
        "    for h2 in candidates:\n",
        "        if h2 > h1:\n",
        "            continue\n",
        "        for h3 in candidates:\n",
        "            if h3 > h2:\n",
        "                continue\n",
        "\n",
        "            mlp = MLPClassifier(\n",
        "                hidden_layer_sizes=(h1, h2, h3),\n",
        "                activation='relu',\n",
        "                solver='adam',\n",
        "                learning_rate='constant',\n",
        "                learning_rate_init=0.001,\n",
        "                alpha=1e-4,\n",
        "                batch_size=32,\n",
        "                max_iter=200,\n",
        "                shuffle=True,\n",
        "                random_state=42,\n",
        "                early_stopping=False\n",
        "            )\n",
        "\n",
        "            # 4-1. Train 학습\n",
        "            mlp.fit(X_train_scaled, y_train)\n",
        "\n",
        "            # 4-2. Test1 예측\n",
        "            preds = mlp.predict(X_test1_scaled)\n",
        "\n",
        "            # 4-3. 정확도 계산\n",
        "            acc = accuracy_score(y_test1, preds)\n",
        "            results.append((h1, h2, h3, acc))\n",
        "\n",
        "            print(f\"hidden_layer_sizes=({h1}, {h2}, {h3})  →  Test1 Accuracy = {acc*100:.2f}%\")\n",
        "\n",
        "# --- 5. 결과 정리: 상위 5개 조합 출력 ---\n",
        "results_sorted = sorted(results, key=lambda x: x[3], reverse=True)\n",
        "\n",
        "print(\"\\n=== 상위 5개 조합 (h1, h2, h3, Accuracy) ===\")\n",
        "for h1, h2, h3, acc in results_sorted[:5]:\n",
        "    print(f\"({h1}, {h2}, {h3})  →  Test1 Accuracy = {acc*100:.2f}%\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3QXaAUxlV_Y7",
        "outputId": "ced03036-1d6f-4eca-ae8c-2f4bfa50b47e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "hidden_layer_sizes=(16, 16, 16)  →  Test1 Accuracy = 80.45%\n",
            "hidden_layer_sizes=(32, 16, 16)  →  Test1 Accuracy = 79.33%\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "hidden_layer_sizes=(32, 32, 16)  →  Test1 Accuracy = 79.33%\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "hidden_layer_sizes=(32, 32, 32)  →  Test1 Accuracy = 78.77%\n",
            "hidden_layer_sizes=(64, 16, 16)  →  Test1 Accuracy = 80.45%\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "hidden_layer_sizes=(64, 32, 16)  →  Test1 Accuracy = 79.89%\n",
            "hidden_layer_sizes=(64, 32, 32)  →  Test1 Accuracy = 79.33%\n",
            "hidden_layer_sizes=(64, 64, 16)  →  Test1 Accuracy = 78.77%\n",
            "hidden_layer_sizes=(64, 64, 32)  →  Test1 Accuracy = 79.33%\n",
            "hidden_layer_sizes=(64, 64, 64)  →  Test1 Accuracy = 79.89%\n",
            "hidden_layer_sizes=(128, 16, 16)  →  Test1 Accuracy = 77.65%\n",
            "hidden_layer_sizes=(128, 32, 16)  →  Test1 Accuracy = 80.45%\n",
            "hidden_layer_sizes=(128, 32, 32)  →  Test1 Accuracy = 79.33%\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "hidden_layer_sizes=(128, 64, 16)  →  Test1 Accuracy = 78.77%\n",
            "hidden_layer_sizes=(128, 64, 32)  →  Test1 Accuracy = 79.89%\n",
            "hidden_layer_sizes=(128, 64, 64)  →  Test1 Accuracy = 79.89%\n",
            "hidden_layer_sizes=(128, 128, 16)  →  Test1 Accuracy = 78.77%\n",
            "hidden_layer_sizes=(128, 128, 32)  →  Test1 Accuracy = 80.45%\n",
            "hidden_layer_sizes=(128, 128, 64)  →  Test1 Accuracy = 79.33%\n",
            "hidden_layer_sizes=(128, 128, 128)  →  Test1 Accuracy = 79.33%\n",
            "\n",
            "=== 상위 5개 조합 (h1, h2, h3, Accuracy) ===\n",
            "(16, 16, 16)  →  Test1 Accuracy = 80.45%\n",
            "(64, 16, 16)  →  Test1 Accuracy = 80.45%\n",
            "(128, 32, 16)  →  Test1 Accuracy = 80.45%\n",
            "(128, 128, 32)  →  Test1 Accuracy = 80.45%\n",
            "(64, 32, 16)  →  Test1 Accuracy = 79.89%\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn.neural_network import MLPClassifier\n",
        "from sklearn.metrics import accuracy_score\n",
        "\n",
        "# --- 1. 데이터 로드 & full feature 추출 ---\n",
        "df = pd.read_csv('process1_result.csv')\n",
        "features = ['Sex', 'SibSp', 'Parch', 'Embarked', 'TicketNumeric']\n",
        "X = df[features].values    # (n_samples, 5)\n",
        "y = df['Survived'].values  # (n_samples,)\n",
        "\n",
        "# --- 2. 데이터 셔플 & Train/Test1 분할 (80:20) ---\n",
        "np.random.seed(42)\n",
        "idx = np.arange(len(X))\n",
        "np.random.shuffle(idx)\n",
        "\n",
        "split = int(0.8 * len(idx))\n",
        "train_idx = idx[:split]\n",
        "test1_idx = idx[split:]\n",
        "\n",
        "X_train = X[train_idx]\n",
        "y_train = y[train_idx]\n",
        "X_test1 = X[test1_idx]\n",
        "y_test1 = y[test1_idx]\n",
        "\n",
        "# --- 3. Zero‐centering & Unit‐variance 스케일링 (Train 기준) ---\n",
        "means = X_train.mean(axis=0)\n",
        "stds  = X_train.std(axis=0)\n",
        "stds[stds == 0] = 1.0\n",
        "\n",
        "X_train_scaled = (X_train - means) / stds\n",
        "X_test1_scaled = (X_test1 - means) / stds\n",
        "\n",
        "# --- 4. 은닉층 1개, 노드 수 27~37 탐색 & Test1 Accuracy 계산 ---\n",
        "results = []\n",
        "for h in range(27, 38):  # 27, 28, ..., 37\n",
        "    mlp = MLPClassifier(\n",
        "        hidden_layer_sizes=(h,),\n",
        "        activation='relu',\n",
        "        solver='adam',\n",
        "        learning_rate='constant',\n",
        "        learning_rate_init=0.001,\n",
        "        alpha=1e-4,\n",
        "        batch_size=32,\n",
        "        max_iter=200,\n",
        "        shuffle=True,\n",
        "        random_state=42\n",
        "    )\n",
        "    mlp.fit(X_train_scaled, y_train)\n",
        "    preds = mlp.predict(X_test1_scaled)\n",
        "    acc = accuracy_score(y_test1, preds)\n",
        "    results.append((h, acc))\n",
        "    print(f\"hidden_layer_sizes=({h},)  →  Test1 Accuracy = {acc*100:.2f}%\")\n",
        "\n",
        "# --- 5. 결과 정리 ---\n",
        "print(\"\\n=== 탐색 결과 요약 ===\")\n",
        "for h, acc in results:\n",
        "    print(f\"노드 {h:2d}개  →  Test1 Accuracy = {acc*100:.2f}%\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4Qirrxo7XTl_",
        "outputId": "6ef361a8-7123-4254-b93f-cb76588d4de3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "hidden_layer_sizes=(27,)  →  Test1 Accuracy = 80.45%\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "hidden_layer_sizes=(28,)  →  Test1 Accuracy = 81.01%\n",
            "hidden_layer_sizes=(29,)  →  Test1 Accuracy = 79.33%\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "hidden_layer_sizes=(30,)  →  Test1 Accuracy = 81.56%\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "hidden_layer_sizes=(31,)  →  Test1 Accuracy = 80.45%\n",
            "hidden_layer_sizes=(32,)  →  Test1 Accuracy = 80.45%\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "hidden_layer_sizes=(33,)  →  Test1 Accuracy = 81.56%\n",
            "hidden_layer_sizes=(34,)  →  Test1 Accuracy = 81.01%\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "hidden_layer_sizes=(35,)  →  Test1 Accuracy = 81.01%\n",
            "hidden_layer_sizes=(36,)  →  Test1 Accuracy = 81.01%\n",
            "hidden_layer_sizes=(37,)  →  Test1 Accuracy = 81.01%\n",
            "\n",
            "=== 탐색 결과 요약 ===\n",
            "노드 27개  →  Test1 Accuracy = 80.45%\n",
            "노드 28개  →  Test1 Accuracy = 81.01%\n",
            "노드 29개  →  Test1 Accuracy = 79.33%\n",
            "노드 30개  →  Test1 Accuracy = 81.56%\n",
            "노드 31개  →  Test1 Accuracy = 80.45%\n",
            "노드 32개  →  Test1 Accuracy = 80.45%\n",
            "노드 33개  →  Test1 Accuracy = 81.56%\n",
            "노드 34개  →  Test1 Accuracy = 81.01%\n",
            "노드 35개  →  Test1 Accuracy = 81.01%\n",
            "노드 36개  →  Test1 Accuracy = 81.01%\n",
            "노드 37개  →  Test1 Accuracy = 81.01%\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn.neural_network import MLPClassifier\n",
        "from sklearn.metrics import accuracy_score\n",
        "\n",
        "# --- 1. 데이터 로드 & full feature 추출 ---\n",
        "df = pd.read_csv('process1_result.csv')\n",
        "features = ['Sex', 'SibSp', 'Parch', 'Embarked', 'TicketNumeric']\n",
        "X = df[features].values    # (n_samples, 5)\n",
        "y = df['Survived'].values  # (n_samples,)\n",
        "\n",
        "# --- 2. 데이터 셔플 & Train/Test1 분할 (80:20) ---\n",
        "np.random.seed(42)\n",
        "idx = np.arange(len(X))\n",
        "np.random.shuffle(idx)\n",
        "\n",
        "split = int(0.8 * len(idx))\n",
        "train_idx = idx[:split]\n",
        "test1_idx = idx[split:]\n",
        "\n",
        "X_train = X[train_idx]\n",
        "y_train = y[train_idx]\n",
        "X_test1 = X[test1_idx]\n",
        "y_test1 = y[test1_idx]\n",
        "\n",
        "# --- 3. Zero‐centering & Unit‐variance 스케일링 (Train 기준) ---\n",
        "means = X_train.mean(axis=0)\n",
        "stds  = X_train.std(axis=0)\n",
        "stds[stds == 0] = 1.0\n",
        "\n",
        "X_train_s = (X_train - means) / stds\n",
        "X_test1_s = (X_test1 - means) / stds\n",
        "\n",
        "# --- 4. 학습률(learning_rate_init) 후보 리스트 설정 ---\n",
        "learning_rates = [0.0001, 0.0005, 0.001, 0.005, 0.01]\n",
        "\n",
        "# 은닉층 1개, 노드 30 고정\n",
        "hidden = (30,)\n",
        "\n",
        "results = []\n",
        "for lr in learning_rates:\n",
        "    mlp = MLPClassifier(\n",
        "        hidden_layer_sizes=(h,),\n",
        "        activation='relu',\n",
        "        solver='adam',\n",
        "        learning_rate='constant',\n",
        "        learning_rate_init=lr,\n",
        "        alpha=0.0001,\n",
        "        batch_size=32,\n",
        "        max_iter=1000,\n",
        "        shuffle=True,\n",
        "        random_state=42\n",
        "    )\n",
        "    # Train 학습\n",
        "    mlp.fit(X_train_s, y_train)\n",
        "    # Test1 예측\n",
        "    preds1 = mlp.predict(X_test1_s)\n",
        "    acc1 = accuracy_score(y_test1, preds1)\n",
        "    results.append((lr, acc1))\n",
        "    print(f\"learning_rate_init={lr:.4f}  →  Test1 Accuracy = {acc1*100:.2f}%\")\n",
        "\n",
        "# --- 5. 결과 요약 ---\n",
        "print(\"\\n=== 학습률별 Test1 Accuracy 요약 ===\")\n",
        "for lr, acc in results:\n",
        "    print(f\"lr={lr:.4f}  →  {acc*100:.2f}%\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DpJojiKtZOx6",
        "outputId": "2b654726-4158-40ae-e889-bc36fd7832b2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "learning_rate_init=0.0001  →  Test1 Accuracy = 81.01%\n",
            "learning_rate_init=0.0005  →  Test1 Accuracy = 81.01%\n",
            "learning_rate_init=0.0010  →  Test1 Accuracy = 81.01%\n",
            "learning_rate_init=0.0050  →  Test1 Accuracy = 81.56%\n",
            "learning_rate_init=0.0100  →  Test1 Accuracy = 81.56%\n",
            "\n",
            "=== 학습률별 Test1 Accuracy 요약 ===\n",
            "lr=0.0001  →  81.01%\n",
            "lr=0.0005  →  81.01%\n",
            "lr=0.0010  →  81.01%\n",
            "lr=0.0050  →  81.56%\n",
            "lr=0.0100  →  81.56%\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn.neural_network import MLPClassifier\n",
        "from sklearn.metrics import accuracy_score\n",
        "\n",
        "# --- 1. 데이터 로드 & full feature 추출 ---\n",
        "df = pd.read_csv('process1_result.csv')\n",
        "features = ['Sex', 'SibSp', 'Parch', 'Embarked', 'TicketNumeric']\n",
        "X = df[features].values    # (n_samples, 5)\n",
        "y = df['Survived'].values  # (n_samples,)\n",
        "\n",
        "# --- 2. 데이터 셔플 & Train/Test1 분할 (80:20) ---\n",
        "np.random.seed(42)\n",
        "idx = np.arange(len(X))\n",
        "np.random.shuffle(idx)\n",
        "\n",
        "split = int(0.8 * len(idx))\n",
        "train_idx = idx[:split]\n",
        "test1_idx = idx[split:]\n",
        "\n",
        "X_train = X[train_idx]\n",
        "y_train = y[train_idx]\n",
        "X_test1 = X[test1_idx]\n",
        "y_test1 = y[test1_idx]\n",
        "\n",
        "# --- 3. Zero‐centering & Unit‐variance 스케일링 (Train 기준) ---\n",
        "means = X_train.mean(axis=0)\n",
        "stds  = X_train.std(axis=0)\n",
        "stds[stds == 0] = 1.0\n",
        "\n",
        "X_train_s = (X_train - means) / stds\n",
        "X_test1_s = (X_test1 - means) / stds\n",
        "\n",
        "# --- 4. alpha(정규화 계수) 후보 리스트 설정 ---\n",
        "alphas = [0.0001]\n",
        "\n",
        "# 은닉층 1개, 노드 30 고정, learning_rate_init=0.001 고정\n",
        "hidden = (30,)\n",
        "lr_init = 0.005\n",
        "\n",
        "results = []\n",
        "for alpha in alphas:\n",
        "    mlp = MLPClassifier(\n",
        "        hidden_layer_sizes=hidden,\n",
        "        activation='relu',\n",
        "        solver='adam',\n",
        "        learning_rate='constant',\n",
        "        learning_rate_init=lr_init,\n",
        "        alpha=alpha,\n",
        "        batch_size=32,\n",
        "        max_iter=300,\n",
        "        shuffle=True,\n",
        "        random_state=42,\n",
        "        early_stopping=True,\n",
        "        validation_fraction=0.1,\n",
        "        n_iter_no_change=10\n",
        "    )\n",
        "    # Train 학습\n",
        "    mlp.fit(X_train_s, y_train)\n",
        "    # Test1 예측\n",
        "    preds1 = mlp.predict(X_test1_s)\n",
        "    acc1 = accuracy_score(y_test1, preds1)\n",
        "    results.append((alpha, acc1))\n",
        "    print(f\"alpha={alpha:.5f}  →  Test1 Accuracy = {acc1*100:.2f}%\")\n",
        "\n",
        "# --- 5. 결과 요약 ---\n",
        "print(\"\\n=== alpha별 Test1 Accuracy 요약 ===\")\n",
        "for alpha, acc in results:\n",
        "    print(f\"alpha={alpha:.5f}  →  {acc*100:.2f}%\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1nbbUt8IbSfG",
        "outputId": "c3b99c8d-19e0-4b27-9cf9-02bf72e5b9f8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "alpha=0.00010  →  Test1 Accuracy = 81.01%\n",
            "\n",
            "=== alpha별 Test1 Accuracy 요약 ===\n",
            "alpha=0.00010  →  81.01%\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "은닉층\t: 1\n",
        "노드\t: 32\n",
        "학습률\t: 0.005\n",
        "Alpha\t: 0.0001\n",
        "Maxiter: 300\n",
        "\n"
      ],
      "metadata": {
        "id": "l8Rh-ZiReeaY"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn.neural_network import MLPClassifier\n",
        "from sklearn.metrics import accuracy_score\n",
        "\n",
        "# --- 1. 데이터 로드 & full feature 추출 ---\n",
        "df1 = pd.read_csv('process1_result.csv')   # Train + Test1\n",
        "df2 = pd.read_csv('process2_result.csv')   # Test2 (제출용)\n",
        "\n",
        "features = ['Sex', 'SibSp', 'Parch', 'Embarked', 'TicketNumeric']\n",
        "X1 = df1[features].values    # (n_samples, 5)\n",
        "y1 = df1['Survived'].values  # (n_samples,)\n",
        "X2 = df2[features].values    # (n_test2, 5)\n",
        "ids2 = df2['PassengerId'].values  # Test2 제출용 ID\n",
        "\n",
        "# --- 2. Train/Test1 분할 (80:20) ---\n",
        "np.random.seed(42)\n",
        "idx_all = np.arange(len(X1))\n",
        "np.random.shuffle(idx_all)\n",
        "\n",
        "split = int(0.8 * len(idx_all))\n",
        "train_idx = idx_all[:split]\n",
        "test1_idx = idx_all[split:]\n",
        "\n",
        "X_train = X1[train_idx]\n",
        "y_train = y1[train_idx]\n",
        "X_test1 = X1[test1_idx]\n",
        "y_test1 = y1[test1_idx]\n",
        "\n",
        "# --- 3. Zero‐centering & Unit‐variance 스케일링 (Train 기준) ---\n",
        "means = X_train.mean(axis=0)\n",
        "stds  = X_train.std(axis=0)\n",
        "stds[stds == 0] = 1.0\n",
        "\n",
        "X_train_s = (X_train - means) / stds\n",
        "X_test1_s = (X_test1 - means) / stds\n",
        "X2_s      = (X2 - means) / stds\n",
        "\n",
        "# --- 4. MLP 모델 정의 (은닉층=1, 노드=32; lr=0.005; alpha=0.0001; max_iter=300) ---\n",
        "mlp = MLPClassifier(\n",
        "    hidden_layer_sizes=(32,),\n",
        "    activation='relu',\n",
        "    solver='adam',\n",
        "    learning_rate='constant',\n",
        "    learning_rate_init=0.005,\n",
        "    alpha=1e-4,\n",
        "    batch_size=32,\n",
        "    max_iter=300,\n",
        "    shuffle=True,\n",
        "    random_state=42,\n",
        "    early_stopping=True,\n",
        "    validation_fraction=0.1,\n",
        "    n_iter_no_change=10\n",
        ")\n",
        "\n",
        "# --- 5. Train 학습 ---\n",
        "mlp.fit(X_train_s, y_train)\n",
        "\n",
        "# --- 6. Test1 예측 & 정확도 출력 ---\n",
        "preds_test1 = mlp.predict(X_test1_s)\n",
        "acc_test1 = accuracy_score(y_test1, preds_test1)\n",
        "print(f\"Full feature MLP → Test1 Accuracy: {acc_test1*100:.2f}%\")\n",
        "\n",
        "# --- 7. Test2 예측 → Submission 파일 생성 ---\n",
        "preds_test2 = mlp.predict(X2_s)\n",
        "submission = pd.DataFrame({\n",
        "    'PassengerId': ids2,\n",
        "    'Survived':    preds_test2\n",
        "})\n",
        "submission.to_csv('submission_mlp_full.csv', index=False)\n",
        "print(\"Saved: submission_mlp_full.csv\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "A4kAI5hnewGf",
        "outputId": "0ce30094-9fe4-468f-dd57-775a9d25ba9e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Full feature MLP → Test1 Accuracy: 81.01%\n",
            "Saved: submission_mlp_full.csv\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "\n",
        "# --- 1. 데이터 로드 & full feature 추출 ---\n",
        "train_df = pd.read_csv('process1_result.csv')\n",
        "test_df  = pd.read_csv('process2_result.csv')\n",
        "\n",
        "features = ['Sex', 'SibSp', 'Parch', 'Embarked', 'TicketNumeric']\n",
        "X_train_full = train_df[features].values    # (n_train, 5)\n",
        "y_train      = train_df['Survived'].values  # (n_train,)\n",
        "X_test2_full  = test_df[features].values    # (n_test2, 5)\n",
        "ids_test2     = test_df['PassengerId'].values\n",
        "\n",
        "# --- 2. Train/Test1 분할 (80:20, numpy로 직접) ---\n",
        "np.random.seed(42)\n",
        "idx = np.arange(len(X_train_full))\n",
        "np.random.shuffle(idx)\n",
        "\n",
        "split = int(0.8 * len(idx))\n",
        "train_idx = idx[:split]\n",
        "test1_idx = idx[split:]\n",
        "\n",
        "X_train = X_train_full[train_idx]\n",
        "y_train = y_train[train_idx]\n",
        "X_test1 = X_train_full[test1_idx]\n",
        "y_test1 = y_train_full = train_df['Survived'].values[test1_idx]  # Test1 레이블\n",
        "\n",
        "# --- 3. 스케일링: Train 기준 zero-centering & unit-variance ---\n",
        "means = X_train.mean(axis=0)\n",
        "stds  = X_train.std(axis=0)\n",
        "stds[stds == 0] = 1.0\n",
        "\n",
        "X_train_s = (X_train - means) / stds\n",
        "X_test1_s = (X_test1 - means) / stds\n",
        "X_test2_s = (X_test2_full - means) / stds\n",
        "\n",
        "# --- 4. PCA ---\n",
        "# 4.1 공분산 행렬 & 고유분해\n",
        "cov_mat = np.cov(X_train_s, rowvar=False)                   # (5,5)\n",
        "eigvals, eigvecs = np.linalg.eigh(cov_mat)\n",
        "idx_eig = np.argsort(eigvals)[::-1]\n",
        "eigvecs = eigvecs[:, idx_eig]                               # (5,5) 내림차 순\n",
        "\n",
        "# 4.2 상위 k 주성분 선택 (k=4 예시)\n",
        "k_pca = 4\n",
        "V_k = eigvecs[:, :k_pca]                                     # (5,4)\n",
        "\n",
        "# 4.3 PCA 투사\n",
        "X_train_pca = X_train_s.dot(V_k)     # (n_train,4)\n",
        "X_test1_pca = X_test1_s.dot(V_k)     # (n_test1,4)\n",
        "X_test2_pca = X_test2_s.dot(V_k)     # (n_test2,4)\n",
        "\n",
        "# --- 5. LDA (Fisher’s Linear Discriminant) ---\n",
        "# 5.1 클래스별 평균\n",
        "mu0 = X_train_s[y_train == 0].mean(axis=0)  # (5,)\n",
        "mu1 = X_train_s[y_train == 1].mean(axis=0)  # (5,)\n",
        "\n",
        "# 5.2 클래스 내 산포 행렬 SW\n",
        "d = X_train_s.shape[1]\n",
        "SW = np.zeros((d, d))\n",
        "for x_i, y_i in zip(X_train_s, y_train):\n",
        "    center = mu1 if y_i == 1 else mu0\n",
        "    diff = (x_i - center).reshape(-1, 1)\n",
        "    SW += diff.dot(diff.T)\n",
        "\n",
        "# 5.3 판별 벡터 w_fld\n",
        "w_fld = np.linalg.inv(SW).dot(mu1 - mu0)   # (5,)\n",
        "w_fld /= np.linalg.norm(w_fld)\n",
        "\n",
        "# 5.4 1차원 투사\n",
        "X_train_fld = X_train_s.dot(w_fld).reshape(-1, 1)  # (n_train,1)\n",
        "X_test1_fld = X_test1_s.dot(w_fld).reshape(-1, 1)  # (n_test1,1)\n",
        "X_test2_fld = X_test2_s.dot(w_fld).reshape(-1, 1)  # (n_test2,1)\n",
        "\n",
        "# --- 6. Logistic Regression (SGD) 구현 ---\n",
        "def sigmoid(z):\n",
        "    return 1 / (1 + np.exp(-z))\n",
        "\n",
        "def train_logistic_sgd(X, y, lr=0.001, epochs=100):\n",
        "    m, d = X.shape\n",
        "    w = np.zeros(d)\n",
        "    b = 0.0\n",
        "    for _ in range(epochs):\n",
        "        for i in range(m):\n",
        "            xi, yi = X[i], y[i]\n",
        "            z = xi.dot(w) + b\n",
        "            h = sigmoid(z)\n",
        "            delta = h - yi\n",
        "            w -= lr * delta * xi\n",
        "            b -= lr * delta\n",
        "    return w, b\n",
        "\n",
        "def eval_logistic(X_train, y_train, X_eval, y_eval, lr=0.001, epochs=100):\n",
        "    w, b = train_logistic_sgd(X_train, y_train, lr=lr, epochs=epochs)\n",
        "    probs = sigmoid(X_eval.dot(w) + b)\n",
        "    preds = (probs >= 0.5).astype(int)\n",
        "    acc = np.mean(preds == y_eval) * 100\n",
        "    return acc, preds\n",
        "\n",
        "# --- 7. KNN 구현 ---\n",
        "def euclid_dist_matrix(A, B):\n",
        "    # (|A|, |B|) pairwise Euclidean distance\n",
        "    return np.sqrt(((A[:, None, :] - B[None, :, :]) ** 2).sum(axis=2))\n",
        "\n",
        "def knn_predict(train_X, train_y, test_X, k=20):\n",
        "    D = euclid_dist_matrix(test_X, train_X)  # (n_test, n_train)\n",
        "    neigh = np.argpartition(D, k, axis=1)[:, :k]  # 각 test 샘플별 k개 이웃 인덱스\n",
        "    preds = []\n",
        "    for idxs in neigh:\n",
        "        counts = np.bincount(train_y[idxs])\n",
        "        preds.append(np.argmax(counts))\n",
        "    return np.array(preds)\n",
        "\n",
        "def eval_knn(X_train, y_train, X_eval, y_eval, k=20):\n",
        "    preds = knn_predict(X_train, y_train, X_eval, k=k)\n",
        "    acc = np.mean(preds == y_eval) * 100\n",
        "    return acc, preds\n",
        "\n",
        "# --- 8. Decision Tree 구현 ---\n",
        "def gini(labels):\n",
        "    classes, counts = np.unique(labels, return_counts=True)\n",
        "    p = counts / counts.sum()\n",
        "    return 1.0 - np.sum(p ** 2)\n",
        "\n",
        "def weighted_gini(col, labels, t):\n",
        "    left  = labels[col <= t]\n",
        "    right = labels[col > t]\n",
        "    if len(left) == 0 or len(right) == 0:\n",
        "        return None\n",
        "    n = len(labels)\n",
        "    return (len(left) / n) * gini(left) + (len(right) / n) * gini(right)\n",
        "\n",
        "def find_best_split(X, y):\n",
        "    best_gain, best_feat, best_t = 0.0, None, None\n",
        "    parent = gini(y)\n",
        "    for feat in range(X.shape[1]):\n",
        "        vals = np.unique(X[:, feat])\n",
        "        thresholds = (vals[:-1] + vals[1:]) / 2.0\n",
        "        for t in thresholds:\n",
        "            wg = weighted_gini(X[:, feat], y, t)\n",
        "            if wg is None:\n",
        "                continue\n",
        "            gain = parent - wg\n",
        "            if gain > best_gain:\n",
        "                best_gain, best_feat, best_t = gain, feat, t\n",
        "    return best_feat, best_t\n",
        "\n",
        "def build_tree(X, y, depth=0, max_depth=15):\n",
        "    if len(np.unique(y)) == 1 or depth == max_depth:\n",
        "        vals, cnts = np.unique(y, return_counts=True)\n",
        "        return {'leaf': True, 'pred': vals[np.argmax(cnts)]}\n",
        "    feat, thresh = find_best_split(X, y)\n",
        "    if feat is None:\n",
        "        vals, cnts = np.unique(y, return_counts=True)\n",
        "        return {'leaf': True, 'pred': vals[np.argmax(cnts)]}\n",
        "    mask = X[:, feat] <= thresh\n",
        "    left  = build_tree(X[mask], y[mask], depth + 1, max_depth)\n",
        "    right = build_tree(X[~mask], y[~mask], depth + 1, max_depth)\n",
        "    return {'leaf': False, 'feat': feat, 'thresh': thresh, 'left': left, 'right': right}\n",
        "\n",
        "def predict_tree(tree, x):\n",
        "    if tree['leaf']:\n",
        "        return tree['pred']\n",
        "    if x[tree['feat']] <= tree['thresh']:\n",
        "        return predict_tree(tree['left'], x)\n",
        "    else:\n",
        "        return predict_tree(tree['right'], x)\n",
        "\n",
        "def eval_tree(X_train, y_train, X_eval, y_eval, max_depth=15):\n",
        "    tree = build_tree(X_train, y_train, max_depth=max_depth)\n",
        "    preds = np.array([predict_tree(tree, x) for x in X_eval])\n",
        "    acc = np.mean(preds == y_eval) * 100\n",
        "    return acc, preds\n",
        "\n",
        "# --- 9. 알고리즘별 평가 함수 정의 (full/PCA/FLD) ---\n",
        "def evaluate_all(name, X_tr, y_tr, X_e1, y_e1, X_e2=None, y_e2=None, submission_ids=None):\n",
        "    print(f\"\\n---- {name} ----\")\n",
        "    # Logistic\n",
        "    acc1_log, _ = eval_logistic(X_tr, y_tr, X_e1, y_e1, lr=0.001, epochs=100)\n",
        "    print(f\"Logistic → Test1 ACC: {acc1_log:.2f}%\")\n",
        "    if X_e2 is not None:\n",
        "        _, preds2_log = eval_logistic(X_tr, y_tr, X_e2, y_e2, lr=0.001, epochs=100)\n",
        "        if submission_ids is not None:\n",
        "            pd.DataFrame({'PassengerId': submission_ids, 'Survived': preds2_log})\\\n",
        "              .to_csv(f'submission_logistic_{name}.csv', index=False)\n",
        "            print(f\"Saved submission_logistic_{name}.csv\")\n",
        "\n",
        "    # KNN\n",
        "    acc1_knn, _ = eval_knn(X_tr, y_tr, X_e1, y_e1, k=20)\n",
        "    print(f\"KNN (k=20) → Test1 ACC: {acc1_knn:.2f}%\")\n",
        "    if X_e2 is not None:\n",
        "        preds2_knn = knn_predict(X_tr, y_tr, X_e2, k=20)\n",
        "        if submission_ids is not None:\n",
        "            pd.DataFrame({'PassengerId': submission_ids, 'Survived': preds2_knn})\\\n",
        "              .to_csv(f'submission_knn_{name}.csv', index=False)\n",
        "            print(f\"Saved submission_knn_{name}.csv\")\n",
        "\n",
        "    # Decision Tree\n",
        "    acc1_dt, _ = eval_tree(X_tr, y_tr, X_e1, y_e1, max_depth=15)\n",
        "    print(f\"DecisionTree → Test1 ACC: {acc1_dt:.2f}%\")\n",
        "    if X_e2 is not None:\n",
        "        # 재학습해서 Test2 예측\n",
        "        tree_full = build_tree(X_tr, y_tr, max_depth=15)\n",
        "        preds2_dt = np.array([predict_tree(tree_full, x) for x in X_e2])\n",
        "        if submission_ids is not None:\n",
        "            pd.DataFrame({'PassengerId': submission_ids, 'Survived': preds2_dt})\\\n",
        "              .to_csv(f'submission_dt_{name}.csv', index=False)\n",
        "            print(f\"Saved submission_dt_{name}.csv\")\n",
        "\n",
        "# --- 10. 평가 실행: Full feature, PCA, LDA 순서 ---\n",
        "# 10.1 Full feature\n",
        "evaluate_all(\n",
        "    name       = 'full',\n",
        "    X_tr       = X_train_s, y_tr = y_train,\n",
        "    X_e1       = X_test1_s, y_e1 = y_test1,\n",
        "    X_e2       = X_test2_s, y_e2 = None,  # Test2 정답 없으므로 y_e2=None\n",
        "    submission_ids = ids_test2\n",
        ")\n",
        "\n",
        "# 10.2 PCA feature\n",
        "evaluate_all(\n",
        "    name       = 'pca',\n",
        "    X_tr       = X_train_pca, y_tr = y_train,\n",
        "    X_e1       = X_test1_pca, y_e1 = y_test1,\n",
        "    X_e2       = X_test2_pca, y_e2 = None,\n",
        "    submission_ids = ids_test2\n",
        ")\n",
        "\n",
        "# 10.3 LDA feature (1D)\n",
        "evaluate_all(\n",
        "    name       = 'fld',\n",
        "    X_tr       = X_train_fld, y_tr = y_train,\n",
        "    X_e1       = X_test1_fld, y_e1 = y_test1,\n",
        "    X_e2       = X_test2_fld, y_e2 = None,\n",
        "    submission_ids = ids_test2\n",
        ")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tI2fj33Zf-tD",
        "outputId": "9cc6c19d-bfc8-414b-ed51-ad72c5d1b179"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "---- full ----\n",
            "Logistic → Test1 ACC: 80.45%\n",
            "Saved submission_logistic_full.csv\n",
            "KNN (k=20) → Test1 ACC: 79.89%\n",
            "Saved submission_knn_full.csv\n",
            "DecisionTree → Test1 ACC: 81.56%\n",
            "Saved submission_dt_full.csv\n",
            "\n",
            "---- pca ----\n",
            "Logistic → Test1 ACC: 80.45%\n",
            "Saved submission_logistic_pca.csv\n",
            "KNN (k=20) → Test1 ACC: 80.45%\n",
            "Saved submission_knn_pca.csv\n",
            "DecisionTree → Test1 ACC: 81.01%\n",
            "Saved submission_dt_pca.csv\n",
            "\n",
            "---- fld ----\n",
            "Logistic → Test1 ACC: 79.89%\n",
            "Saved submission_logistic_fld.csv\n",
            "KNN (k=20) → Test1 ACC: 79.89%\n",
            "Saved submission_knn_fld.csv\n",
            "DecisionTree → Test1 ACC: 78.77%\n",
            "Saved submission_dt_fld.csv\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn.neural_network import MLPClassifier\n",
        "from sklearn.metrics import accuracy_score\n",
        "\n",
        "# --- 1. 데이터 로드 & full feature 추출 ---\n",
        "df1 = pd.read_csv('process1_result.csv')   # Train + Test1 데이터\n",
        "df2 = pd.read_csv('process2_result.csv')   # Test2 (제출용)\n",
        "\n",
        "features = ['Sex', 'SibSp', 'Parch', 'Embarked', 'TicketNumeric']\n",
        "X1_full = df1[features].values      # (n_train_all, 5)\n",
        "y1_full = df1['Survived'].values    # (n_train_all,)\n",
        "X2_full = df2[features].values      # (n_test2, 5)\n",
        "ids2    = df2['PassengerId'].values # (n_test2,)\n",
        "\n",
        "# --- 2. Train/Test1 분할 (numpy로 직접, 80:20) ---\n",
        "np.random.seed(42)\n",
        "indices = np.arange(len(X1_full))\n",
        "np.random.shuffle(indices)\n",
        "\n",
        "split = int(0.8 * len(indices))\n",
        "train_idx = indices[:split]\n",
        "test1_idx = indices[split:]\n",
        "\n",
        "X_train = X1_full[train_idx]   # (n_train, 5)\n",
        "y_train = y1_full[train_idx]   # (n_train,)\n",
        "X_test1 = X1_full[test1_idx]   # (n_test1, 5)\n",
        "y_test1 = y1_full[test1_idx]   # (n_test1,)\n",
        "\n",
        "# --- 3. Zero-centering & Unit-variance 스케일링 (Train 기준) ---\n",
        "means = X_train.mean(axis=0)\n",
        "stds  = X_train.std(axis=0)\n",
        "stds[stds == 0] = 1.0\n",
        "\n",
        "X_train_s = (X_train - means) / stds   # (n_train, 5)\n",
        "X_test1_s = (X_test1 - means) / stds   # (n_test1, 5)\n",
        "X2_s      = (X2_full - means) / stds   # (n_test2, 5)\n",
        "\n",
        "# --- 4. PCA 계산 (상위 4개 주성분) ---\n",
        "cov_mat = np.cov(X_train_s, rowvar=False)         # (5,5) 공분산 행렬\n",
        "eigvals, eigvecs = np.linalg.eigh(cov_mat)        # 고유값, 고유벡터\n",
        "idx_sort = np.argsort(eigvals)[::-1]\n",
        "eigvecs = eigvecs[:, idx_sort]                    # 내림차순 정렬\n",
        "\n",
        "k_pca = 4\n",
        "V_pca = eigvecs[:, :k_pca]                        # (5,4)\n",
        "\n",
        "X_train_pca = X_train_s.dot(V_pca)   # (n_train, 4)\n",
        "X_test1_pca = X_test1_s.dot(V_pca)   # (n_test1, 4)\n",
        "X2_pca      = X2_s.dot(V_pca)        # (n_test2, 4)\n",
        "\n",
        "# --- 5. LDA (Fisher’s Linear Discriminant) 계산 ---\n",
        "# 5.1 클래스별 평균\n",
        "mu0 = X_train_s[y_train == 0].mean(axis=0)  # (5,)\n",
        "mu1 = X_train_s[y_train == 1].mean(axis=0)  # (5,)\n",
        "\n",
        "# 5.2 클래스 내 산포 행렬 SW\n",
        "d = X_train_s.shape[1]\n",
        "SW = np.zeros((d, d))\n",
        "for x_i, y_i in zip(X_train_s, y_train):\n",
        "    center = mu1 if y_i == 1 else mu0\n",
        "    diff = (x_i - center).reshape(-1, 1)\n",
        "    SW += diff.dot(diff.T)\n",
        "\n",
        "# 5.3 판별 벡터 w_fld\n",
        "w_fld = np.linalg.inv(SW).dot(mu1 - mu0)   # (5,)\n",
        "w_fld /= np.linalg.norm(w_fld)\n",
        "\n",
        "# 5.4 1차원 투사\n",
        "X_train_fld = X_train_s.dot(w_fld).reshape(-1, 1)  # (n_train, 1)\n",
        "X_test1_fld = X_test1_s.dot(w_fld).reshape(-1, 1)  # (n_test1, 1)\n",
        "X2_fld      = X2_s.dot(w_fld).reshape(-1, 1)       # (n_test2, 1)\n",
        "\n",
        "# --- 6. MLPClassifier 설정 (은닉층=1, 노드=32; lr=0.005; alpha=1e-4; max_iter=300) ---\n",
        "mlp_params = {\n",
        "    'hidden_layer_sizes': (32,),\n",
        "    'activation': 'relu',\n",
        "    'solver': 'adam',\n",
        "    'learning_rate': 'constant',\n",
        "    'learning_rate_init': 0.005,\n",
        "    'alpha': 1e-4,\n",
        "    'batch_size': 32,\n",
        "    'max_iter': 300,\n",
        "    'shuffle': True,\n",
        "    'random_state': 42,\n",
        "    'early_stopping': True,\n",
        "    'validation_fraction': 0.1,\n",
        "    'n_iter_no_change': 10\n",
        "}\n",
        "\n",
        "# --- 7. 함수 정의: MLP 학습→Test1 평가→Test2 제출 ---\n",
        "def train_evaluate_mlp(X_tr, y_tr, X_t1, y_t1, X_t2, ids_t2, suffix):\n",
        "    # MLP 모델 생성\n",
        "    mlp = MLPClassifier(**mlp_params)\n",
        "\n",
        "    # 1) Train 학습\n",
        "    mlp.fit(X_tr, y_tr)\n",
        "\n",
        "    # 2) Test1 예측 및 정확도\n",
        "    preds_t1 = mlp.predict(X_t1)\n",
        "    acc_t1 = accuracy_score(y_t1, preds_t1) * 100\n",
        "    print(f\"MLP ({suffix}) → Test1 Accuracy: {acc_t1:.2f}%\")\n",
        "\n",
        "    # 3) Test2 예측 → 제출 파일 생성\n",
        "    preds_t2 = mlp.predict(X_t2)\n",
        "    submission_df = pd.DataFrame({\n",
        "        'PassengerId': ids_t2,\n",
        "        'Survived':    preds_t2\n",
        "    })\n",
        "    submission_df.to_csv(f'submission_mlp_{suffix}.csv', index=False)\n",
        "    print(f\"Saved: submission_mlp_{suffix}.csv\\n\")\n",
        "\n",
        "# --- 8. PCA 기반 MLP 실행 ---\n",
        "train_evaluate_mlp(\n",
        "    X_tr = X_train_pca, y_tr = y_train,\n",
        "    X_t1 = X_test1_pca, y_t1 = y_test1,\n",
        "    X_t2 = X2_pca, ids_t2 = ids2,\n",
        "    suffix = 'pca'\n",
        ")\n",
        "\n",
        "# --- 9. LDA 기반 MLP 실행 ---\n",
        "train_evaluate_mlp(\n",
        "    X_tr = X_train_fld, y_tr = y_train,\n",
        "    X_t1 = X_test1_fld, y_t1 = y_test1,\n",
        "    X_t2 = X2_fld, ids_t2 = ids2,\n",
        "    suffix = 'fld'\n",
        ")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ecoJQ47Rgq28",
        "outputId": "eee01a0c-c19c-464a-b2ff-02a91c5c131f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "MLP (pca) → Test1 Accuracy: 80.45%\n",
            "Saved: submission_mlp_pca.csv\n",
            "\n",
            "MLP (fld) → Test1 Accuracy: 79.89%\n",
            "Saved: submission_mlp_fld.csv\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn.neural_network import MLPClassifier\n",
        "from sklearn.metrics import f1_score\n",
        "\n",
        "# --- 1. 데이터 로드 & full feature 추출 ---\n",
        "df1 = pd.read_csv('process1_result.csv')   # Train + Test1 데이터\n",
        "df2 = pd.read_csv('process2_result.csv')   # Test2 (제출용)\n",
        "\n",
        "features = ['Sex', 'SibSp', 'Parch', 'Embarked', 'TicketNumeric']\n",
        "X1_full = df1[features].values      # (n_train_all, 5)\n",
        "y1_full = df1['Survived'].values    # (n_train_all,)\n",
        "X2_full = df2[features].values      # (n_test2, 5)\n",
        "ids2    = df2['PassengerId'].values # (n_test2,)\n",
        "\n",
        "# --- 2. Train/Test1 분할 (80:20) ---\n",
        "np.random.seed(42)\n",
        "indices = np.arange(len(X1_full))\n",
        "np.random.shuffle(indices)\n",
        "\n",
        "split = int(0.8 * len(indices))\n",
        "train_idx = indices[:split]\n",
        "test1_idx = indices[split:]\n",
        "\n",
        "X_train = X1_full[train_idx]   # (n_train, 5)\n",
        "y_train = y1_full[train_idx]   # (n_train,)\n",
        "X_test1 = X1_full[test1_idx]   # (n_test1, 5)\n",
        "y_test1 = y1_full[test1_idx]   # (n_test1,)\n",
        "\n",
        "# --- 3. Zero-centering & Unit-variance 스케일링 (Train 기준) ---\n",
        "means = X_train.mean(axis=0)\n",
        "stds  = X_train.std(axis=0)\n",
        "stds[stds == 0] = 1.0\n",
        "\n",
        "X_train_s = (X_train - means) / stds   # (n_train, 5)\n",
        "X_test1_s = (X_test1 - means) / stds   # (n_test1, 5)\n",
        "X2_s      = (X2_full - means) / stds   # (n_test2, 5)\n",
        "\n",
        "# --- 4. PCA 계산 (상위 4개 주성분) ---\n",
        "cov_mat = np.cov(X_train_s, rowvar=False)\n",
        "eigvals, eigvecs = np.linalg.eigh(cov_mat)\n",
        "idx_sort = np.argsort(eigvals)[::-1]\n",
        "V_pca = eigvecs[:, idx_sort[:4]]      # (5,4)\n",
        "\n",
        "X_train_pca = X_train_s.dot(V_pca)  # (n_train, 4)\n",
        "X_test1_pca = X_test1_s.dot(V_pca)  # (n_test1, 4)\n",
        "X2_pca      = X2_s.dot(V_pca)       # (n_test2, 4)\n",
        "\n",
        "# --- 5. LDA (Fisher’s Linear Discriminant) 계산 ---\n",
        "mu0 = X_train_s[y_train == 0].mean(axis=0)\n",
        "mu1 = X_train_s[y_train == 1].mean(axis=0)\n",
        "\n",
        "d = X_train_s.shape[1]\n",
        "SW = np.zeros((d, d))\n",
        "for x_i, y_i in zip(X_train_s, y_train):\n",
        "    center = mu1 if y_i == 1 else mu0\n",
        "    diff = (x_i - center).reshape(-1, 1)\n",
        "    SW += diff.dot(diff.T)\n",
        "\n",
        "w_fld = np.linalg.inv(SW).dot(mu1 - mu0)\n",
        "w_fld /= np.linalg.norm(w_fld)\n",
        "\n",
        "X_train_fld = X_train_s.dot(w_fld).reshape(-1, 1)  # (n_train, 1)\n",
        "X_test1_fld = X_test1_s.dot(w_fld).reshape(-1, 1)  # (n_test1, 1)\n",
        "X2_fld      = X2_s.dot(w_fld).reshape(-1, 1)       # (n_test2, 1)\n",
        "\n",
        "# --- 6. MLPClassifier 공통 파라미터 ---\n",
        "mlp_params = {\n",
        "    'hidden_layer_sizes': (32,),\n",
        "    'activation': 'relu',\n",
        "    'solver': 'adam',\n",
        "    'learning_rate': 'constant',\n",
        "    'learning_rate_init': 0.005,\n",
        "    'alpha': 1e-4,\n",
        "    'batch_size': 32,\n",
        "    'max_iter': 300,\n",
        "    'shuffle': True,\n",
        "    'random_state': 42,\n",
        "    'early_stopping': True,\n",
        "    'validation_fraction': 0.1,\n",
        "    'n_iter_no_change': 10\n",
        "}\n",
        "\n",
        "# --- 7. MLP 실행 함수 (Test1 F1-score, Test2 제출) ---\n",
        "def run_mlp(X_tr, y_tr, X_t1, y_t1, X_t2, ids_t2, label):\n",
        "    mlp = MLPClassifier(**mlp_params)\n",
        "    mlp.fit(X_tr, y_tr)\n",
        "    preds_t1 = mlp.predict(X_t1)\n",
        "    f1_t1 = f1_score(y_t1, preds_t1) * 100\n",
        "    print(f\"MLP ({label}) → Test1 F1-score: {f1_t1:.2f}%\")\n",
        "    preds_t2 = mlp.predict(X_t2)\n",
        "    df_sub = pd.DataFrame({\n",
        "        'PassengerId': ids_t2,\n",
        "        'Survived':    preds_t2\n",
        "    })\n",
        "    df_sub.to_csv(f'submission_mlp_{label}.csv', index=False)\n",
        "    print(f\"Saved submission_mlp_{label}.csv\\n\")\n",
        "\n",
        "# --- 8. Full feature MLP 실행 ---\n",
        "run_mlp(\n",
        "    X_tr = X_train_s, y_tr = y_train,\n",
        "    X_t1 = X_test1_s, y_t1 = y_test1,\n",
        "    X_t2 = X2_s, ids_t2 = ids2,\n",
        "    label = 'full'\n",
        ")\n",
        "\n",
        "# --- 9. PCA 기반 MLP 실행 ---\n",
        "run_mlp(\n",
        "    X_tr = X_train_pca, y_tr = y_train,\n",
        "    X_t1 = X_test1_pca, y_t1 = y_test1,\n",
        "    X_t2 = X2_pca, ids_t2 = ids2,\n",
        "    label = 'pca'\n",
        ")\n",
        "\n",
        "# --- 10. LDA 기반 MLP 실행 ---\n",
        "run_mlp(\n",
        "    X_tr = X_train_fld, y_tr = y_train,\n",
        "    X_t1 = X_test1_fld, y_t1 = y_test1,\n",
        "    X_t2 = X2_fld, ids_t2 = ids2,\n",
        "    label = 'fld'\n",
        ")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xi7zAN3Ch5IZ",
        "outputId": "a0e8b321-19b1-4eee-f0a5-709e96ff7af3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "MLP (full) → Test1 F1-score: 72.13%\n",
            "Saved submission_mlp_full.csv\n",
            "\n",
            "MLP (pca) → Test1 F1-score: 71.07%\n",
            "Saved submission_mlp_pca.csv\n",
            "\n",
            "MLP (fld) → Test1 F1-score: 70.97%\n",
            "Saved submission_mlp_fld.csv\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn.neural_network import MLPClassifier\n",
        "from sklearn.metrics import accuracy_score, f1_score\n",
        "\n",
        "# --- 1. 데이터 로드 & full feature 추출 ---\n",
        "df = pd.read_csv('process1_result.csv')\n",
        "features = ['Sex', 'SibSp', 'Parch', 'Embarked', 'TicketNumeric']\n",
        "X_full = df[features].values    # (n_samples, 5)\n",
        "y_full = df['Survived'].values  # (n_samples,)\n",
        "\n",
        "# --- 2. Stratified 5-Fold 분할 (numpy 만 사용) ---\n",
        "np.random.seed(42)\n",
        "pos_idx = np.where(y_full == 1)[0]\n",
        "neg_idx = np.where(y_full == 0)[0]\n",
        "np.random.shuffle(pos_idx)\n",
        "np.random.shuffle(neg_idx)\n",
        "\n",
        "# 양성/음성 각각 5개로 분할\n",
        "pos_folds = np.array_split(pos_idx, 5)\n",
        "neg_folds = np.array_split(neg_idx, 5)\n",
        "\n",
        "# 각 fold 인덱스 결합\n",
        "folds = [np.concatenate([pos_folds[i], neg_folds[i]]) for i in range(5)]\n",
        "\n",
        "# --- 3. Logistic SGD 정의 (기존과 동일) ---\n",
        "def sigmoid(z):\n",
        "    return 1 / (1 + np.exp(-z))\n",
        "\n",
        "def train_logistic_sgd(X, y, lr=0.001, epochs=100):\n",
        "    m, d = X.shape\n",
        "    w = np.zeros(d)\n",
        "    b = 0.0\n",
        "    for _ in range(epochs):\n",
        "        for i in range(m):\n",
        "            xi, yi = X[i], y[i]\n",
        "            z = xi.dot(w) + b\n",
        "            h = sigmoid(z)\n",
        "            delta = h - yi\n",
        "            w -= lr * delta * xi\n",
        "            b -= lr * delta\n",
        "    return w, b\n",
        "\n",
        "def predict_logistic(w, b, X):\n",
        "    probs = sigmoid(X.dot(w) + b)\n",
        "    return (probs >= 0.5).astype(int)\n",
        "\n",
        "# --- 4. KNN 정의 (기존과 동일) ---\n",
        "def euclid_dist_matrix(A, B):\n",
        "    return np.sqrt(((A[:, None, :] - B[None, :, :]) ** 2).sum(axis=2))\n",
        "\n",
        "def knn_predict(train_X, train_y, test_X, k=20):\n",
        "    D = euclid_dist_matrix(test_X, train_X)\n",
        "    neigh = np.argpartition(D, k, axis=1)[:, :k]\n",
        "    preds = []\n",
        "    for idxs in neigh:\n",
        "        counts = np.bincount(train_y[idxs])\n",
        "        preds.append(np.argmax(counts))\n",
        "    return np.array(preds)\n",
        "\n",
        "# --- 5. Decision Tree 정의 (기존과 동일) ---\n",
        "def gini(labels):\n",
        "    classes, counts = np.unique(labels, return_counts=True)\n",
        "    p = counts / counts.sum()\n",
        "    return 1.0 - np.sum(p ** 2)\n",
        "\n",
        "def weighted_gini(col, labels, t):\n",
        "    left  = labels[col <= t]\n",
        "    right = labels[col >  t]\n",
        "    if len(left) == 0 or len(right) == 0:\n",
        "        return None\n",
        "    n = len(labels)\n",
        "    return (len(left) / n) * gini(left) + (len(right) / n) * gini(right)\n",
        "\n",
        "def find_best_split(X, y):\n",
        "    best_gain, best_feat, best_t = 0.0, None, None\n",
        "    parent = gini(y)\n",
        "    for feat in range(X.shape[1]):\n",
        "        vals = np.unique(X[:, feat])\n",
        "        thresholds = (vals[:-1] + vals[1:]) / 2.0\n",
        "        for t in thresholds:\n",
        "            wg = weighted_gini(X[:, feat], y, t)\n",
        "            if wg is None:\n",
        "                continue\n",
        "            gain = parent - wg\n",
        "            if gain > best_gain:\n",
        "                best_gain, best_feat, best_t = gain, feat, t\n",
        "    return best_feat, best_t\n",
        "\n",
        "def build_tree(X, y, depth=0, max_depth=15):\n",
        "    if len(np.unique(y)) == 1 or depth == max_depth:\n",
        "        vals, cnts = np.unique(y, return_counts=True)\n",
        "        return {'leaf': True, 'pred': vals[np.argmax(cnts)]}\n",
        "    feat, thresh = find_best_split(X, y)\n",
        "    if feat is None:\n",
        "        vals, cnts = np.unique(y, return_counts=True)\n",
        "        return {'leaf': True, 'pred': vals[np.argmax(cnts)]}\n",
        "    mask = X[:, feat] <= thresh\n",
        "    left  = build_tree(X[mask],  y[mask],  depth+1, max_depth)\n",
        "    right = build_tree(X[~mask], y[~mask], depth+1, max_depth)\n",
        "    return {'leaf': False, 'feat': feat, 'thresh': thresh, 'left': left, 'right': right}\n",
        "\n",
        "def predict_tree(tree, x):\n",
        "    if tree['leaf']:\n",
        "        return tree['pred']\n",
        "    if x[tree['feat']] <= tree['thresh']:\n",
        "        return predict_tree(tree['left'], x)\n",
        "    else:\n",
        "        return predict_tree(tree['right'], x)\n",
        "\n",
        "# --- 6. MLPClassifier 설정 (지정된 하이퍼파라미터 고정) ---\n",
        "mlp_params = {\n",
        "    'hidden_layer_sizes': (32,),\n",
        "    'activation': 'relu',\n",
        "    'solver': 'adam',\n",
        "    'learning_rate': 'constant',\n",
        "    'learning_rate_init': 0.005,\n",
        "    'alpha': 1e-4,\n",
        "    'batch_size': 32,\n",
        "    'max_iter': 300,\n",
        "    'shuffle': True,\n",
        "    'random_state': 42,\n",
        "    'early_stopping': True,\n",
        "    'validation_fraction': 0.1,\n",
        "    'n_iter_no_change': 10\n",
        "}\n",
        "\n",
        "# --- 7. 5-Fold CV 수행 ---\n",
        "logistic_f1_scores = []\n",
        "knn_f1_scores      = []\n",
        "dt_f1_scores       = []\n",
        "mlp_f1_scores      = []\n",
        "\n",
        "for i in range(5):\n",
        "    # 검증용 fold 인덱스\n",
        "    val_idx = folds[i]\n",
        "    # 학습용 fold 인덱스 = 나머지 4개\n",
        "    train_idx = np.concatenate([folds[j] for j in range(5) if j != i])\n",
        "\n",
        "    # Train/Validation 데이터 분리\n",
        "    X_tr, y_tr = X_full[train_idx], y_full[train_idx]\n",
        "    X_val, y_val = X_full[val_idx], y_full[val_idx]\n",
        "\n",
        "    # 7-1. 스케일링: Train 기준 평균/표준편차 계산\n",
        "    means = X_tr.mean(axis=0)\n",
        "    stds  = X_tr.std(axis=0)\n",
        "    stds[stds == 0] = 1.0\n",
        "\n",
        "    X_tr_s  = (X_tr - means) / stds\n",
        "    X_val_s = (X_val - means) / stds\n",
        "\n",
        "    # --- Logistic CV ---\n",
        "    w, b = train_logistic_sgd(X_tr_s, y_tr, lr=0.001, epochs=100)\n",
        "    preds_log = predict_logistic(w, b, X_val_s)\n",
        "    f1_log = f1_score(y_val, preds_log)\n",
        "    logistic_f1_scores.append(f1_log)\n",
        "\n",
        "    # --- KNN CV ---\n",
        "    preds_knn = knn_predict(X_tr_s, y_tr, X_val_s, k=20)\n",
        "    f1_knn = f1_score(y_val, preds_knn)\n",
        "    knn_f1_scores.append(f1_knn)\n",
        "\n",
        "    # --- Decision Tree CV ---\n",
        "    tree = build_tree(X_tr_s, y_tr, max_depth=15)\n",
        "    preds_dt = np.array([predict_tree(tree, x) for x in X_val_s])\n",
        "    f1_dt = f1_score(y_val, preds_dt)\n",
        "    dt_f1_scores.append(f1_dt)\n",
        "\n",
        "    # --- MLP CV ---\n",
        "    mlp = MLPClassifier(**mlp_params)\n",
        "    mlp.fit(X_tr_s, y_tr)\n",
        "    preds_mlp = mlp.predict(X_val_s)\n",
        "    f1_mlp = f1_score(y_val, preds_mlp)\n",
        "    mlp_f1_scores.append(f1_mlp)\n",
        "\n",
        "# --- 8. 5-Fold CV 결과 출력 ---\n",
        "print(\"5-Fold CV 평균 F1-scores (Full Feature):\")\n",
        "print(f\"Logistic   : {np.mean(logistic_f1_scores)*100:.2f}%\")\n",
        "print(f\"KNN (k=20) : {np.mean(knn_f1_scores)*100:.2f}%\")\n",
        "print(f\"Decision T : {np.mean(dt_f1_scores)*100:.2f}%\")\n",
        "print(f\"MLP        : {np.mean(mlp_f1_scores)*100:.2f}%\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OA-f3nNwi3R0",
        "outputId": "a1456417-809d-4e9d-a2cc-a9bdbf03dfb2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "5-Fold CV 평균 F1-scores (Full Feature):\n",
            "Logistic   : 70.69%\n",
            "KNN (k=20) : 70.33%\n",
            "Decision T : 69.59%\n",
            "MLP        : 70.35%\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn.neural_network import MLPClassifier\n",
        "from sklearn.metrics import accuracy_score\n",
        "\n",
        "# --- 1. 데이터 로드 & full feature 추출 ---\n",
        "df = pd.read_csv('process1_result.csv')\n",
        "features = ['Sex', 'SibSp', 'Parch', 'Embarked', 'TicketNumeric']\n",
        "X_full = df[features].values    # (n_samples, 5)\n",
        "y_full = df['Survived'].values  # (n_samples,)\n",
        "\n",
        "# --- 2. Stratified 5-Fold 분할 (NumPy만 사용) ---\n",
        "np.random.seed(42)\n",
        "pos_idx = np.where(y_full == 1)[0]\n",
        "neg_idx = np.where(y_full == 0)[0]\n",
        "np.random.shuffle(pos_idx)\n",
        "np.random.shuffle(neg_idx)\n",
        "\n",
        "# 양성/음성 각각 5개 fold로 분할\n",
        "pos_folds = np.array_split(pos_idx, 5)\n",
        "neg_folds = np.array_split(neg_idx, 5)\n",
        "\n",
        "folds = [np.concatenate([pos_folds[i], neg_folds[i]]) for i in range(5)]\n",
        "\n",
        "# --- 3. Logistic SGD 정의 (기존과 동일) ---\n",
        "def sigmoid(z):\n",
        "    return 1 / (1 + np.exp(-z))\n",
        "\n",
        "def train_logistic_sgd(X, y, lr=0.001, epochs=100):\n",
        "    m, d = X.shape\n",
        "    w = np.zeros(d)\n",
        "    b = 0.0\n",
        "    for _ in range(epochs):\n",
        "        for i in range(m):\n",
        "            xi, yi = X[i], y[i]\n",
        "            z = xi.dot(w) + b\n",
        "            h = sigmoid(z)\n",
        "            delta = h - yi\n",
        "            w -= lr * delta * xi\n",
        "            b -= lr * delta\n",
        "    return w, b\n",
        "\n",
        "def predict_logistic(w, b, X):\n",
        "    probs = sigmoid(X.dot(w) + b)\n",
        "    return (probs >= 0.5).astype(int)\n",
        "\n",
        "# --- 4. KNN 정의 (기존과 동일) ---\n",
        "def euclid_dist_matrix(A, B):\n",
        "    return np.sqrt(((A[:, None, :] - B[None, :, :]) ** 2).sum(axis=2))\n",
        "\n",
        "def knn_predict(train_X, train_y, test_X, k=20):\n",
        "    D = euclid_dist_matrix(test_X, train_X)\n",
        "    neigh = np.argpartition(D, k, axis=1)[:, :k]\n",
        "    preds = []\n",
        "    for idxs in neigh:\n",
        "        counts = np.bincount(train_y[idxs])\n",
        "        preds.append(np.argmax(counts))\n",
        "    return np.array(preds)\n",
        "\n",
        "# --- 5. Decision Tree 정의 (기존과 동일) ---\n",
        "def gini(labels):\n",
        "    classes, counts = np.unique(labels, return_counts=True)\n",
        "    p = counts / counts.sum()\n",
        "    return 1.0 - np.sum(p ** 2)\n",
        "\n",
        "def weighted_gini(col, labels, t):\n",
        "    left  = labels[col <= t]\n",
        "    right = labels[col > t]\n",
        "    if len(left) == 0 or len(right) == 0:\n",
        "        return None\n",
        "    n = len(labels)\n",
        "    return (len(left)/n)*gini(left) + (len(right)/n)*gini(right)\n",
        "\n",
        "def find_best_split(X, y):\n",
        "    best_gain, best_feat, best_t = 0.0, None, None\n",
        "    parent = gini(y)\n",
        "    for feat in range(X.shape[1]):\n",
        "        vals = np.unique(X[:, feat])\n",
        "        thresholds = (vals[:-1] + vals[1:]) / 2.0\n",
        "        for t in thresholds:\n",
        "            wg = weighted_gini(X[:, feat], y, t)\n",
        "            if wg is None:\n",
        "                continue\n",
        "            gain = parent - wg\n",
        "            if gain > best_gain:\n",
        "                best_gain, best_feat, best_t = gain, feat, t\n",
        "    return best_feat, best_t\n",
        "\n",
        "def build_tree(X, y, depth=0, max_depth=15):\n",
        "    if len(np.unique(y)) == 1 or depth == max_depth:\n",
        "        vals, cnts = np.unique(y, return_counts=True)\n",
        "        return {'leaf': True, 'pred': vals[np.argmax(cnts)]}\n",
        "    feat, thresh = find_best_split(X, y)\n",
        "    if feat is None:\n",
        "        vals, cnts = np.unique(y, return_counts=True)\n",
        "        return {'leaf': True, 'pred': vals[np.argmax(cnts)]}\n",
        "    mask = X[:, feat] <= thresh\n",
        "    left  = build_tree(X[mask], y[mask], depth+1, max_depth)\n",
        "    right = build_tree(X[~mask], y[~mask], depth+1, max_depth)\n",
        "    return {'leaf': False, 'feat': feat, 'thresh': thresh, 'left': left, 'right': right}\n",
        "\n",
        "def predict_tree(tree, x):\n",
        "    if tree['leaf']:\n",
        "        return tree['pred']\n",
        "    if x[tree['feat']] <= tree['thresh']:\n",
        "        return predict_tree(tree['left'], x)\n",
        "    else:\n",
        "        return predict_tree(tree['right'], x)\n",
        "\n",
        "# --- 6. MLPClassifier 설정 (지정된 하이퍼파라미터 고정) ---\n",
        "mlp_params = {\n",
        "    'hidden_layer_sizes': (32,),\n",
        "    'activation': 'relu',\n",
        "    'solver': 'adam',\n",
        "    'learning_rate': 'constant',\n",
        "    'learning_rate_init': 0.005,\n",
        "    'alpha': 1e-4,\n",
        "    'batch_size': 32,\n",
        "    'max_iter': 300,\n",
        "    'shuffle': True,\n",
        "    'random_state': 42,\n",
        "    'early_stopping': True,\n",
        "    'validation_fraction': 0.1,\n",
        "    'n_iter_no_change': 10\n",
        "}\n",
        "\n",
        "# --- 7. 5-Fold CV 수행 (Accuracy) ---\n",
        "logistic_accs = []\n",
        "knn_accs      = []\n",
        "dt_accs       = []\n",
        "mlp_accs      = []\n",
        "\n",
        "for i in range(5):\n",
        "    val_idx = folds[i]\n",
        "    train_idx = np.concatenate([folds[j] for j in range(5) if j != i])\n",
        "\n",
        "    X_tr, y_tr = X_full[train_idx], y_full[train_idx]\n",
        "    X_val, y_val = X_full[val_idx], y_full[val_idx]\n",
        "\n",
        "    # 7-1. 스케일링: Train 기준 평균/표준편차 계산\n",
        "    means = X_tr.mean(axis=0)\n",
        "    stds  = X_tr.std(axis=0)\n",
        "    stds[stds == 0] = 1.0\n",
        "\n",
        "    X_tr_s  = (X_tr - means) / stds\n",
        "    X_val_s = (X_val - means) / stds\n",
        "\n",
        "    # --- Logistic CV ---\n",
        "    w, b = train_logistic_sgd(X_tr_s, y_tr, lr=0.001, epochs=100)\n",
        "    preds_log = predict_logistic(w, b, X_val_s)\n",
        "    acc_log = accuracy_score(y_val, preds_log) * 100\n",
        "    logistic_accs.append(acc_log)\n",
        "\n",
        "    # --- KNN CV ---\n",
        "    preds_knn = knn_predict(X_tr_s, y_tr, X_val_s, k=20)\n",
        "    acc_knn = accuracy_score(y_val, preds_knn) * 100\n",
        "    knn_accs.append(acc_knn)\n",
        "\n",
        "    # --- Decision Tree CV ---\n",
        "    tree = build_tree(X_tr_s, y_tr, max_depth=15)\n",
        "    preds_dt = np.array([predict_tree(tree, x) for x in X_val_s])\n",
        "    acc_dt = accuracy_score(y_val, preds_dt) * 100\n",
        "    dt_accs.append(acc_dt)\n",
        "\n",
        "    # --- MLP CV ---\n",
        "    mlp = MLPClassifier(**mlp_params)\n",
        "    mlp.fit(X_tr_s, y_tr)\n",
        "    preds_mlp = mlp.predict(X_val_s)\n",
        "    acc_mlp = accuracy_score(y_val, preds_mlp) * 100\n",
        "    mlp_accs.append(acc_mlp)\n",
        "\n",
        "# --- 8. 5-Fold CV 결과 출력 ---\n",
        "print(\"5-Fold CV 평균 Accuracy (Full Feature):\")\n",
        "print(f\"Logistic   : {np.mean(logistic_accs):.2f}%\")\n",
        "print(f\"KNN (k=20) : {np.mean(knn_accs):.2f}%\")\n",
        "print(f\"Decision T : {np.mean(dt_accs):.2f}%\")\n",
        "print(f\"MLP        : {np.mean(mlp_accs):.2f}%\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2Ixie8hAjJ3e",
        "outputId": "333aa2cf-8046-4c8f-886b-7b68ff7ea3e1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "5-Fold CV 평균 Accuracy (Full Feature):\n",
            "Logistic   : 78.90%\n",
            "KNN (k=20) : 78.90%\n",
            "Decision T : 77.44%\n",
            "MLP        : 78.91%\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn.neural_network import MLPClassifier\n",
        "from sklearn.metrics import accuracy_score, f1_score\n",
        "\n",
        "# --- 1. 데이터 로드 & full feature 추출 ---\n",
        "df = pd.read_csv('process1_result.csv')\n",
        "features = ['Sex', 'SibSp', 'Parch', 'Embarked', 'TicketNumeric']\n",
        "X_full = df[features].values    # (n_samples, 5)\n",
        "y_full = df['Survived'].values  # (n_samples,)\n",
        "\n",
        "# --- 2. Stratified 5-Fold 분할 (NumPy만 사용) ---\n",
        "np.random.seed(42)\n",
        "pos_idx = np.where(y_full == 1)[0]\n",
        "neg_idx = np.where(y_full == 0)[0]\n",
        "np.random.shuffle(pos_idx)\n",
        "np.random.shuffle(neg_idx)\n",
        "\n",
        "# 양성/음성 각각 5개 fold로 분할\n",
        "pos_folds = np.array_split(pos_idx, 5)\n",
        "neg_folds = np.array_split(neg_idx, 5)\n",
        "folds = [np.concatenate([pos_folds[i], neg_folds[i]]) for i in range(5)]\n",
        "\n",
        "# --- 3. Logistic SGD 정의 ---\n",
        "def sigmoid(z):\n",
        "    return 1 / (1 + np.exp(-z))\n",
        "\n",
        "def train_logistic_sgd(X, y, lr=0.001, epochs=100):\n",
        "    m, d = X.shape\n",
        "    w = np.zeros(d)\n",
        "    b = 0.0\n",
        "    for _ in range(epochs):\n",
        "        for i in range(m):\n",
        "            xi, yi = X[i], y[i]\n",
        "            z = xi.dot(w) + b\n",
        "            h = sigmoid(z)\n",
        "            delta = h - yi\n",
        "            w -= lr * delta * xi\n",
        "            b -= lr * delta\n",
        "    return w, b\n",
        "\n",
        "def predict_logistic(w, b, X):\n",
        "    probs = sigmoid(X.dot(w) + b)\n",
        "    return (probs >= 0.5).astype(int)\n",
        "\n",
        "# --- 4. KNN 정의 ---\n",
        "def euclid_dist_matrix(A, B):\n",
        "    return np.sqrt(((A[:, None, :] - B[None, :, :]) ** 2).sum(axis=2))\n",
        "\n",
        "def knn_predict(train_X, train_y, test_X, k=20):\n",
        "    D = euclid_dist_matrix(test_X, train_X)\n",
        "    neigh = np.argpartition(D, k, axis=1)[:, :k]\n",
        "    preds = []\n",
        "    for idxs in neigh:\n",
        "        counts = np.bincount(train_y[idxs])\n",
        "        preds.append(np.argmax(counts))\n",
        "    return np.array(preds)\n",
        "\n",
        "# --- 5. Decision Tree 정의 ---\n",
        "def gini(labels):\n",
        "    classes, counts = np.unique(labels, return_counts=True)\n",
        "    p = counts / counts.sum()\n",
        "    return 1.0 - np.sum(p ** 2)\n",
        "\n",
        "def weighted_gini(col, labels, t):\n",
        "    left  = labels[col <= t]\n",
        "    right = labels[col > t]\n",
        "    if len(left) == 0 or len(right) == 0:\n",
        "        return None\n",
        "    n = len(labels)\n",
        "    return (len(left)/n)*gini(left) + (len(right)/n)*gini(right)\n",
        "\n",
        "def find_best_split(X, y):\n",
        "    best_gain, best_feat, best_t = 0.0, None, None\n",
        "    parent = gini(y)\n",
        "    for feat in range(X.shape[1]):\n",
        "        vals = np.unique(X[:, feat])\n",
        "        thresholds = (vals[:-1] + vals[1:]) / 2.0\n",
        "        for t in thresholds:\n",
        "            wg = weighted_gini(X[:, feat], y, t)\n",
        "            if wg is None:\n",
        "                continue\n",
        "            gain = parent - wg\n",
        "            if gain > best_gain:\n",
        "                best_gain, best_feat, best_t = gain, feat, t\n",
        "    return best_feat, best_t\n",
        "\n",
        "def build_tree(X, y, depth=0, max_depth=15):\n",
        "    if len(np.unique(y)) == 1 or depth == max_depth:\n",
        "        vals, cnts = np.unique(y, return_counts=True)\n",
        "        return {'leaf': True, 'pred': vals[np.argmax(cnts)]}\n",
        "    feat, thresh = find_best_split(X, y)\n",
        "    if feat is None:\n",
        "        vals, cnts = np.unique(y, return_counts=True)\n",
        "        return {'leaf': True, 'pred': vals[np.argmax(cnts)]}\n",
        "    mask = X[:, feat] <= thresh\n",
        "    left  = build_tree(X[mask], y[mask], depth+1, max_depth)\n",
        "    right = build_tree(X[~mask], y[~mask], depth+1, max_depth)\n",
        "    return {'leaf': False, 'feat': feat, 'thresh': thresh, 'left': left, 'right': right}\n",
        "\n",
        "def predict_tree(tree, x):\n",
        "    if tree['leaf']:\n",
        "        return tree['pred']\n",
        "    if x[tree['feat']] <= tree['thresh']:\n",
        "        return predict_tree(tree['left'], x)\n",
        "    else:\n",
        "        return predict_tree(tree['right'], x)\n",
        "\n",
        "# --- 6. MLPClassifier 설정 (고정 옵션) ---\n",
        "mlp_params = {\n",
        "    'hidden_layer_sizes': (32,),\n",
        "    'activation': 'relu',\n",
        "    'solver': 'adam',\n",
        "    'learning_rate': 'constant',\n",
        "    'learning_rate_init': 0.005,\n",
        "    'alpha': 1e-4,\n",
        "    'batch_size': 32,\n",
        "    'max_iter': 300,\n",
        "    'shuffle': True,\n",
        "    'random_state': 42,\n",
        "    'early_stopping': True,\n",
        "    'validation_fraction': 0.1,\n",
        "    'n_iter_no_change': 10\n",
        "}\n",
        "\n",
        "# --- 7. 5-Fold CV: PCA → 각 모델 평가 (Accuracy + F1) ---\n",
        "logistic_accs = []; logistic_f1s = []\n",
        "knn_accs = [];      knn_f1s = []\n",
        "dt_accs = [];       dt_f1s = []\n",
        "mlp_accs = [];      mlp_f1s = []\n",
        "\n",
        "for i in range(5):\n",
        "    val_idx = folds[i]\n",
        "    train_idx = np.concatenate([folds[j] for j in range(5) if j != i])\n",
        "\n",
        "    X_tr, y_tr = X_full[train_idx], y_full[train_idx]\n",
        "    X_val, y_val = X_full[val_idx], y_full[val_idx]\n",
        "\n",
        "    # 7-1. 스케일링: Train 기준 평균/표준편차 계산\n",
        "    means = X_tr.mean(axis=0)\n",
        "    stds = X_tr.std(axis=0)\n",
        "    stds[stds == 0] = 1.0\n",
        "\n",
        "    X_tr_s = (X_tr - means) / stds\n",
        "    X_val_s = (X_val - means) / stds\n",
        "\n",
        "    # 7-2. PCA: Train 공분산행렬→고유분해→상위 4개 주성분\n",
        "    cov_mat = np.cov(X_tr_s, rowvar=False)\n",
        "    eigvals, eigvecs = np.linalg.eigh(cov_mat)\n",
        "    idx_sort = np.argsort(eigvals)[::-1]\n",
        "    V_pca = eigvecs[:, idx_sort[:4]]  # (5,4)\n",
        "\n",
        "    X_tr_pca = X_tr_s.dot(V_pca)   # (n_train_fold, 4)\n",
        "    X_val_pca = X_val_s.dot(V_pca) # (n_val_fold,   4)\n",
        "\n",
        "    # --- Logistic (PCA) CV ---\n",
        "    w, b = train_logistic_sgd(X_tr_pca, y_tr, lr=0.001, epochs=100)\n",
        "    preds_log = predict_logistic(w, b, X_val_pca)\n",
        "    acc_log = accuracy_score(y_val, preds_log) * 100\n",
        "    f1_log = f1_score(y_val, preds_log)\n",
        "    logistic_accs.append(acc_log)\n",
        "    logistic_f1s.append(f1_log)\n",
        "\n",
        "    # --- KNN (PCA) CV ---\n",
        "    preds_knn = knn_predict(X_tr_pca, y_tr, X_val_pca, k=20)\n",
        "    acc_knn = accuracy_score(y_val, preds_knn) * 100\n",
        "    f1_knn = f1_score(y_val, preds_knn)\n",
        "    knn_accs.append(acc_knn)\n",
        "    knn_f1s.append(f1_knn)\n",
        "\n",
        "    # --- Decision Tree (PCA) CV ---\n",
        "    tree = build_tree(X_tr_pca, y_tr, max_depth=15)\n",
        "    preds_dt = np.array([predict_tree(tree, x) for x in X_val_pca])\n",
        "    acc_dt = accuracy_score(y_val, preds_dt) * 100\n",
        "    f1_dt = f1_score(y_val, preds_dt)\n",
        "    dt_accs.append(acc_dt)\n",
        "    dt_f1s.append(f1_dt)\n",
        "\n",
        "    # --- MLP (PCA) CV ---\n",
        "    mlp = MLPClassifier(**mlp_params)\n",
        "    mlp.fit(X_tr_pca, y_tr)\n",
        "    preds_mlp = mlp.predict(X_val_pca)\n",
        "    acc_mlp = accuracy_score(y_val, preds_mlp) * 100\n",
        "    f1_mlp = f1_score(y_val, preds_mlp)\n",
        "    mlp_accs.append(acc_mlp)\n",
        "    mlp_f1s.append(f1_mlp)\n",
        "\n",
        "# --- 8. 결과 요약 출력 ---\n",
        "print(\"PCA 기반 5-Fold CV 평균 성능 (Accuracy%, F1-score):\")\n",
        "print(f\"Logistic   : Acc = {np.mean(logistic_accs):.2f}%, F1 = {np.mean(logistic_f1s)*100:.2f}%\")\n",
        "print(f\"KNN (k=20) : Acc = {np.mean(knn_accs):.2f}%, F1 = {np.mean(knn_f1s)*100:.2f}%\")\n",
        "print(f\"Decision T : Acc = {np.mean(dt_accs):.2f}%, F1 = {np.mean(dt_f1s)*100:.2f}%\")\n",
        "print(f\"MLP        : Acc = {np.mean(mlp_accs):.2f}%, F1 = {np.mean(mlp_f1s)*100:.2f}%\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "J4phre3DjrEX",
        "outputId": "53b1bdc7-76f6-45b3-f4d4-430bcdef8579"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "PCA 기반 5-Fold CV 평균 성능 (Accuracy%, F1-score):\n",
            "Logistic   : Acc = 79.13%, F1 = 70.91%\n",
            "KNN (k=20) : Acc = 78.45%, F1 = 70.03%\n",
            "Decision T : Acc = 76.31%, F1 = 67.02%\n",
            "MLP        : Acc = 79.13%, F1 = 70.66%\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn.neural_network import MLPClassifier\n",
        "from sklearn.metrics import accuracy_score, f1_score\n",
        "\n",
        "# --- 1. 데이터 로드 & full feature 추출 ---\n",
        "df = pd.read_csv('process1_result.csv')\n",
        "features = ['Sex', 'SibSp', 'Parch', 'Embarked', 'TicketNumeric']\n",
        "X_full = df[features].values    # (n_samples, 5)\n",
        "y_full = df['Survived'].values  # (n_samples,)\n",
        "\n",
        "# --- 2. Stratified 5-Fold 분할 (NumPy만 사용) ---\n",
        "np.random.seed(42)\n",
        "pos_idx = np.where(y_full == 1)[0]\n",
        "neg_idx = np.where(y_full == 0)[0]\n",
        "np.random.shuffle(pos_idx)\n",
        "np.random.shuffle(neg_idx)\n",
        "\n",
        "# 양성/음성 각각 5개 fold로 분할\n",
        "pos_folds = np.array_split(pos_idx, 5)\n",
        "neg_folds = np.array_split(neg_idx, 5)\n",
        "folds = [np.concatenate([pos_folds[i], neg_folds[i]]) for i in range(5)]\n",
        "\n",
        "# --- 3. Logistic SGD 정의 ---\n",
        "def sigmoid(z):\n",
        "    return 1 / (1 + np.exp(-z))\n",
        "\n",
        "def train_logistic_sgd(X, y, lr=0.001, epochs=100):\n",
        "    m, d = X.shape\n",
        "    w = np.zeros(d)\n",
        "    b = 0.0\n",
        "    for _ in range(epochs):\n",
        "        for i in range(m):\n",
        "            xi, yi = X[i], y[i]\n",
        "            z = xi.dot(w) + b\n",
        "            h = sigmoid(z)\n",
        "            delta = h - yi\n",
        "            w -= lr * delta * xi\n",
        "            b -= lr * delta\n",
        "    return w, b\n",
        "\n",
        "def predict_logistic(w, b, X):\n",
        "    probs = sigmoid(X.dot(w) + b)\n",
        "    return (probs >= 0.5).astype(int)\n",
        "\n",
        "# --- 4. KNN 정의 ---\n",
        "def euclid_dist_matrix(A, B):\n",
        "    return np.sqrt(((A[:, None, :] - B[None, :, :]) ** 2).sum(axis=2))\n",
        "\n",
        "def knn_predict(train_X, train_y, test_X, k=20):\n",
        "    D = euclid_dist_matrix(test_X, train_X)\n",
        "    neigh = np.argpartition(D, k, axis=1)[:, :k]\n",
        "    preds = []\n",
        "    for idxs in neigh:\n",
        "        counts = np.bincount(train_y[idxs])\n",
        "        preds.append(np.argmax(counts))\n",
        "    return np.array(preds)\n",
        "\n",
        "# --- 5. Decision Tree 정의 ---\n",
        "def gini(labels):\n",
        "    classes, counts = np.unique(labels, return_counts=True)\n",
        "    p = counts / counts.sum()\n",
        "    return 1.0 - np.sum(p ** 2)\n",
        "\n",
        "def weighted_gini(col, labels, t):\n",
        "    left  = labels[col <= t]\n",
        "    right = labels[col > t]\n",
        "    if len(left) == 0 or len(right) == 0:\n",
        "        return None\n",
        "    n = len(labels)\n",
        "    return (len(left)/n)*gini(left) + (len(right)/n)*gini(right)\n",
        "\n",
        "def find_best_split(X, y):\n",
        "    best_gain, best_feat, best_t = 0.0, None, None\n",
        "    parent = gini(y)\n",
        "    for feat in range(X.shape[1]):\n",
        "        vals = np.unique(X[:, feat])\n",
        "        thresholds = (vals[:-1] + vals[1:]) / 2.0\n",
        "        for t in thresholds:\n",
        "            wg = weighted_gini(X[:, feat], y, t)\n",
        "            if wg is None:\n",
        "                continue\n",
        "            gain = parent - wg\n",
        "            if gain > best_gain:\n",
        "                best_gain, best_feat, best_t = gain, feat, t\n",
        "    return best_feat, best_t\n",
        "\n",
        "def build_tree(X, y, depth=0, max_depth=15):\n",
        "    if len(np.unique(y)) == 1 or depth == max_depth:\n",
        "        vals, cnts = np.unique(y, return_counts=True)\n",
        "        return {'leaf': True, 'pred': vals[np.argmax(cnts)]}\n",
        "    feat, thresh = find_best_split(X, y)\n",
        "    if feat is None:\n",
        "        vals, cnts = np.unique(y, return_counts=True)\n",
        "        return {'leaf': True, 'pred': vals[np.argmax(cnts)]}\n",
        "    mask = X[:, feat] <= thresh\n",
        "    left  = build_tree(X[mask], y[mask], depth+1, max_depth)\n",
        "    right = build_tree(X[~mask], y[~mask], depth+1, max_depth)\n",
        "    return {'leaf': False, 'feat': feat, 'thresh': thresh, 'left': left, 'right': right}\n",
        "\n",
        "def predict_tree(tree, x):\n",
        "    if tree['leaf']:\n",
        "        return tree['pred']\n",
        "    if x[tree['feat']] <= tree['thresh']:\n",
        "        return predict_tree(tree['left'], x)\n",
        "    else:\n",
        "        return predict_tree(tree['right'], x)\n",
        "\n",
        "# --- 6. MLPClassifier 설정 (고정 옵션) ---\n",
        "mlp_params = {\n",
        "    'hidden_layer_sizes': (32,),\n",
        "    'activation': 'relu',\n",
        "    'solver': 'adam',\n",
        "    'learning_rate': 'constant',\n",
        "    'learning_rate_init': 0.005,\n",
        "    'alpha': 1e-4,\n",
        "    'batch_size': 32,\n",
        "    'max_iter': 300,\n",
        "    'shuffle': True,\n",
        "    'random_state': 42,\n",
        "    'early_stopping': True,\n",
        "    'validation_fraction': 0.1,\n",
        "    'n_iter_no_change': 10\n",
        "}\n",
        "\n",
        "# --- 7. 5-Fold CV: LDA → 각 모델 평가 (Accuracy + F1) ---\n",
        "logistic_accs = []; logistic_f1s = []\n",
        "knn_accs      = []; knn_f1s      = []\n",
        "dt_accs       = []; dt_f1s       = []\n",
        "mlp_accs      = []; mlp_f1s      = []\n",
        "\n",
        "for i in range(5):\n",
        "    # 7-1. 학습/검증 인덱스 분리\n",
        "    val_idx = folds[i]\n",
        "    train_idx = np.concatenate([folds[j] for j in range(5) if j != i])\n",
        "\n",
        "    X_tr, y_tr = X_full[train_idx], y_full[train_idx]\n",
        "    X_val, y_val = X_full[val_idx], y_full[val_idx]\n",
        "\n",
        "    # 7-2. 스케일링: Train 기준 평균/표준편차 계산\n",
        "    means = X_tr.mean(axis=0)\n",
        "    stds  = X_tr.std(axis=0)\n",
        "    stds[stds == 0] = 1.0\n",
        "\n",
        "    X_tr_s  = (X_tr - means) / stds\n",
        "    X_val_s = (X_val - means) / stds\n",
        "\n",
        "    # --- 7-3. LDA 계산 (Train 기반) ---\n",
        "    mu0 = X_tr_s[y_tr == 0].mean(axis=0)\n",
        "    mu1 = X_tr_s[y_tr == 1].mean(axis=0)\n",
        "\n",
        "    d = X_tr_s.shape[1]\n",
        "    SW = np.zeros((d, d))\n",
        "    for x_i, y_i in zip(X_tr_s, y_tr):\n",
        "        center = mu1 if y_i == 1 else mu0\n",
        "        diff = (x_i - center).reshape(-1, 1)\n",
        "        SW += diff.dot(diff.T)\n",
        "\n",
        "    w_fld = np.linalg.inv(SW).dot(mu1 - mu0)\n",
        "    w_fld /= np.linalg.norm(w_fld)\n",
        "\n",
        "    X_tr_lda  = X_tr_s.dot(w_fld).reshape(-1, 1)  # (n_train_fold, 1)\n",
        "    X_val_lda = X_val_s.dot(w_fld).reshape(-1, 1) # (n_val_fold,   1)\n",
        "\n",
        "    # --- Logistic (LDA) CV ---\n",
        "    w, b = train_logistic_sgd(X_tr_lda, y_tr, lr=0.001, epochs=100)\n",
        "    preds_log = predict_logistic(w, b, X_val_lda)\n",
        "    acc_log = accuracy_score(y_val, preds_log) * 100\n",
        "    f1_log = f1_score(y_val, preds_log)\n",
        "    logistic_accs.append(acc_log)\n",
        "    logistic_f1s.append(f1_log)\n",
        "\n",
        "    # --- KNN (LDA) CV ---\n",
        "    preds_knn = knn_predict(X_tr_lda, y_tr, X_val_lda, k=20)\n",
        "    acc_knn = accuracy_score(y_val, preds_knn) * 100\n",
        "    f1_knn = f1_score(y_val, preds_knn)\n",
        "    knn_accs.append(acc_knn)\n",
        "    knn_f1s.append(f1_knn)\n",
        "\n",
        "    # --- Decision Tree (LDA) CV ---\n",
        "    tree = build_tree(X_tr_lda, y_tr, max_depth=15)\n",
        "    preds_dt = np.array([predict_tree(tree, x) for x in X_val_lda])\n",
        "    acc_dt = accuracy_score(y_val, preds_dt) * 100\n",
        "    f1_dt = f1_score(y_val, preds_dt)\n",
        "    dt_accs.append(acc_dt)\n",
        "    dt_f1s.append(f1_dt)\n",
        "\n",
        "    # --- MLP (LDA) CV ---\n",
        "    mlp = MLPClassifier(**mlp_params)\n",
        "    mlp.fit(X_tr_lda, y_tr)\n",
        "    preds_mlp = mlp.predict(X_val_lda)\n",
        "    acc_mlp = accuracy_score(y_val, preds_mlp) * 100\n",
        "    f1_mlp = f1_score(y_val, preds_mlp)\n",
        "    mlp_accs.append(acc_mlp)\n",
        "    mlp_f1s.append(f1_mlp)\n",
        "\n",
        "# --- 8. 결과 요약 출력 ---\n",
        "print(\"LDA 기반 5-Fold CV 평균 성능 (Accuracy%, F1-score):\")\n",
        "print(f\"Logistic   : Acc = {np.mean(logistic_accs):.2f}%, F1 = {np.mean(logistic_f1s)*100:.2f}%\")\n",
        "print(f\"KNN (k=20) : Acc = {np.mean(knn_accs):.2f}%, F1 = {np.mean(knn_f1s)*100:.2f}%\")\n",
        "print(f\"Decision T : Acc = {np.mean(dt_accs):.2f}%, F1 = {np.mean(dt_f1s)*100:.2f}%\")\n",
        "print(f\"MLP        : Acc = {np.mean(mlp_accs):.2f}%, F1 = {np.mean(mlp_f1s)*100:.2f}%\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FSS2Ep8hkKWh",
        "outputId": "f807edf4-07cf-42aa-8cd5-b931706a8108"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "LDA 기반 5-Fold CV 평균 성능 (Accuracy%, F1-score):\n",
            "Logistic   : Acc = 78.45%, F1 = 70.37%\n",
            "KNN (k=20) : Acc = 78.90%, F1 = 69.47%\n",
            "Decision T : Acc = 76.54%, F1 = 66.45%\n",
            "MLP        : Acc = 78.57%, F1 = 70.48%\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "# --- 1. 데이터 로드 ---\n",
        "# 이미 전처리된 process1_result.csv 파일을 불러옵니다.\n",
        "df = pd.read_csv('process1_result.csv')\n",
        "\n",
        "# --- 2. 상관분석 대상 컬럼 선택 ---\n",
        "# 숫자형 피처들만 골라내되, 예시 이미지처럼 TicketNumeric도 포함합니다.\n",
        "# 필요한 순서에 맞게 컬럼명을 직접 지정해도 되고, 일괄 선택 후 순서 재배열해도 됩니다.\n",
        "cols = [\n",
        "    'PassengerId',\n",
        "    'Survived',\n",
        "    'Pclass',\n",
        "    'Name',           # process1_result에서 Title 인덱스 등 숫자로 인코딩된 컬럼이라 가정\n",
        "    'Sex',            # 0/1로 인코딩된 값\n",
        "    'Age',\n",
        "    'SibSp',\n",
        "    'Parch',\n",
        "    'Fare',\n",
        "    'Embarked',\n",
        "    'TicketNumeric',\n",
        "    'TicketNumeric_Score',   # 숫자형으로 변환된 티켓\n",
        "    'Fare_Score',\n",
        "    'Count',\n",
        "    'Family_Survival_Rate',\n",
        "    'Family_Group',\n",
        "    'SurvivalScore',\n",
        "    'Pclass_Score',\n",
        "    'Name_Score',\n",
        "    'Sex_Score',\n",
        "    'Parch_Score',\n",
        "\n",
        "]\n",
        "\n",
        "# 실제 df에 위 컬럼들이 모두 존재하는지 확인한 후, 없으면 select_dtypes로 숫자형만 뽑아서 순서를 맞춰주시기 바랍니다.\n",
        "df_num = df[cols].copy()\n",
        "\n",
        "# --- 3. 상관계수 계산 ---\n",
        "pearson_corr = df_num.corr(method='pearson')\n",
        "\n",
        "# --- 4. 히트맵 그리기 ---\n",
        "plt.figure(figsize=(16, 14))\n",
        "sns.set(font_scale=1.0)\n",
        "sns.heatmap(\n",
        "    pearson_corr,\n",
        "    annot=True,\n",
        "    fmt=\".2f\",\n",
        "    cmap='RdBu_r',\n",
        "    center=0,\n",
        "    linewidths=0.5,\n",
        "    cbar_kws={'shrink': 0.8, 'label': 'Correlation Coefficient'}\n",
        ")\n",
        "\n",
        "plt.title('Correlation Heatmap (Including Numeric Ticket - pearson)', fontsize=16)\n",
        "plt.xticks(rotation=45, ha='right')\n",
        "plt.yticks(rotation=0)\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "cz52DuVInOQc",
        "outputId": "92685d88-baf3-4862-9c29-8f5aacdf4749"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1600x1400 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn.neural_network import MLPClassifier\n",
        "from sklearn.metrics import accuracy_score\n",
        "\n",
        "# --- 1. 데이터 로드 ---\n",
        "train_df = pd.read_csv('process1_result.csv')  # Train + Test1 (전처리 완료)\n",
        "test_df  = pd.read_csv('process2_result.csv')  # Test2 (전처리 완료)\n",
        "\n",
        "# --- 2. 숫자형 컬럼 중 Train/Test2 공통 컬럼 자동 선택 ---\n",
        "common_cols = set(train_df.columns).intersection(test_df.columns)\n",
        "numeric_train_cols = set(train_df.select_dtypes(include=[np.number]).columns)\n",
        "numeric_test_cols  = set(test_df.select_dtypes(include=[np.number]).columns)\n",
        "\n",
        "# PassengerId와 Survived는 제외하고, 나머지 숫자형 공통 컬럼만 feature_cols로 사용\n",
        "feature_cols = [\n",
        "    c for c in common_cols\n",
        "    if (c in numeric_train_cols and c in numeric_test_cols)\n",
        "    and (c not in ('PassengerId', 'Survived'))\n",
        "]\n",
        "\n",
        "# (디버깅) 뽑힌 피처 확인\n",
        "# print(\"사용할 Full Feature (Train/Test2 공통, 숫자형):\", feature_cols)\n",
        "\n",
        "# --- 3. Train/Label 분리 및 Test2 준비 ---\n",
        "X_full = train_df[feature_cols].values   # (n_samples, n_features)\n",
        "y_full = train_df['Survived'].values     # (n_samples,)\n",
        "\n",
        "X_test2 = test_df[feature_cols].values   # (n_test2, n_features)\n",
        "ids_test2 = test_df['PassengerId'].values\n",
        "\n",
        "# --- 4. Hold-out 분할: Train/Test1 (80:20) ---\n",
        "np.random.seed(42)\n",
        "indices = np.arange(len(X_full))\n",
        "np.random.shuffle(indices)\n",
        "\n",
        "split = int(0.8 * len(indices))\n",
        "train_idx = indices[:split]\n",
        "test1_idx = indices[split:]\n",
        "\n",
        "X_train = X_full[train_idx].copy()\n",
        "y_train = y_full[train_idx]\n",
        "X_test1 = X_full[test1_idx].copy()\n",
        "y_test1 = y_full[test1_idx]\n",
        "\n",
        "# --- 5. 누락값(NaN) 처리 (훈련 데이터 평균으로 채우기) ---\n",
        "# X_train, X_test1, X_test2에 NaN이 있을 경우, 각 열별로 \"X_train의 평균\"으로 대체합니다.\n",
        "col_means = np.nanmean(X_train, axis=0)  # 각 칼럼의 평균 (NaN 무시)\n",
        "\n",
        "# train NA 채우기\n",
        "inds_train_nan = np.isnan(X_train)\n",
        "X_train[inds_train_nan] = np.take(col_means, np.where(inds_train_nan)[1])\n",
        "\n",
        "# test1 NA 채우기\n",
        "inds_test1_nan = np.isnan(X_test1)\n",
        "X_test1[inds_test1_nan] = np.take(col_means, np.where(inds_test1_nan)[1])\n",
        "\n",
        "# test2 NA 채우기\n",
        "inds_test2_nan = np.isnan(X_test2)\n",
        "X_test2[inds_test2_nan] = np.take(col_means, np.where(inds_test2_nan)[1])\n",
        "\n",
        "# --- 6. 스케일링: Train 기준으로 평균/표준편차 계산 후 모두 표준화 ---\n",
        "means = X_train.mean(axis=0)\n",
        "stds  = X_train.std(axis=0)\n",
        "stds[stds == 0] = 1.0  # 표준편차가 0인 피처는 1로 대체\n",
        "\n",
        "X_train_s = (X_train - means) / stds\n",
        "X_test1_s = (X_test1 - means) / stds\n",
        "X_test2_s = (X_test2 - means) / stds\n",
        "\n",
        "# --- 7. Logistic Regression (SGD) 함수 정의 ---\n",
        "def sigmoid(z):\n",
        "    return 1 / (1 + np.exp(-z))\n",
        "\n",
        "def train_logistic_sgd(X, y, lr=0.001, epochs=9):\n",
        "    m, d = X.shape\n",
        "    w = np.zeros(d)\n",
        "    b = 0.0\n",
        "    for _ in range(epochs):\n",
        "        for i in range(m):\n",
        "            xi, yi = X[i], y[i]\n",
        "            z = xi.dot(w) + b\n",
        "            h = sigmoid(z)\n",
        "            delta = h - yi\n",
        "            w -= lr * delta * xi\n",
        "            b -= lr * delta\n",
        "    return w, b\n",
        "\n",
        "def predict_logistic(w, b, X):\n",
        "    probs = sigmoid(X.dot(w) + b)\n",
        "    return (probs >= 0.5).astype(int)\n",
        "\n",
        "# --- 8. KNN (k=20) 함수 정의 ---\n",
        "def euclid_dist_matrix(A, B):\n",
        "    # A: (n_A, d), B: (n_B, d) → 각 A_i, B_j 사이의 Euclidean 거리 매트릭스 (n_A, n_B)\n",
        "    return np.sqrt(((A[:, None, :] - B[None, :, :]) ** 2).sum(axis=2))\n",
        "\n",
        "def knn_predict(train_X, train_y, test_X, k=20):\n",
        "    D = euclid_dist_matrix(test_X, train_X)      # (n_test, n_train) 거리 행렬 계산\n",
        "    neigh_idxs = np.argpartition(D, k, axis=1)[:, :k]  # 각 테스트 샘플별 k개 이웃 인덱스\n",
        "    preds = []\n",
        "    for idxs in neigh_idxs:\n",
        "        counts = np.bincount(train_y[idxs])\n",
        "        preds.append(np.argmax(counts))\n",
        "    return np.array(preds)\n",
        "\n",
        "# --- 9. Decision Tree (max_depth=15) 함수 정의 ---\n",
        "def gini(labels):\n",
        "    classes, counts = np.unique(labels, return_counts=True)\n",
        "    p = counts / counts.sum()\n",
        "    return 1.0 - np.sum(p**2)\n",
        "\n",
        "def weighted_gini(col, labels, t):\n",
        "    left  = labels[col <= t]\n",
        "    right = labels[col >  t]\n",
        "    if len(left) == 0 or len(right) == 0:\n",
        "        return None\n",
        "    n = len(labels)\n",
        "    return (len(left)/n)*gini(left) + (len(right)/n)*gini(right)\n",
        "\n",
        "def find_best_split(X, y):\n",
        "    best_gain, best_feat, best_t = 0.0, None, None\n",
        "    parent = gini(y)\n",
        "    for feat in range(X.shape[1]):\n",
        "        vals = np.unique(X[:, feat])\n",
        "        thresholds = (vals[:-1] + vals[1:]) / 2.0\n",
        "        for t in thresholds:\n",
        "            wg = weighted_gini(X[:, feat], y, t)\n",
        "            if wg is None:\n",
        "                continue\n",
        "            gain = parent - wg\n",
        "            if gain > best_gain:\n",
        "                best_gain, best_feat, best_t = gain, feat, t\n",
        "    return best_feat, best_t\n",
        "\n",
        "def build_tree(X, y, depth=0, max_depth=7):\n",
        "    if len(np.unique(y)) == 1 or depth == max_depth:\n",
        "        vals, counts = np.unique(y, return_counts=True)\n",
        "        return {'leaf': True, 'pred': vals[np.argmax(counts)]}\n",
        "    feat, thresh = find_best_split(X, y)\n",
        "    if feat is None:\n",
        "        vals, counts = np.unique(y, return_counts=True)\n",
        "        return {'leaf': True, 'pred': vals[np.argmax(counts)]}\n",
        "    mask = X[:, feat] <= thresh\n",
        "    left  = build_tree(X[mask], y[mask], depth+1, max_depth)\n",
        "    right = build_tree(X[~mask], y[~mask], depth+1, max_depth)\n",
        "    return {'leaf': False, 'feat': feat, 'thresh': thresh, 'left': left, 'right': right}\n",
        "\n",
        "def predict_tree(tree, x):\n",
        "    if tree['leaf']:\n",
        "        return tree['pred']\n",
        "    if x[tree['feat']] <= tree['thresh']:\n",
        "        return predict_tree(tree['left'], x)\n",
        "    else:\n",
        "        return predict_tree(tree['right'], x)\n",
        "\n",
        "# --- 10. MLPClassifier 설정 (hidden_layer_sizes=(32,), lr=0.005, alpha=1e-4, max_iter=300) ---\n",
        "mlp_params = {\n",
        "    'hidden_layer_sizes': (32,),\n",
        "    'activation': 'relu',\n",
        "    'solver': 'adam',\n",
        "    'learning_rate': 'constant',\n",
        "    'learning_rate_init': 0.005,\n",
        "    'alpha': 1e-4,\n",
        "    'batch_size': 32,\n",
        "    'max_iter': 300,\n",
        "    'shuffle': True,\n",
        "    'random_state': 42,\n",
        "    'early_stopping': True,\n",
        "    'validation_fraction': 0.1,\n",
        "    'n_iter_no_change': 10\n",
        "}\n",
        "\n",
        "# --- 11. 모델 학습 및 Test1(Hold-out) 평가 ---\n",
        "# 11-1. Logistic\n",
        "w_log, b_log = train_logistic_sgd(X_train_s, y_train, lr=0.001, epochs=9)\n",
        "preds_log1  = predict_logistic(w_log, b_log, X_test1_s)\n",
        "acc_log1    = accuracy_score(y_test1, preds_log1) * 100\n",
        "\n",
        "# 11-2. KNN (k=20)\n",
        "preds_knn1  = knn_predict(X_train_s, y_train, X_test1_s, k=20)\n",
        "acc_knn1    = accuracy_score(y_test1, preds_knn1) * 100\n",
        "\n",
        "# 11-3. Decision Tree (max_depth=15)\n",
        "tree = build_tree(X_train_s, y_train, max_depth=7)\n",
        "preds_dt1 = np.array([predict_tree(tree, x) for x in X_test1_s])\n",
        "acc_dt1   = accuracy_score(y_test1, preds_dt1) * 100\n",
        "\n",
        "# 11-4. MLP\n",
        "mlp = MLPClassifier(**mlp_params)\n",
        "mlp.fit(X_train_s, y_train)\n",
        "preds_mlp1 = mlp.predict(X_test1_s)\n",
        "acc_mlp1   = accuracy_score(y_test1, preds_mlp1) * 100\n",
        "\n",
        "print(\"=== Test1 (Hold-out) Accuracy (Full Feature) ===\")\n",
        "print(f\"Logistic   : {acc_log1:.2f}%\")\n",
        "print(f\"KNN (k=20) : {acc_knn1:.2f}%\")\n",
        "print(f\"DecisionT  : {acc_dt1:.2f}%\")\n",
        "print(f\"MLP        : {acc_mlp1:.2f}%\")\n",
        "\n",
        "# --- 12. Test2 예측 및 Submission 파일 생성 ---\n",
        "# 12-1. Logistic Test2 예측\n",
        "preds_log2 = predict_logistic(w_log, b_log, X_test2_s)\n",
        "df_sub_log = pd.DataFrame({'PassengerId': ids_test2, 'Survived': preds_log2})\n",
        "df_sub_log.to_csv('submission_logistic_full33.csv', index=False)\n",
        "\n",
        "# 12-2. KNN Test2 예측\n",
        "preds_knn2 = knn_predict(X_train_s, y_train, X_test2_s, k=20)\n",
        "df_sub_knn = pd.DataFrame({'PassengerId': ids_test2, 'Survived': preds_knn2})\n",
        "df_sub_knn.to_csv('submission_knn_full33.csv', index=False)\n",
        "\n",
        "# 12-3. Decision Tree Test2 예측\n",
        "preds_dt2 = np.array([predict_tree(tree, x) for x in X_test2_s])\n",
        "df_sub_dt = pd.DataFrame({'PassengerId': ids_test2, 'Survived': preds_dt2})\n",
        "df_sub_dt.to_csv('submission_dt_full33.csv', index=False)\n",
        "\n",
        "# 12-4. MLP Test2 예측\n",
        "preds_mlp2 = mlp.predict(X_test2_s)\n",
        "df_sub_mlp = pd.DataFrame({'PassengerId': ids_test2, 'Survived': preds_mlp2})\n",
        "df_sub_mlp.to_csv('submission_mlp_full33.csv', index=False)\n",
        "\n",
        "print(\"\\nSaved files:\")\n",
        "print(\"  - submission_logistic_full33.csv\")\n",
        "print(\"  - submission_knn_full33.csv\")\n",
        "print(\"  - submission_dt_full33.csv\")\n",
        "print(\"  - submission_mlp_full33.csv\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hiBihE83sOOj",
        "outputId": "0c28a9bb-704f-4ac6-eabb-469cf685a3c8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "=== Test1 (Hold-out) Accuracy (Full Feature) ===\n",
            "Logistic   : 96.65%\n",
            "KNN (k=20) : 96.09%\n",
            "DecisionT  : 97.21%\n",
            "MLP        : 97.21%\n",
            "\n",
            "Saved files:\n",
            "  - submission_logistic_full33.csv\n",
            "  - submission_knn_full33.csv\n",
            "  - submission_dt_full33.csv\n",
            "  - submission_mlp_full33.csv\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "\n",
        "# 1. process1_result.csv 불러오기\n",
        "df = pd.read_csv('process1_result.csv')\n",
        "\n",
        "# 2. Pclass별 Age 중앙값 계산\n",
        "median_by_pclass = df.groupby('Pclass')['Age'].median()\n",
        "\n",
        "# 3. Age 결측치가 있으면 Pclass별 중앙값으로 채우기\n",
        "def fill_age(row):\n",
        "    if pd.isna(row['Age']):\n",
        "        return median_by_pclass.loc[row['Pclass']]\n",
        "    else:\n",
        "        return row['Age']\n",
        "\n",
        "df['Age'] = df.apply(fill_age, axis=1)\n",
        "\n",
        "# 4. 혹시 남은 결측치가 있다면 전체 중앙값으로 채우기\n",
        "df['Age'].fillna(df['Age'].median(), inplace=True)\n",
        "\n",
        "# 5. 결과 저장 (원본 덮어쓰기 또는 새로운 파일로 저장)\n",
        "df.to_csv('process1_result.csv', index=False)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kRyKX3Ta06Fv",
        "outputId": "291fa090-a51f-4f5a-d6c8-c9f147be864a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-87-12356d82480a>:20: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n",
            "The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n",
            "\n",
            "For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n",
            "\n",
            "\n",
            "  df['Age'].fillna(df['Age'].median(), inplace=True)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "\n",
        "# 1. 데이터 로드\n",
        "df = pd.read_csv('process1_result.csv')\n",
        "\n",
        "# 2. Sex_bin 컬럼 확인/생성\n",
        "#    - 이미 'Sex_bin'이 있다면 넘어가고, 없으면 만들어 줍니다.\n",
        "if 'Sex_bin' not in df.columns:\n",
        "    # 원본 'Sex'가 'male'/'female'이라면:\n",
        "    if 'Sex' in df.columns:\n",
        "        df['Sex_bin'] = df['Sex'].map({'male': 0, 'female': 1})\n",
        "    else:\n",
        "        raise KeyError(\"`Sex` 컬럼이 없습니다. 'Sex' 컬럼을 먼저 확인하세요.\")\n",
        "\n",
        "# 3. Age 컬럼과 결측치 확인\n",
        "if 'Age' not in df.columns:\n",
        "    raise KeyError(\"`Age` 컬럼이 없습니다.\")\n",
        "# (필요하다면 이 시점에 결측치가 있는지 확인)\n",
        "print(\"Age 결측 개수:\", df['Age'].isna().sum())\n",
        "\n",
        "# 4. AgeBin 생성: 0~10, 10~20, 20~30, …, 80+\n",
        "bins  = list(range(0, 81, 10)) + [np.inf]      # [0,10,20,...,80, inf]\n",
        "labels = [f\"{i}~{i+10}\" for i in range(0, 80, 10)] + ['80+']\n",
        "df['AgeBin'] = pd.cut(df['Age'], bins=bins, labels=labels, right=False)\n",
        "\n",
        "# 5. 그룹별 생존률 계산 전, df에 필요한 컬럼이 모두 들어 있는지 확인\n",
        "needed = {'Sex_bin', 'AgeBin', 'Survived'}\n",
        "missing = needed - set(df.columns)\n",
        "if missing:\n",
        "    raise KeyError(f\"다음 필수 컬럼이 없습니다: {missing}\")\n",
        "\n",
        "# 6. (Sex_bin, AgeBin)별 평균 생존률 계산\n",
        "grp = (\n",
        "    df\n",
        "    .groupby(['Sex_bin', 'AgeBin'], observed=False)['Survived']\n",
        "    .mean()\n",
        "    .reset_index()\n",
        "    .rename(columns={'Survived': 'SurvivalScore'})\n",
        ")\n",
        "\n",
        "print(\"▶ grp 데이터프레임 예시:\")\n",
        "print(grp.head(10))\n",
        "print()\n",
        "\n",
        "# 7. 원본 df에 SurvivalScore 병합\n",
        "df = df.merge(grp, how='left', on=['Sex_bin', 'AgeBin'])\n",
        "\n",
        "# 8. 병합 뒤 NaN 생존확률 확인\n",
        "nan_count = df['SurvivalScore'].isna().sum()\n",
        "print(f\"병합 후 `SurvivalScore` NaN 개수: {nan_count}\")\n",
        "\n",
        "# 9. NaN이 생겼다면 전체 평균생존률로 채우기\n",
        "if nan_count > 0:\n",
        "    overall_mean = df['Survived'].mean()\n",
        "    df['SurvivalScore'] = df['SurvivalScore'].fillna(overall_mean)\n",
        "    print(f\"NaN {nan_count}개를 전체 평균생존률({overall_mean:.4f})로 대체했습니다.\")\n",
        "\n",
        "# 10. 최종 컬럼 확인과 샘플 출력\n",
        "print(\"\\n최종 df 컬럼 목록:\")\n",
        "print(df.columns.tolist())\n",
        "print(\"\\nSex_bin, Age, AgeBin, SurvivalScore 샘플 20개:\")\n",
        "print(df[['Sex_bin','Age','AgeBin','SurvivalScore']].head(20))\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 685
        },
        "id": "fSfdK78q1dVN",
        "outputId": "ece3a7b7-2779-4cf2-87ac-9e850f70930f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Age 결측 개수: 0\n",
            "▶ grp 데이터프레임 예시:\n",
            "Empty DataFrame\n",
            "Columns: [Sex_bin, AgeBin, SurvivalScore]\n",
            "Index: []\n",
            "\n"
          ]
        },
        {
          "output_type": "error",
          "ename": "KeyError",
          "evalue": "'SurvivalScore'",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3804\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3805\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3806\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32mindex.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32mindex.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;31mKeyError\u001b[0m: 'SurvivalScore'",
            "\nThe above exception was the direct cause of the following exception:\n",
            "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-89-aca6a8e177ae>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     48\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     49\u001b[0m \u001b[0;31m# 8. 병합 뒤 NaN 생존확률 확인\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 50\u001b[0;31m \u001b[0mnan_count\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'SurvivalScore'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0misna\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     51\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"병합 후 `SurvivalScore` NaN 개수: {nan_count}\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     52\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   4100\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnlevels\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4101\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_getitem_multilevel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4102\u001b[0;31m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4103\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mis_integer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4104\u001b[0m                 \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3810\u001b[0m             ):\n\u001b[1;32m   3811\u001b[0m                 \u001b[0;32mraise\u001b[0m \u001b[0mInvalidIndexError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3812\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3813\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3814\u001b[0m             \u001b[0;31m# If we have a listlike key, _check_indexing_error will raise\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyError\u001b[0m: 'SurvivalScore'"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# 1. process1_result.csv 로드 (이미 Age, Sex 등 전처리 완료된 상태)\n",
        "df = pd.read_csv('process1_result.csv')\n",
        "\n",
        "# 2. 사용 가능한 숫자형 피처만 추리기 (PassengerId, Survived 제외)\n",
        "numeric_cols = df.select_dtypes(include=[np.number]).columns.tolist()\n",
        "features = [c for c in numeric_cols if c not in ['PassengerId', 'Survived']]\n",
        "\n",
        "# 3. X (입력), y (클래스)\n",
        "X = df[features].values\n",
        "y = df['Survived'].values\n",
        "\n",
        "# 4. Z-score 표준화 (평균 0, 표준편차 1)\n",
        "means = X.mean(axis=0)\n",
        "stds  = X.std(axis=0)\n",
        "stds[stds == 0] = 1.0\n",
        "Z = (X - means) / stds\n",
        "\n",
        "# 5. SW (within-class scatter) 계산\n",
        "classes = np.unique(y)\n",
        "d = Z.shape[1]\n",
        "SW = np.zeros((d, d))\n",
        "for cls in classes:\n",
        "    Z_cls = Z[y == cls]\n",
        "    mean_cls = Z_cls.mean(axis=0)\n",
        "    diff = Z_cls - mean_cls\n",
        "    SW += diff.T.dot(diff)\n",
        "\n",
        "# 6. SB (between-class scatter) 계산\n",
        "mean_global = Z.mean(axis=0)\n",
        "SB = np.zeros((d, d))\n",
        "for cls in classes:\n",
        "    Z_cls = Z[y == cls]\n",
        "    n_cls = Z_cls.shape[0]\n",
        "    mean_cls = Z_cls.mean(axis=0)\n",
        "    diff_mean = (mean_cls - mean_global).reshape(-1, 1)\n",
        "    SB += n_cls * diff_mean.dot(diff_mean.T)\n",
        "\n",
        "# 7. 일반화된 고유값 문제 풀기: inv(SW) * SB\n",
        "eigvals, eigvecs = np.linalg.eig(np.linalg.inv(SW).dot(SB))\n",
        "\n",
        "# 8. 고유값을 실수부만 뽑아내고 내림차순 정렬\n",
        "eigvals_real = np.real(eigvals)\n",
        "sorted_idx   = np.argsort(eigvals_real)[::-1]\n",
        "eigvals_sorted = eigvals_real[sorted_idx]\n",
        "\n",
        "# 9. 고유값 그래프 그리기\n",
        "plt.figure(figsize=(6, 4))\n",
        "plt.plot(range(1, len(eigvals_sorted) + 1), eigvals_sorted, marker='o')\n",
        "plt.title('LDA Eigenvalues')\n",
        "plt.xlabel('Component Index')\n",
        "plt.ylabel('Eigenvalue (Descending)')\n",
        "plt.xticks(range(1, len(eigvals_sorted) + 1))\n",
        "plt.grid(True)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        },
        "id": "X_jLASMvpr6E",
        "outputId": "d249412f-75be-4a5c-bdde-daf79e6d3703"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "test2의 결과를 올리기 위한 코드들, test1의 정확도는 어느정도 포기하고, test2의 결과를 최대한 끌어 올려야 한다.\n",
        "\n",
        "사용하고 있는 피쳐\n",
        "> ['Sex', 'SibSp', 'Parch', 'Embarked', 'TicketNumeric']\n",
        "\n",
        "사용하는 이유는, 모든 타이틀에 대해서 상관관계를 구한 뒤에, survival rate를 구하고 threshold를 통해 survived를 나눈 뒤 submission 작성, 이후 test2의 acc가 가장 높은 5개에 대해서\n",
        "test2의 결과가 가장 좋았던 피쳐를 골랐던 것이다.\n",
        "\n",
        "\n",
        "2025에는\n",
        "여기에서 판별식을 바꿔보거나,\n",
        "피쳐의 차원을 축소하거나,\n",
        "k-fold를 진행해서 결과를 뽑았다.\n",
        "\n",
        "결과적으로 test1보다 test2에서 acc가 낮은 모습을 보여줬고(full feature 기준),\n",
        "이는 과적합이라고 판단할 수 있다.\n",
        "\n",
        "log, dt, knn에서 과적합을 피하기 위해 일정 수렴하는 값에 도달하기 이전에 멈춘다거나,\n",
        "dt의 depth를 줄인다거나 여러가지를 동원해봤으나 유의미한 결과가 나오진 않았다.\n",
        "\n",
        "또한. pca와 fld의 차원 축소로 나오는 eigenvalue의 그래프를 그렸을 때, 차원을 축소하지 않았을 때의 값이 가장 좋았기 때문에 근본적으로 피쳐를 고르는데에\n",
        "포커스를 두어야 한다고 생각한다.\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "1. full title(전처리한 모든 데이터들에 대해 - process1_result) 을 통해 test1의 acc를 구했을 때, full feature기준 모두 95%를 넘는 모습을 보이고 있다.\n",
        "test2의 결과는 73~75%를 웃돈다.\n",
        "\n",
        "이는 굉장히 심각한 과적합이라고 생각되고 있고,\n",
        "극단적으로 기준점을 낮춘 뒤. (즉 dt에서의 depth나, log의 반복횟수같은 것들) 어떠한 일정한 값에서 test1보다 test2의 결과가 올라가는 지점. 을 찾아야 함을 의미한다.\n",
        "\n",
        "\n",
        "2. k-fold의 acc가 올라가는 점을 찾는 것이 힌트라고 하였는데, full title에 대한 k-fold 를 먼저 진행한 뒤에 기존에 5개의 피쳐에서 진행한 k-fold acc의 결과와 비교가 필요함을 의미한다.\n",
        "\n",
        "\n",
        "3. 모든 케이스에 대해 캐글 사이트에 요청할 수 없으므로, test1-acc의 결과가 가장 좋은 1가지(예. full feature, MLP) 를 선택하여 효율적으로 요청을 해야한다.\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "ULcPdiZl4S4N"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn.neural_network import MLPClassifier\n",
        "from sklearn.metrics import accuracy_score\n",
        "\n",
        "# --- 1. 데이터 로드 & 피처 선택 ---\n",
        "train_df = pd.read_csv('process1_result.csv')\n",
        "test_df  = pd.read_csv('process2_result.csv')\n",
        "\n",
        "common = set(train_df.columns).intersection(test_df.columns)\n",
        "num_tr = set(train_df.select_dtypes(include=[np.number]).columns)\n",
        "num_te = set(test_df.select_dtypes(include=[np.number]).columns)\n",
        "feature_cols = [\n",
        "    c for c in common\n",
        "    if c in num_tr and c in num_te and c not in ('PassengerId','Survived')\n",
        "]\n",
        "\n",
        "X_full   = train_df[feature_cols].values\n",
        "y_full   = train_df['Survived'].values\n",
        "X_test2  = test_df[feature_cols].values\n",
        "ids_test2 = test_df['PassengerId'].values\n",
        "\n",
        "# --- 2. 결측치 처리 & 스케일링 (Full 기준) ---\n",
        "col_means = np.nanmean(X_full, axis=0)\n",
        "# Impute\n",
        "inds = np.isnan(X_full)\n",
        "X_full[inds] = np.take(col_means, np.where(inds)[1])\n",
        "inds2 = np.isnan(X_test2)\n",
        "X_test2[inds2] = np.take(col_means, np.where(inds2)[1])\n",
        "# Scale\n",
        "means = X_full.mean(axis=0)\n",
        "stds  = X_full.std(axis=0)\n",
        "stds[stds==0] = 1.0\n",
        "X_full_s  = (X_full  - means) / stds\n",
        "X_test2_s = (X_test2 - means) / stds\n",
        "\n",
        "# --- 3. 모델 구현 함수들 ---\n",
        "\n",
        "# 3.1 Logistic SGD\n",
        "def sigmoid(z): return 1 / (1 + np.exp(-z))\n",
        "\n",
        "def train_logistic_sgd(X, y, lr, epochs):\n",
        "    m, d = X.shape\n",
        "    w = np.zeros(d); b = 0.0\n",
        "    for _ in range(epochs):\n",
        "        for i in range(m):\n",
        "            xi, yi = X[i], y[i]\n",
        "            delta = sigmoid(xi.dot(w)+b) - yi\n",
        "            w -= lr * delta * xi\n",
        "            b -= lr * delta\n",
        "    return w, b\n",
        "\n",
        "def predict_logistic(model, X):\n",
        "    w, b = model\n",
        "    return (sigmoid(X.dot(w)+b) >= 0.5).astype(int)\n",
        "\n",
        "# 3.2 KNN\n",
        "def euclid_dist_matrix(A, B):\n",
        "    return np.sqrt(((A[:,None,:] - B[None,:,:])**2).sum(axis=2))\n",
        "\n",
        "def knn_predict(train_X, train_y, test_X, k):\n",
        "    D = euclid_dist_matrix(test_X, train_X)\n",
        "    idxs = np.argpartition(D, k, axis=1)[:,:k]\n",
        "    preds = [np.bincount(train_y[i]).argmax() for i in idxs]\n",
        "    return np.array(preds)\n",
        "\n",
        "# 3.3 Decision Tree\n",
        "def gini(labels):\n",
        "    _, counts = np.unique(labels, return_counts=True)\n",
        "    p = counts/counts.sum()\n",
        "    return 1 - (p**2).sum()\n",
        "\n",
        "def weighted_gini(col, labels, t):\n",
        "    l = labels[col <= t]; r = labels[col > t]\n",
        "    if len(l)==0 or len(r)==0: return None\n",
        "    n = len(labels)\n",
        "    return len(l)/n*gini(l) + len(r)/n*gini(r)\n",
        "\n",
        "def find_best_split(X, y):\n",
        "    parent = gini(y)\n",
        "    best = (0, None, None)\n",
        "    for f in range(X.shape[1]):\n",
        "        vals = np.unique(X[:,f])\n",
        "        for t in (vals[:-1]+vals[1:])/2:\n",
        "            wg = weighted_gini(X[:,f], y, t)\n",
        "            if wg is None: continue\n",
        "            gain = parent - wg\n",
        "            if gain > best[0]:\n",
        "                best = (gain, f, t)\n",
        "    return best[1], best[2]\n",
        "\n",
        "def build_tree(X, y, depth=0, max_depth=7):\n",
        "    if len(np.unique(y))==1 or depth==max_depth:\n",
        "        vals, cnts = np.unique(y, return_counts=True)\n",
        "        return {'leaf':True, 'pred':vals[cnts.argmax()]}\n",
        "    feat, thresh = find_best_split(X, y)\n",
        "    if feat is None:\n",
        "        vals, cnts = np.unique(y, return_counts=True)\n",
        "        return {'leaf':True, 'pred':vals[cnts.argmax()]}\n",
        "    mask = X[:,feat] <= thresh\n",
        "    left  = build_tree(X[mask],    y[mask],    depth+1, max_depth)\n",
        "    right = build_tree(X[~mask],   y[~mask],   depth+1, max_depth)\n",
        "    return {'leaf':False, 'feat':feat, 'thresh':thresh, 'left':left, 'right':right}\n",
        "\n",
        "def predict_tree(tree, x):\n",
        "    if tree['leaf']: return tree['pred']\n",
        "    if x[tree['feat']] <= tree['thresh']:\n",
        "        return predict_tree(tree['left'], x)\n",
        "    else:\n",
        "        return predict_tree(tree['right'], x)\n",
        "\n",
        "# 3.4 Wrappers for CV\n",
        "def build_log_wrapper(X,y,lr,epochs): return train_logistic_sgd(X,y,lr,epochs)\n",
        "def pred_log_wrapper(m, X): return predict_logistic(m, X)\n",
        "\n",
        "def build_knn_wrapper(X,y,k): return (X,y,k)\n",
        "def pred_knn_wrapper(m, X): return knn_predict(m[0], m[1], X, m[2])\n",
        "\n",
        "def build_dt_wrapper(X,y,max_depth): return build_tree(X,y,0,max_depth)\n",
        "def pred_dt_wrapper(m, X): return np.array([predict_tree(m,x) for x in X])\n",
        "\n",
        "def build_mlp_wrapper(X,y,hidden_layer_sizes,learning_rate_init):\n",
        "    mlp = MLPClassifier(\n",
        "        hidden_layer_sizes=hidden_layer_sizes,\n",
        "        learning_rate_init=learning_rate_init,\n",
        "        max_iter=300, early_stopping=True,\n",
        "        random_state=42\n",
        "    )\n",
        "    mlp.fit(X, y)\n",
        "    return mlp\n",
        "def pred_mlp_wrapper(m, X): return m.predict(X)\n",
        "\n",
        "# --- 4. K-Fold CV 구현 ---\n",
        "def get_folds(n, k=5, seed=42):\n",
        "    rng = np.random.RandomState(seed)\n",
        "    idx = np.arange(n); rng.shuffle(idx)\n",
        "    sizes = np.full(k, n//k, int)\n",
        "    sizes[:n%k] += 1\n",
        "    folds, start = [], 0\n",
        "    for sz in sizes:\n",
        "        folds.append(idx[start:start+sz]); start+=sz\n",
        "    return folds\n",
        "\n",
        "def k_fold_cv(X, y, build_fn, pred_fn, param_grid, k=5):\n",
        "    import itertools\n",
        "    best = {'score':-1, 'params':None}\n",
        "    folds = get_folds(len(y), k)\n",
        "    for combo in itertools.product(*param_grid.values()):\n",
        "        params = dict(zip(param_grid.keys(), combo))\n",
        "        scores = []\n",
        "        for i in range(k):\n",
        "            val_idx = folds[i]\n",
        "            tr_idx  = np.hstack([folds[j] for j in range(k) if j!=i])\n",
        "            X_tr, y_tr = X[tr_idx], y[tr_idx]\n",
        "            X_va, y_va = X[val_idx], y[val_idx]\n",
        "            model = build_fn(X_tr, y_tr, **params)\n",
        "            y_pr  = pred_fn(model, X_va)\n",
        "            scores.append(accuracy_score(y_va, y_pr))\n",
        "        avg = np.mean(scores)\n",
        "        print(f\"{build_fn.__name__} {params} → CV acc {avg:.4f}\")\n",
        "        if avg > best['score']:\n",
        "            best.update({'score':avg, 'params':params})\n",
        "    print(\"▶ Best:\", best, \"\\n\")\n",
        "    return best\n",
        "\n",
        "# --- 5. 각 모델별 CV 탐색 ---\n",
        "best_log = k_fold_cv(\n",
        "    X_full_s, y_full,\n",
        "    build_log_wrapper, pred_log_wrapper,\n",
        "    param_grid={'lr':[0.001,0.005],'epochs':[5,10]},\n",
        "    k=5\n",
        ")\n",
        "\n",
        "best_knn = k_fold_cv(\n",
        "    X_full_s, y_full,\n",
        "    build_knn_wrapper, pred_knn_wrapper,\n",
        "    param_grid={'k':[5,10,15,20]},\n",
        "    k=5\n",
        ")\n",
        "\n",
        "best_dt = k_fold_cv(\n",
        "    X_full_s, y_full,\n",
        "    build_dt_wrapper, pred_dt_wrapper,\n",
        "    param_grid={'max_depth':[3,5,7,9]},\n",
        "    k=5\n",
        ")\n",
        "\n",
        "best_mlp = k_fold_cv(\n",
        "    X_full_s, y_full,\n",
        "    build_mlp_wrapper, pred_mlp_wrapper,\n",
        "    param_grid={'hidden_layer_sizes':[(16,),(32,)],'learning_rate_init':[0.001,0.005]},\n",
        "    k=5\n",
        ")\n",
        "\n",
        "# --- 6. CV 최고 모델 선택 & Test2 예측 ---\n",
        "results = {\n",
        "    'logistic': best_log,\n",
        "    'knn'     : best_knn,\n",
        "    'dt'      : best_dt,\n",
        "    'mlp'     : best_mlp\n",
        "}\n",
        "best_model = max(results, key=lambda m: results[m]['score'])\n",
        "print(\"=== Selected model:\", best_model, results[best_model], \"===\\n\")\n",
        "\n",
        "if best_model == 'logistic':\n",
        "    w,b = train_logistic_sgd(X_full_s, y_full, **results['logistic']['params'])\n",
        "    preds = predict_logistic((w,b), X_test2_s)\n",
        "elif best_model == 'knn':\n",
        "    params = results['knn']['params']\n",
        "    preds = knn_predict(X_full_s, y_full, X_test2_s, **params)\n",
        "elif best_model == 'dt':\n",
        "    params = results['dt']['params']\n",
        "    tree = build_tree(X_full_s, y_full, 0, **params)\n",
        "    preds = np.array([predict_tree(tree, x) for x in X_test2_s])\n",
        "else:  # mlp\n",
        "    params = results['mlp']['params']\n",
        "    mlp = MLPClassifier(\n",
        "        max_iter=300, early_stopping=True, random_state=42,\n",
        "        **params\n",
        "    ).fit(X_full_s, y_full)\n",
        "    preds = mlp.predict(X_test2_s)\n",
        "\n",
        "# --- 7. Submission 파일 생성 ---\n",
        "submission = pd.DataFrame({'PassengerId': ids_test2, 'Survived': preds})\n",
        "submission.to_csv('final_submission.csv', index=False)\n",
        "print(\"Saved → final_submission.csv\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "STGIbuVPMlLU",
        "outputId": "588d0cba-d38b-4c79-c83a-89ac4e6cd301"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "build_log_wrapper {'lr': 0.001, 'epochs': 5} → CV acc 0.9517\n",
            "build_log_wrapper {'lr': 0.001, 'epochs': 10} → CV acc 0.9585\n",
            "build_log_wrapper {'lr': 0.005, 'epochs': 5} → CV acc 0.9641\n",
            "build_log_wrapper {'lr': 0.005, 'epochs': 10} → CV acc 0.9697\n",
            "▶ Best: {'score': 0.9696691984181782, 'params': {'lr': 0.005, 'epochs': 10}} \n",
            "\n",
            "build_knn_wrapper {'k': 5} → CV acc 0.9506\n",
            "build_knn_wrapper {'k': 10} → CV acc 0.9528\n",
            "build_knn_wrapper {'k': 15} → CV acc 0.9551\n",
            "build_knn_wrapper {'k': 20} → CV acc 0.9517\n",
            "▶ Best: {'score': 0.9550750109848722, 'params': {'k': 15}} \n",
            "\n",
            "build_dt_wrapper {'max_depth': 3} → CV acc 0.9641\n",
            "build_dt_wrapper {'max_depth': 5} → CV acc 0.9596\n",
            "build_dt_wrapper {'max_depth': 7} → CV acc 0.9528\n",
            "build_dt_wrapper {'max_depth': 9} → CV acc 0.9528\n",
            "▶ Best: {'score': 0.9640700520996799, 'params': {'max_depth': 3}} \n",
            "\n",
            "build_mlp_wrapper {'hidden_layer_sizes': (16,), 'learning_rate_init': 0.001} → CV acc 0.9046\n",
            "build_mlp_wrapper {'hidden_layer_sizes': (16,), 'learning_rate_init': 0.005} → CV acc 0.9629\n",
            "build_mlp_wrapper {'hidden_layer_sizes': (32,), 'learning_rate_init': 0.001} → CV acc 0.9147\n",
            "build_mlp_wrapper {'hidden_layer_sizes': (32,), 'learning_rate_init': 0.005} → CV acc 0.9551\n",
            "▶ Best: {'score': 0.9629401795241982, 'params': {'hidden_layer_sizes': (16,), 'learning_rate_init': 0.005}} \n",
            "\n",
            "=== Selected model: logistic {'score': 0.9696691984181782, 'params': {'lr': 0.005, 'epochs': 10}} ===\n",
            "\n",
            "Saved → final_submission.csv\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn.neural_network import MLPClassifier\n",
        "from sklearn.metrics import accuracy_score\n",
        "\n",
        "# --- 1. 데이터 로드 & 사용할 피처 지정 ---\n",
        "train_df = pd.read_csv('process1_result.csv')\n",
        "test_df  = pd.read_csv('process2_result.csv')\n",
        "\n",
        "features = [\n",
        "    'Sex','Pclass','Name','Family_Group','Embarked'\n",
        "]\n",
        "n_feat = len(features)\n",
        "\n",
        "X_full  = train_df[features].values\n",
        "y_full  = train_df['Survived'].values\n",
        "X_test2 = test_df[features].values\n",
        "ids_test2 = test_df['PassengerId'].values\n",
        "\n",
        "# --- 2. 결측치 처리 & 스케일링 ---\n",
        "col_means = np.nanmean(X_full, axis=0)\n",
        "mask_full = np.isnan(X_full)\n",
        "X_full[mask_full] = np.take(col_means, np.where(mask_full)[1])\n",
        "mask_t2 = np.isnan(X_test2)\n",
        "X_test2[mask_t2] = np.take(col_means, np.where(mask_t2)[1])\n",
        "\n",
        "means = X_full.mean(axis=0)\n",
        "stds  = X_full.std(axis=0)\n",
        "stds[stds == 0] = 1.0\n",
        "X_full_s  = (X_full  - means) / stds\n",
        "X_test2_s = (X_test2 - means) / stds\n",
        "\n",
        "# --- 3. 5-Fold 인덱스 생성 (NumPy만) ---\n",
        "def get_folds(n, k=5, seed=42):\n",
        "    rng = np.random.RandomState(seed)\n",
        "    idx = np.arange(n)\n",
        "    rng.shuffle(idx)\n",
        "    sizes = np.full(k, n // k, int)\n",
        "    sizes[:n % k] += 1\n",
        "    folds, start = [], 0\n",
        "    for sz in sizes:\n",
        "        folds.append(idx[start:start+sz])\n",
        "        start += sz\n",
        "    return folds\n",
        "\n",
        "folds = get_folds(len(y_full), k=5, seed=42)\n",
        "\n",
        "# --- 4. 모델 구현 (기존 코드 그대로) ---\n",
        "def sigmoid(z): return 1/(1+np.exp(-z))\n",
        "def train_logistic_sgd(X,y,lr,epochs):\n",
        "    m,d = X.shape; w=np.zeros(d); b=0.0\n",
        "    for _ in range(epochs):\n",
        "        for i in range(m):\n",
        "            xi, yi = X[i], y[i]\n",
        "            delta = sigmoid(xi.dot(w)+b)-yi\n",
        "            w -= lr*delta*xi; b -= lr*delta\n",
        "    return w,b\n",
        "def predict_logistic(model, X):\n",
        "    w,b = model\n",
        "    return (sigmoid(X.dot(w)+b)>=0.5).astype(int)\n",
        "\n",
        "def euclid_dist_matrix(A,B):\n",
        "    return np.sqrt(((A[:,None,:]-B[None,:,:])**2).sum(axis=2))\n",
        "def knn_predict(TR_X,TR_y,TE_X,k):\n",
        "    D = euclid_dist_matrix(TE_X,TR_X)\n",
        "    neigh = np.argpartition(D, k, axis=1)[:,:k]\n",
        "    return np.array([np.bincount(TR_y[idx]).argmax() for idx in neigh])\n",
        "\n",
        "def gini(labels):\n",
        "    _,cnt = np.unique(labels,return_counts=True)\n",
        "    p = cnt/cnt.sum(); return 1-(p**2).sum()\n",
        "def weighted_gini(col,labels,t):\n",
        "    l=labels[col<=t]; r=labels[col>t]\n",
        "    if len(l)==0 or len(r)==0: return None\n",
        "    n=len(labels)\n",
        "    return len(l)/n*gini(l)+len(r)/n*gini(r)\n",
        "def find_best_split(X,y):\n",
        "    parent=gini(y); best=(0,None,None)\n",
        "    for f in range(X.shape[1]):\n",
        "        vals=np.unique(X[:,f]); ths=(vals[:-1]+vals[1:])/2\n",
        "        for t in ths:\n",
        "            wg=weighted_gini(X[:,f],y,t)\n",
        "            if wg is None: continue\n",
        "            gain=parent-wg\n",
        "            if gain>best[0]: best=(gain,f,t)\n",
        "    return best[1],best[2]\n",
        "def build_tree(X,y,depth=0,max_depth=15):\n",
        "    if len(np.unique(y))==1 or depth==max_depth:\n",
        "        vals,cnt=np.unique(y,return_counts=True)\n",
        "        return {'leaf':True,'pred':vals[cnt.argmax()]}\n",
        "    feat,th=find_best_split(X,y)\n",
        "    if feat is None:\n",
        "        vals,cnt=np.unique(y,return_counts=True)\n",
        "        return {'leaf':True,'pred':vals[cnt.argmax()]}\n",
        "    mask=X[:,feat]<=th\n",
        "    return {\n",
        "      'leaf':False,'feat':feat,'thresh':th,\n",
        "      'left': build_tree(X[mask],y[mask],depth+1,max_depth),\n",
        "      'right':build_tree(X[~mask],y[~mask],depth+1,max_depth)\n",
        "    }\n",
        "def predict_tree(tree,x):\n",
        "    if tree['leaf']: return tree['pred']\n",
        "    branch = 'left' if x[tree['feat']]<=tree['thresh'] else 'right'\n",
        "    return predict_tree(tree[branch],x)\n",
        "\n",
        "# --- 5. 모든 부분집합 순회 + 5-Fold CV ---\n",
        "best = {'mask':0,'model':None,'score':-1}\n",
        "for mask in range(1, 1<<n_feat):\n",
        "    idxs = [i for i in range(n_feat) if (mask>>i)&1]\n",
        "    X_sub  = X_full_s[:, idxs]\n",
        "    # CV 점수 저장\n",
        "    cv_scores = {'logistic':[], 'knn':[], 'dt':[], 'mlp':[]}\n",
        "    for i in range(5):\n",
        "        val = folds[i]\n",
        "        trn = np.hstack([folds[j] for j in range(5) if j!=i])\n",
        "        X_tr,y_tr = X_sub[trn], y_full[trn]\n",
        "        X_va,y_va = X_sub[val], y_full[val]\n",
        "        # logistic\n",
        "        w,b = train_logistic_sgd(X_tr,y_tr,lr=0.001,epochs=9)\n",
        "        cv_scores['logistic'].append(accuracy_score(y_va,predict_logistic((w,b),X_va)))\n",
        "        # knn\n",
        "        cv_scores['knn'].append(accuracy_score(y_va,knn_predict(X_tr,y_tr,X_va,k=20)))\n",
        "        # dt\n",
        "        tree = build_tree(X_tr,y_tr,depth=0,max_depth=15)\n",
        "        preds = np.array([predict_tree(tree,x) for x in X_va])\n",
        "        cv_scores['dt'].append(accuracy_score(y_va,preds))\n",
        "        # mlp\n",
        "        mlp = MLPClassifier(hidden_layer_sizes=(32,),\n",
        "                            learning_rate_init=0.005,\n",
        "                            max_iter=300,\n",
        "                            early_stopping=True,\n",
        "                            random_state=42)\n",
        "        mlp.fit(X_tr,y_tr)\n",
        "        cv_scores['mlp'].append(accuracy_score(y_va,mlp.predict(X_va)))\n",
        "    # 평균\n",
        "    mean_scores = {m:np.mean(v) for m,v in cv_scores.items()}\n",
        "    mtype, mscore = max(mean_scores.items(), key=lambda x:x[1])\n",
        "    if mscore > best['score']:\n",
        "        best.update({'mask':mask,'model':mtype,'score':mscore})\n",
        "\n",
        "# --- 6. 결과 출력 ---\n",
        "chosen = [features[i] for i in range(n_feat) if (best['mask']>>i)&1]\n",
        "print(\"Best subset:\", chosen)\n",
        "print(\"Model:\", best['model'], \"CV score:\", best['score'])\n",
        "\n",
        "# --- 7. 최종 재학습 & Test2 예측 ---\n",
        "idxs = [i for i in range(n_feat) if (best['mask']>>i)&1]\n",
        "X_final  = X_full_s[:, idxs]\n",
        "X2_final = X_test2_s[:, idxs]\n",
        "if best['model']=='logistic':\n",
        "    w,b = train_logistic_sgd(X_final,y_full,lr=0.001,epochs=9)\n",
        "    final_preds = predict_logistic((w,b),X2_final)\n",
        "elif best['model']=='knn':\n",
        "    final_preds = knn_predict(X_final,y_full,X2_final,k=20)\n",
        "elif best['model']=='dt':\n",
        "    tree = build_tree(X_final,y_full,depth=0,max_depth=15)\n",
        "    final_preds = np.array([predict_tree(tree,x) for x in X2_final])\n",
        "else:\n",
        "    mlp = MLPClassifier(hidden_layer_sizes=(32,),\n",
        "                        learning_rate_init=0.005,\n",
        "                        max_iter=300,\n",
        "                        early_stopping=True,\n",
        "                        random_state=42)\n",
        "    mlp.fit(X_final,y_full)\n",
        "    final_preds = mlp.predict(X2_final)\n",
        "\n",
        "# --- 8. Submission ---\n",
        "pd.DataFrame({'PassengerId':ids_test2,'Survived':final_preds}) \\\n",
        "  .to_csv('final_submission.csv', index=False)\n",
        "print(\"Saved final_submission.csv\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9t94_GCSypW4",
        "outputId": "140655db-e827-431f-a9a7-799bc091a9f7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Best subset: ['Pclass', 'Name', 'Embarked']\n",
            "Model: dt CV score: 0.8260435628648546\n",
            "Saved final_submission.csv\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn.metrics import accuracy_score\n",
        "\n",
        "# --- 1. 데이터 로드 & 사용할 피처 지정 ---\n",
        "train_df = pd.read_csv('process1_result.csv')\n",
        "features = ['Sex','Pclass','Name','Family_Group','Embarked']\n",
        "n_feat = len(features)\n",
        "\n",
        "X_full = train_df[features].values\n",
        "y_full = train_df['Survived'].values\n",
        "\n",
        "# --- 2. 결측치 처리 & 스케일링 (전체 train 기준) ---\n",
        "col_means = np.nanmean(X_full, axis=0)\n",
        "mask_full = np.isnan(X_full)\n",
        "X_full[mask_full] = np.take(col_means, np.where(mask_full)[1])\n",
        "\n",
        "means = X_full.mean(axis=0)\n",
        "stds  = X_full.std(axis=0)\n",
        "stds[stds==0] = 1.0\n",
        "X_full_s = (X_full - means) / stds\n",
        "\n",
        "# --- 3. 5-Fold 인덱스 생성 ---\n",
        "def get_folds(n, k=5, seed=42):\n",
        "    rng = np.random.RandomState(seed)\n",
        "    idx = np.arange(n)\n",
        "    rng.shuffle(idx)\n",
        "    sizes = np.full(k, n//k, int)\n",
        "    sizes[:n%k] += 1\n",
        "    folds, start = [], 0\n",
        "    for sz in sizes:\n",
        "        folds.append(idx[start:start+sz])\n",
        "        start += sz\n",
        "    return folds\n",
        "\n",
        "folds = get_folds(len(y_full), k=5, seed=42)\n",
        "\n",
        "# --- 4. Decision Tree 구현 (max_depth 파라미터만 다르게) ---\n",
        "def gini(labels):\n",
        "    _, cnt = np.unique(labels, return_counts=True)\n",
        "    p = cnt / cnt.sum()\n",
        "    return 1 - (p**2).sum()\n",
        "\n",
        "def weighted_gini(col, labels, t):\n",
        "    l = labels[col<=t]; r = labels[col>t]\n",
        "    if len(l)==0 or len(r)==0: return None\n",
        "    n = len(labels)\n",
        "    return len(l)/n*gini(l) + len(r)/n*gini(r)\n",
        "\n",
        "def find_best_split(X, y):\n",
        "    parent = gini(y)\n",
        "    best = (0, None, None)\n",
        "    for f in range(X.shape[1]):\n",
        "        vals = np.unique(X[:,f])\n",
        "        ths = (vals[:-1] + vals[1:]) / 2\n",
        "        for t in ths:\n",
        "            wg = weighted_gini(X[:,f], y, t)\n",
        "            if wg is None: continue\n",
        "            gain = parent - wg\n",
        "            if gain > best[0]:\n",
        "                best = (gain, f, t)\n",
        "    return best[1], best[2]\n",
        "\n",
        "def build_tree(X, y, depth=0, max_depth=7):\n",
        "    if len(np.unique(y))==1 or depth==max_depth:\n",
        "        vals, cnt = np.unique(y, return_counts=True)\n",
        "        return {'leaf':True, 'pred':vals[cnt.argmax()]}\n",
        "    feat, thresh = find_best_split(X, y)\n",
        "    if feat is None:\n",
        "        vals, cnt = np.unique(y, return_counts=True)\n",
        "        return {'leaf':True, 'pred':vals[cnt.argmax()]}\n",
        "    mask = X[:,feat] <= thresh\n",
        "    return {\n",
        "        'leaf':False, 'feat':feat, 'thresh':thresh,\n",
        "        'left': build_tree(X[mask],    y[mask],    depth+1, max_depth),\n",
        "        'right':build_tree(X[~mask],   y[~mask],   depth+1, max_depth)\n",
        "    }\n",
        "\n",
        "def predict_tree(tree, x):\n",
        "    if tree['leaf']:\n",
        "        return tree['pred']\n",
        "    branch = 'left' if x[tree['feat']] <= tree['thresh'] else 'right'\n",
        "    return predict_tree(tree[branch], x)\n",
        "\n",
        "# --- 5. 모든 부분집합 × depth 리스트 × 5-Fold CV ---\n",
        "depths = [3, 5, 7, 10, 15]\n",
        "results = []\n",
        "\n",
        "for mask in range(1, 1<<n_feat):\n",
        "    # 부분집합에 해당하는 컬럼 인덱스\n",
        "    idxs = [i for i in range(n_feat) if (mask>>i)&1]\n",
        "    X_sub = X_full_s[:, idxs]\n",
        "\n",
        "    for md in depths:\n",
        "        cv_scores = []\n",
        "        for i in range(5):\n",
        "            val_idx = folds[i]\n",
        "            trn_idx = np.hstack([folds[j] for j in range(5) if j!=i])\n",
        "            X_tr, y_tr = X_sub[trn_idx], y_full[trn_idx]\n",
        "            X_va, y_va = X_sub[val_idx], y_full[val_idx]\n",
        "\n",
        "            tree = build_tree(X_tr, y_tr, depth=0, max_depth=md)\n",
        "            preds = np.array([predict_tree(tree, x) for x in X_va])\n",
        "            cv_scores.append(accuracy_score(y_va, preds))\n",
        "\n",
        "        results.append({\n",
        "            'mask': mask,\n",
        "            'features': [features[i] for i in idxs],\n",
        "            'max_depth': md,\n",
        "            'cv_score': np.mean(cv_scores)\n",
        "        })\n",
        "\n",
        "# --- 6. DataFrame으로 결과 집계 & 최고 조합 탐색 ---\n",
        "df_res = pd.DataFrame(results)\n",
        "best = df_res.loc[df_res['cv_score'].idxmax()]\n",
        "\n",
        "print(\"▶ Best subset:\", best['features'])\n",
        "print(\"▶ Best max_depth:\", best['max_depth'])\n",
        "print(\"▶ Best CV score:\", best['cv_score'])\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lY5zC2Au8B6o",
        "outputId": "01f6451e-f52c-454c-d229-6d33714b240b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "▶ Best subset: ['Pclass', 'Name', 'Embarked']\n",
            "▶ Best max_depth: 10\n",
            "▶ Best CV score: 0.8260435628648546\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "## 피어슨 기준 - 피쳐pclass, name, embarked\n",
        "\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn.neural_network import MLPClassifier\n",
        "from sklearn.metrics import accuracy_score\n",
        "\n",
        "# --- A) 데이터 로드 & full feature 정리 ---\n",
        "df = pd.read_csv('process1_result.csv')\n",
        "features = ['Pclass','Name','Embarked']\n",
        "X = df[features].values\n",
        "y = df['Survived'].values\n",
        "\n",
        "# --- B) 스케일링 (full 기준) ---\n",
        "means = X.mean(axis=0)\n",
        "stds  = X.std(axis=0)\n",
        "stds[stds==0] = 1.0\n",
        "X_std = (X - means) / stds\n",
        "\n",
        "# --- C) PCA → 2개 주성분 ---\n",
        "cov   = np.cov(X_std, rowvar=False)\n",
        "eigs, vecs = np.linalg.eigh(cov)\n",
        "order = np.argsort(eigs)[::-1]\n",
        "V_pca = vecs[:, order[:2]]\n",
        "X_pca = X_std.dot(V_pca)\n",
        "\n",
        "# --- D) LDA → 1차원 Fisher ---\n",
        "mu0, mu1 = X_std[y==0].mean(0), X_std[y==1].mean(0)\n",
        "d = X_std.shape[1]\n",
        "SW = np.zeros((d,d))\n",
        "for xi, yi in zip(X_std, y):\n",
        "    m = mu1 if yi==1 else mu0\n",
        "    diff = (xi-m).reshape(-1,1)\n",
        "    SW += diff.dot(diff.T)\n",
        "w_lda = np.linalg.inv(SW).dot(mu1-mu0)\n",
        "w_lda /= np.linalg.norm(w_lda)\n",
        "X_lda = X_std.dot(w_lda).reshape(-1,1)\n",
        "\n",
        "# --- E) 5-Fold 인덱스 (NumPy만) ---\n",
        "def get_folds(n, k=5, seed=42):\n",
        "    rng = np.random.RandomState(seed)\n",
        "    idx = np.arange(n)\n",
        "    rng.shuffle(idx)\n",
        "    sizes = np.full(k, n//k, int); sizes[:n%k]+=1\n",
        "    folds=[]; st=0\n",
        "    for sz in sizes:\n",
        "        folds.append(idx[st:st+sz])\n",
        "        st+=sz\n",
        "    return folds\n",
        "\n",
        "folds = get_folds(len(y), k=5, seed=42)\n",
        "\n",
        "# --- F) k-Fold CV 루프 & 출력 ---\n",
        "sets = {\n",
        "    'Full': X_std,\n",
        "    'PCA' : X_pca,\n",
        "    'LDA' : X_lda\n",
        "}\n",
        "\n",
        "for name, Xset in sets.items():\n",
        "    acc_log, acc_knn, acc_dt, acc_mlp = [], [], [], []\n",
        "    for i, val_idx in enumerate(folds):\n",
        "        # train/val 인덱스 분리\n",
        "        trn_idx = np.hstack([folds[j] for j in range(5) if j!=i])\n",
        "        X_tr, y_tr = Xset[trn_idx], y[trn_idx]\n",
        "        X_va, y_va = Xset[val_idx],  y[val_idx]\n",
        "\n",
        "        # 1) Logistic\n",
        "        w,b = train_logistic_sgd(X_tr, y_tr, lr=0.001, epochs=9)\n",
        "        acc_log.append(accuracy_score(y_va, predict_logistic((w,b), X_va)))\n",
        "\n",
        "        # 2) KNN\n",
        "        acc_knn.append(accuracy_score(y_va, knn_predict(X_tr, y_tr, X_va, k=20)))\n",
        "\n",
        "        # 3) Decision Tree(depth=10)\n",
        "        tree = build_tree(X_tr, y_tr, depth=0, max_depth=10)\n",
        "        preds = np.array([predict_tree(tree,x) for x in X_va])\n",
        "        acc_dt.append(accuracy_score(y_va, preds))\n",
        "\n",
        "        # 4) MLP\n",
        "        mlp = MLPClassifier(\n",
        "            hidden_layer_sizes=(32,),\n",
        "            learning_rate_init=0.005,\n",
        "            max_iter=300,\n",
        "            early_stopping=True,\n",
        "            random_state=42\n",
        "        )\n",
        "        mlp.fit(X_tr, y_tr)\n",
        "        acc_mlp.append(accuracy_score(y_va, mlp.predict(X_va)))\n",
        "\n",
        "    # 평균 ACC 계산\n",
        "    print(f\"\\n=== {name} set ===\")\n",
        "    print(f\"Logistic    : {np.mean(acc_log)*100:.5f}%\")\n",
        "    print(f\"KNN (k=20)  : {np.mean(acc_knn)*100:.5f}%\")\n",
        "    print(f\"DecisionT   : {np.mean(acc_dt)*100:.5f}%\")\n",
        "    print(f\"MLP         : {np.mean(acc_mlp)*100:.5f}%\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FXci2oKk-9lt",
        "outputId": "f592dca0-1a17-48ce-c6fc-a08b6ff38af5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "=== Full set ===\n",
            "Logistic    : 73.51453%\n",
            "KNN (k=20)  : 79.91149%\n",
            "DecisionT   : 82.38089%\n",
            "MLP         : 78.00577%\n",
            "\n",
            "=== PCA set ===\n",
            "Logistic    : 73.85161%\n",
            "KNN (k=20)  : 79.68615%\n",
            "DecisionT   : 82.94206%\n",
            "MLP         : 72.27983%\n",
            "\n",
            "=== LDA set ===\n",
            "Logistic    : 72.27858%\n",
            "KNN (k=20)  : 79.57253%\n",
            "DecisionT   : 82.60498%\n",
            "MLP         : 72.95524%\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn.neural_network import MLPClassifier\n",
        "from sklearn.metrics import accuracy_score\n",
        "\n",
        "# --- 1. 데이터 로드 & 사용할 피처 지정 ---\n",
        "train_df = pd.read_csv('process1_result.csv')\n",
        "test_df  = pd.read_csv('process2_result.csv')\n",
        "\n",
        "features = [\n",
        "    'Sex','Name','Pclass'\n",
        "]\n",
        "n_feat = len(features)\n",
        "\n",
        "X_full  = train_df[features].values\n",
        "y_full  = train_df['Survived'].values\n",
        "X_test2 = test_df[features].values\n",
        "ids_test2 = test_df['PassengerId'].values\n",
        "\n",
        "# --- 2. 결측치 처리 & 스케일링 ---\n",
        "col_means = np.nanmean(X_full, axis=0)\n",
        "mask_full = np.isnan(X_full)\n",
        "X_full[mask_full] = np.take(col_means, np.where(mask_full)[1])\n",
        "mask_t2 = np.isnan(X_test2)\n",
        "X_test2[mask_t2] = np.take(col_means, np.where(mask_t2)[1])\n",
        "\n",
        "means = X_full.mean(axis=0)\n",
        "stds  = X_full.std(axis=0)\n",
        "stds[stds == 0] = 1.0\n",
        "X_full_s  = (X_full  - means) / stds\n",
        "X_test2_s = (X_test2 - means) / stds\n",
        "\n",
        "# --- 3. 5-Fold 인덱스 생성 (NumPy만) ---\n",
        "def get_folds(n, k=5, seed=42):\n",
        "    rng = np.random.RandomState(seed)\n",
        "    idx = np.arange(n)\n",
        "    rng.shuffle(idx)\n",
        "    sizes = np.full(k, n // k, int)\n",
        "    sizes[:n % k] += 1\n",
        "    folds, start = [], 0\n",
        "    for sz in sizes:\n",
        "        folds.append(idx[start:start+sz])\n",
        "        start += sz\n",
        "    return folds\n",
        "\n",
        "folds = get_folds(len(y_full), k=5, seed=42)\n",
        "\n",
        "# --- 4. 모델 구현 (기존 코드 그대로) ---\n",
        "def sigmoid(z): return 1/(1+np.exp(-z))\n",
        "def train_logistic_sgd(X,y,lr,epochs):\n",
        "    m,d = X.shape; w=np.zeros(d); b=0.0\n",
        "    for _ in range(epochs):\n",
        "        for i in range(m):\n",
        "            xi, yi = X[i], y[i]\n",
        "            delta = sigmoid(xi.dot(w)+b)-yi\n",
        "            w -= lr*delta*xi; b -= lr*delta\n",
        "    return w,b\n",
        "def predict_logistic(model, X):\n",
        "    w,b = model\n",
        "    return (sigmoid(X.dot(w)+b)>=0.5).astype(int)\n",
        "\n",
        "def euclid_dist_matrix(A,B):\n",
        "    return np.sqrt(((A[:,None,:]-B[None,:,:])**2).sum(axis=2))\n",
        "def knn_predict(TR_X,TR_y,TE_X,k):\n",
        "    D = euclid_dist_matrix(TE_X,TR_X)\n",
        "    neigh = np.argpartition(D, k, axis=1)[:,:k]\n",
        "    return np.array([np.bincount(TR_y[idx]).argmax() for idx in neigh])\n",
        "\n",
        "def gini(labels):\n",
        "    _,cnt = np.unique(labels,return_counts=True)\n",
        "    p = cnt/cnt.sum(); return 1-(p**2).sum()\n",
        "def weighted_gini(col,labels,t):\n",
        "    l=labels[col<=t]; r=labels[col>t]\n",
        "    if len(l)==0 or len(r)==0: return None\n",
        "    n=len(labels)\n",
        "    return len(l)/n*gini(l)+len(r)/n*gini(r)\n",
        "def find_best_split(X,y):\n",
        "    parent=gini(y); best=(0,None,None)\n",
        "    for f in range(X.shape[1]):\n",
        "        vals=np.unique(X[:,f]); ths=(vals[:-1]+vals[1:])/2\n",
        "        for t in ths:\n",
        "            wg=weighted_gini(X[:,f],y,t)\n",
        "            if wg is None: continue\n",
        "            gain=parent-wg\n",
        "            if gain>best[0]: best=(gain,f,t)\n",
        "    return best[1],best[2]\n",
        "def build_tree(X,y,depth=0,max_depth=15):\n",
        "    if len(np.unique(y))==1 or depth==max_depth:\n",
        "        vals,cnt=np.unique(y,return_counts=True)\n",
        "        return {'leaf':True,'pred':vals[cnt.argmax()]}\n",
        "    feat,th=find_best_split(X,y)\n",
        "    if feat is None:\n",
        "        vals,cnt=np.unique(y,return_counts=True)\n",
        "        return {'leaf':True,'pred':vals[cnt.argmax()]}\n",
        "    mask=X[:,feat]<=th\n",
        "    return {\n",
        "      'leaf':False,'feat':feat,'thresh':th,\n",
        "      'left': build_tree(X[mask],y[mask],depth+1,max_depth),\n",
        "      'right':build_tree(X[~mask],y[~mask],depth+1,max_depth)\n",
        "    }\n",
        "def predict_tree(tree,x):\n",
        "    if tree['leaf']: return tree['pred']\n",
        "    branch = 'left' if x[tree['feat']]<=tree['thresh'] else 'right'\n",
        "    return predict_tree(tree[branch],x)\n",
        "\n",
        "# --- 5. 모든 부분집합 순회 + 5-Fold CV ---\n",
        "best = {'mask':0,'model':None,'score':-1}\n",
        "for mask in range(1, 1<<n_feat):\n",
        "    idxs = [i for i in range(n_feat) if (mask>>i)&1]\n",
        "    X_sub  = X_full_s[:, idxs]\n",
        "    # CV 점수 저장\n",
        "    cv_scores = {'logistic':[], 'knn':[], 'dt':[], 'mlp':[]}\n",
        "    for i in range(5):\n",
        "        val = folds[i]\n",
        "        trn = np.hstack([folds[j] for j in range(5) if j!=i])\n",
        "        X_tr,y_tr = X_sub[trn], y_full[trn]\n",
        "        X_va,y_va = X_sub[val], y_full[val]\n",
        "        # logistic\n",
        "        w,b = train_logistic_sgd(X_tr,y_tr,lr=0.001,epochs=9)\n",
        "        cv_scores['logistic'].append(accuracy_score(y_va,predict_logistic((w,b),X_va)))\n",
        "        # knn\n",
        "        cv_scores['knn'].append(accuracy_score(y_va,knn_predict(X_tr,y_tr,X_va,k=20)))\n",
        "        # dt\n",
        "        tree = build_tree(X_tr,y_tr,depth=0,max_depth=15)\n",
        "        preds = np.array([predict_tree(tree,x) for x in X_va])\n",
        "        cv_scores['dt'].append(accuracy_score(y_va,preds))\n",
        "        # mlp\n",
        "        mlp = MLPClassifier(hidden_layer_sizes=(32,),\n",
        "                            learning_rate_init=0.005,\n",
        "                            max_iter=300,\n",
        "                            early_stopping=True,\n",
        "                            random_state=42)\n",
        "        mlp.fit(X_tr,y_tr)\n",
        "        cv_scores['mlp'].append(accuracy_score(y_va,mlp.predict(X_va)))\n",
        "    # 평균\n",
        "    mean_scores = {m:np.mean(v) for m,v in cv_scores.items()}\n",
        "    mtype, mscore = max(mean_scores.items(), key=lambda x:x[1])\n",
        "    if mscore > best['score']:\n",
        "        best.update({'mask':mask,'model':mtype,'score':mscore})\n",
        "\n",
        "# --- 6. 결과 출력 ---\n",
        "chosen = [features[i] for i in range(n_feat) if (best['mask']>>i)&1]\n",
        "print(\"Best subset:\", chosen)\n",
        "print(\"Model:\", best['model'], \"CV score:\", best['score'])\n",
        "\n",
        "# --- 7. 최종 재학습 & Test2 예측 ---\n",
        "idxs = [i for i in range(n_feat) if (best['mask']>>i)&1]\n",
        "X_final  = X_full_s[:, idxs]\n",
        "X2_final = X_test2_s[:, idxs]\n",
        "if best['model']=='logistic':\n",
        "    w,b = train_logistic_sgd(X_final,y_full,lr=0.001,epochs=9)\n",
        "    final_preds = predict_logistic((w,b),X2_final)\n",
        "elif best['model']=='knn':\n",
        "    final_preds = knn_predict(X_final,y_full,X2_final,k=20)\n",
        "elif best['model']=='dt':\n",
        "    tree = build_tree(X_final,y_full,depth=0,max_depth=15)\n",
        "    final_preds = np.array([predict_tree(tree,x) for x in X2_final])\n",
        "else:\n",
        "    mlp = MLPClassifier(hidden_layer_sizes=(32,),\n",
        "                        learning_rate_init=0.005,\n",
        "                        max_iter=300,\n",
        "                        early_stopping=True,\n",
        "                        random_state=42)\n",
        "    mlp.fit(X_final,y_full)\n",
        "    final_preds = mlp.predict(X2_final)\n",
        "\n",
        "# --- 8. Submission ---\n",
        "pd.DataFrame({'PassengerId':ids_test2,'Survived':final_preds}) \\\n",
        "  .to_csv('final_submission.csv', index=False)\n",
        "print(\"Saved final_submission.csv\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0aODKOMkBB_O",
        "outputId": "8aaeec8a-df46-4f30-905c-56338a8fb399"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Best subset: ['Sex', 'Name']\n",
            "Model: dt CV score: 0.7923608059757704\n",
            "Saved final_submission.csv\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn.neural_network import MLPClassifier\n",
        "from sklearn.metrics import accuracy_score\n",
        "\n",
        "# --- 1. Load data & select Spearman-based best subset ['Sex','Name'] ---\n",
        "df = pd.read_csv('process1_result.csv')\n",
        "features = ['Sex', 'Name']\n",
        "X = df[features].values\n",
        "y = df['Survived'].values\n",
        "\n",
        "# --- 2. Standardize ---\n",
        "means = X.mean(axis=0)\n",
        "stds  = X.std(axis=0)\n",
        "stds[stds == 0] = 1.0\n",
        "X_std = (X - means) / stds\n",
        "\n",
        "# --- 3. PCA → 2 components (since original dim=2) ---\n",
        "cov    = np.cov(X_std, rowvar=False)\n",
        "eigval, eigvec = np.linalg.eigh(cov)\n",
        "order = np.argsort(eigval)[::-1]\n",
        "V_pca = eigvec[:, order[:2]]    # (2×2)\n",
        "X_pca = X_std.dot(V_pca)        # (n,2)\n",
        "\n",
        "# --- 4. LDA → 1 Fisher component ---\n",
        "mu0 = X_std[y==0].mean(axis=0)\n",
        "mu1 = X_std[y==1].mean(axis=0)\n",
        "d = X_std.shape[1]\n",
        "SW = np.zeros((d,d))\n",
        "for xi, yi in zip(X_std, y):\n",
        "    m = mu1 if yi==1 else mu0\n",
        "    diff = (xi-m).reshape(-1,1)\n",
        "    SW += diff.dot(diff.T)\n",
        "w_lda = np.linalg.inv(SW).dot(mu1-mu0)\n",
        "w_lda /= np.linalg.norm(w_lda)\n",
        "X_lda = X_std.dot(w_lda).reshape(-1,1)  # (n,1)\n",
        "\n",
        "# --- 5. 5-Fold indices (NumPy only) ---\n",
        "def get_folds(n, k=5, seed=42):\n",
        "    rng = np.random.RandomState(seed)\n",
        "    idx = np.arange(n); rng.shuffle(idx)\n",
        "    sizes = np.full(k, n//k, int); sizes[:n%k]+=1\n",
        "    folds, start = [], 0\n",
        "    for sz in sizes:\n",
        "        folds.append(idx[start:start+sz])\n",
        "        start += sz\n",
        "    return folds\n",
        "\n",
        "folds = get_folds(len(y), k=5, seed=42)\n",
        "\n",
        "# --- 6. Model definitions (fixed hyperparams) ---\n",
        "def sigmoid(z): return 1/(1+np.exp(-z))\n",
        "def train_logistic_sgd(X,y,lr=0.001,epochs=9):\n",
        "    m,d = X.shape; w=np.zeros(d); b=0.0\n",
        "    for _ in range(epochs):\n",
        "        for i in range(m):\n",
        "            xi, yi = X[i], y[i]\n",
        "            delta = sigmoid(xi.dot(w)+b) - yi\n",
        "            w -= lr*delta*xi; b -= lr*delta\n",
        "    return w,b\n",
        "\n",
        "def predict_logistic(model, X):\n",
        "    w,b = model\n",
        "    return (sigmoid(X.dot(w)+b)>=0.5).astype(int)\n",
        "\n",
        "def euclid_dist_matrix(A,B):\n",
        "    return np.sqrt(((A[:,None,:]-B[None,:,:])**2).sum(axis=2))\n",
        "\n",
        "def knn_predict(TR_X,TR_y,TE_X,k=20):\n",
        "    D = euclid_dist_matrix(TE_X,TR_X)\n",
        "    neigh = np.argpartition(D, k, axis=1)[:,:k]\n",
        "    return np.array([np.bincount(TR_y[idx]).argmax() for idx in neigh])\n",
        "\n",
        "def gini(labels):\n",
        "    _,cnt = np.unique(labels,return_counts=True)\n",
        "    p = cnt/cnt.sum(); return 1-(p**2).sum()\n",
        "\n",
        "def weighted_gini(col,labels,t):\n",
        "    l=labels[col<=t]; r=labels[col>t]\n",
        "    if len(l)==0 or len(r)==0: return None\n",
        "    n=len(labels)\n",
        "    return len(l)/n*gini(l) + len(r)/n*gini(r)\n",
        "\n",
        "def find_best_split(X,y):\n",
        "    parent = gini(y); best = (0,None,None)\n",
        "    for f in range(X.shape[1]):\n",
        "        vals = np.unique(X[:,f]); ths = (vals[:-1]+vals[1:])/2\n",
        "        for t in ths:\n",
        "            wg = weighted_gini(X[:,f],y,t)\n",
        "            if wg is None: continue\n",
        "            gain = parent - wg\n",
        "            if gain > best[0]:\n",
        "                best = (gain,f,t)\n",
        "    return best[1], best[2]\n",
        "\n",
        "def build_tree(X,y,depth=0,max_depth=10):\n",
        "    if len(np.unique(y))==1 or depth==max_depth:\n",
        "        vals,cnt = np.unique(y,return_counts=True)\n",
        "        return {'leaf':True,'pred':vals[cnt.argmax()]}\n",
        "    feat,th = find_best_split(X,y)\n",
        "    if feat is None:\n",
        "        vals,cnt = np.unique(y,return_counts=True)\n",
        "        return {'leaf':True,'pred':vals[cnt.argmax()]}\n",
        "    mask = X[:,feat] <= th\n",
        "    return {\n",
        "      'leaf':False,'feat':feat,'thresh':th,\n",
        "      'left': build_tree(X[mask],y[mask],depth+1,max_depth),\n",
        "      'right':build_tree(X[~mask],y[~mask],depth+1,max_depth)\n",
        "    }\n",
        "\n",
        "def predict_tree(tree,x):\n",
        "    if tree['leaf']: return tree['pred']\n",
        "    branch = 'left' if x[tree['feat']]<=tree['thresh'] else 'right'\n",
        "    return predict_tree(tree[branch],x)\n",
        "\n",
        "# --- 7. 5-Fold CV on Full / PCA / LDA ---\n",
        "sets = {\n",
        "    'Full': X_std,\n",
        "    'PCA' : X_pca,\n",
        "    'LDA' : X_lda\n",
        "}\n",
        "\n",
        "for name, Xset in sets.items():\n",
        "    acc_log, acc_knn, acc_dt, acc_mlp = [], [], [], []\n",
        "    for i, val_idx in enumerate(folds):\n",
        "        trn_idx = np.hstack([folds[j] for j in range(5) if j!=i])\n",
        "        X_tr, y_tr = Xset[trn_idx], y[trn_idx]\n",
        "        X_va, y_va = Xset[val_idx],  y[val_idx]\n",
        "\n",
        "        # Logistic\n",
        "        w,b = train_logistic_sgd(X_tr, y_tr)\n",
        "        acc_log.append(accuracy_score(y_va, predict_logistic((w,b), X_va)))\n",
        "\n",
        "        # KNN\n",
        "        acc_knn.append(accuracy_score(y_va, knn_predict(X_tr, y_tr, X_va)))\n",
        "\n",
        "        # Decision Tree (depth=10)\n",
        "        tree = build_tree(X_tr, y_tr, max_depth=10)\n",
        "        preds = np.array([predict_tree(tree,x) for x in X_va])\n",
        "        acc_dt.append(accuracy_score(y_va, preds))\n",
        "\n",
        "        # MLP\n",
        "        mlp = MLPClassifier(\n",
        "            hidden_layer_sizes=(32,),\n",
        "            learning_rate_init=0.005,\n",
        "            max_iter=300,\n",
        "            early_stopping=True,\n",
        "            random_state=42\n",
        "        )\n",
        "        mlp.fit(X_tr, y_tr)\n",
        "        acc_mlp.append(accuracy_score(y_va, mlp.predict(X_va)))\n",
        "\n",
        "    print(f\"\\n=== {name} ===\")\n",
        "    print(f\"logistic : {np.mean(acc_log)*100:.5f}%\")\n",
        "    print(f\"knn      : {np.mean(acc_knn)*100:.5f}%\")\n",
        "    print(f\"dt       : {np.mean(acc_dt)*100:.5f}%\")\n",
        "    print(f\"mlp      : {np.mean(acc_mlp)*100:.5f}%\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "EbT-awkrBzbn",
        "outputId": "b88ea4b1-aae4-4c4b-e96a-f24f8251a202"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "=== Full ===\n",
            "logistic : 78.22798%\n",
            "knn      : 75.32107%\n",
            "dt       : 79.23608%\n",
            "mlp      : 74.98588%\n",
            "\n",
            "=== PCA ===\n",
            "logistic : 78.22798%\n",
            "knn      : 75.09635%\n",
            "dt       : 79.01262%\n",
            "mlp      : 78.11562%\n",
            "\n",
            "=== LDA ===\n",
            "logistic : 78.56381%\n",
            "knn      : 78.56381%\n",
            "dt       : 79.34781%\n",
            "mlp      : 78.56381%\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.neural_network import MLPClassifier\n",
        "from sklearn.metrics import accuracy_score\n",
        "\n",
        "# --- 1. 데이터 로드 & Spearman 최적 subset ['Sex','Name'] ---\n",
        "df = pd.read_csv('process1_result.csv')\n",
        "features = ['Sex', 'Name']\n",
        "X = df[features].values\n",
        "y = df['Survived'].values\n",
        "\n",
        "# --- 2. 스케일링 (Standardize) ---\n",
        "means = X.mean(axis=0)\n",
        "stds  = X.std(axis=0)\n",
        "stds[stds==0] = 1.0\n",
        "X_std = (X - means) / stds\n",
        "\n",
        "# --- 3. PCA (원본 dim=2 → 2 components) & eigenvalue ---\n",
        "cov    = np.cov(X_std, rowvar=False)\n",
        "eigvals_pca, eigvecs = np.linalg.eigh(cov)\n",
        "order = np.argsort(eigvals_pca)[::-1]\n",
        "eigvals_pca = eigvals_pca[order]\n",
        "V_pca = eigvecs[:, order[:2]]   # PCA 축 벡터 (2×2)\n",
        "X_pca = X_std.dot(V_pca)        # 2차원 데이터\n",
        "\n",
        "# --- 4. LDA (원본 dim=2 → 1 component) & generalized eigenvalue ---\n",
        "mu0 = X_std[y==0].mean(axis=0)\n",
        "mu1 = X_std[y==1].mean(axis=0)\n",
        "d = X_std.shape[1]\n",
        "SW = np.zeros((d,d))\n",
        "for xi, yi in zip(X_std, y):\n",
        "    m = mu1 if yi==1 else mu0\n",
        "    diff = (xi - m).reshape(-1,1)\n",
        "    SW += diff.dot(diff.T)\n",
        "SB = (mu1-mu0).reshape(-1,1).dot((mu1-mu0).reshape(1,-1))\n",
        "eigvals_lda, _ = np.linalg.eig(np.linalg.inv(SW).dot(SB))\n",
        "eigvals_lda = np.real(eigvals_lda)\n",
        "eigvals_lda = np.sort(eigvals_lda)[::-1]\n",
        "w_lda = np.linalg.inv(SW).dot(mu1 - mu0)\n",
        "w_lda /= np.linalg.norm(w_lda)\n",
        "X_lda = X_std.dot(w_lda).reshape(-1,1)  # 1차원 데이터\n",
        "\n",
        "# --- 5. PCA/LDA 고유값 시각화 ---\n",
        "plt.figure(figsize=(10,4))\n",
        "\n",
        "# PCA eigenvalues\n",
        "plt.subplot(1,2,1)\n",
        "plt.plot([1,2], eigvals_pca[:2], '-o')\n",
        "plt.title('PCA Eigenvalues')\n",
        "plt.xlabel('Component')\n",
        "plt.ylabel('Eigenvalue')\n",
        "plt.grid(True)\n",
        "\n",
        "# LDA eigenvalues\n",
        "plt.subplot(1,2,2)\n",
        "plt.bar([1,2], eigvals_lda[:2], alpha=0.7)\n",
        "plt.title('LDA Generalized Eigenvalues')\n",
        "plt.xlabel('Discriminant')\n",
        "plt.ylabel('Eigenvalue (λ)')\n",
        "plt.grid(True)\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n",
        "\n",
        "# --- 6. 5-Fold CV 준비 & 모델 정의 (이전과 동일) ---\n",
        "def get_folds(n, k=5, seed=42):\n",
        "    rng = np.random.RandomState(seed)\n",
        "    idx = np.arange(n); rng.shuffle(idx)\n",
        "    sizes = np.full(k, n//k, int); sizes[:n%k]+=1\n",
        "    folds, st = [], 0\n",
        "    for sz in sizes:\n",
        "        folds.append(idx[st:st+sz]); st+=sz\n",
        "    return folds\n",
        "\n",
        "folds = get_folds(len(y), 5)\n",
        "\n",
        "def sigmoid(z): return 1/(1+np.exp(-z))\n",
        "def train_logistic_sgd(X,y,lr=0.001,epochs=9):\n",
        "    m,d = X.shape; w=np.zeros(d); b=0.0\n",
        "    for _ in range(epochs):\n",
        "        for i in range(m):\n",
        "            xi, yi = X[i], y[i]\n",
        "            delta = sigmoid(xi.dot(w)+b) - yi\n",
        "            w -= lr*delta*xi; b -= lr*delta\n",
        "    return w,b\n",
        "\n",
        "def predict_logistic(model,X):\n",
        "    w,b = model\n",
        "    return (sigmoid(X.dot(w)+b)>=0.5).astype(int)\n",
        "\n",
        "def knn_predict(TR_X,TR_y,TE_X,k=20):\n",
        "    D = np.sqrt(((TE_X[:,None,:]-TR_X[None,:,:])**2).sum(2))\n",
        "    neigh = np.argpartition(D, k, axis=1)[:,:k]\n",
        "    return np.array([np.bincount(TR_y[idx]).argmax() for idx in neigh])\n",
        "\n",
        "def gini(lbl):\n",
        "    _,cnt = np.unique(lbl,return_counts=True)\n",
        "    p = cnt/cnt.sum(); return 1-(p**2).sum()\n",
        "\n",
        "def weighted_gini(col,lbl,t):\n",
        "    l=lbl[col<=t]; r=lbl[col>t]\n",
        "    if len(l)==0 or len(r)==0: return None\n",
        "    n=len(lbl)\n",
        "    return len(l)/n*gini(l) + len(r)/n*gini(r)\n",
        "\n",
        "def find_best_split(X,y):\n",
        "    parent = gini(y); best=(0,None,None)\n",
        "    for f in range(X.shape[1]):\n",
        "        vs = np.unique(X[:,f]); ths=(vs[:-1]+vs[1:])/2\n",
        "        for t in ths:\n",
        "            wg = weighted_gini(X[:,f],y,t)\n",
        "            if wg and parent-wg>best[0]:\n",
        "                best=(parent-wg, f, t)\n",
        "    return best[1], best[2]\n",
        "\n",
        "def build_tree(X,y,depth=0,max_depth=10):\n",
        "    if len(np.unique(y))==1 or depth==max_depth:\n",
        "        vals,cnt=np.unique(y,return_counts=True)\n",
        "        return {'leaf':True,'pred':vals[cnt.argmax()]}\n",
        "    feat,th = find_best_split(X,y)\n",
        "    if feat is None:\n",
        "        vals,cnt=np.unique(y,return_counts=True)\n",
        "        return {'leaf':True,'pred':vals[cnt.argmax()]}\n",
        "    m = X[:,feat] <= th\n",
        "    return {\n",
        "      'leaf':False,'feat':feat,'thresh':th,\n",
        "      'left': build_tree(X[m],y[m],depth+1,max_depth),\n",
        "      'right':build_tree(X[~m],y[~m],depth+1,max_depth)\n",
        "    }\n",
        "\n",
        "def predict_tree(tree,x):\n",
        "    if tree['leaf']: return tree['pred']\n",
        "    branch = 'left' if x[tree['feat']]<=tree['thresh'] else 'right'\n",
        "    return predict_tree(tree[branch],x)\n",
        "\n",
        "# --- 7. 5-Fold CV on Full / PCA / LDA ---\n",
        "sets = {'Full':X_std, 'PCA':X_pca, 'LDA':X_lda}\n",
        "for name, Xset in sets.items():\n",
        "    acc = {'log':[], 'knn':[], 'dt':[], 'mlp':[]}\n",
        "    for i, val in enumerate(folds):\n",
        "        trn = np.hstack([folds[j] for j in range(5) if j!=i])\n",
        "        X_tr,y_tr = Xset[trn], y[trn]\n",
        "        X_va,y_va = Xset[val],  y[val]\n",
        "\n",
        "        w,b = train_logistic_sgd(X_tr,y_tr)\n",
        "        acc['log'].append(accuracy_score(y_va, predict_logistic((w,b),X_va)))\n",
        "\n",
        "        acc['knn'].append(accuracy_score(y_va, knn_predict(X_tr,y_tr,X_va)))\n",
        "\n",
        "        tree = build_tree(X_tr,y_tr)\n",
        "        acc['dt'].append(accuracy_score(y_va, [predict_tree(tree,x) for x in X_va]))\n",
        "\n",
        "        mlp = MLPClassifier(hidden_layer_sizes=(32,),\n",
        "                            learning_rate_init=0.005,\n",
        "                            max_iter=300,\n",
        "                            early_stopping=True,\n",
        "                            random_state=42)\n",
        "        mlp.fit(X_tr,y_tr)\n",
        "        acc['mlp'].append(accuracy_score(y_va, mlp.predict(X_va)))\n",
        "\n",
        "    print(f\"\\n=== {name} (PCA dims=2 / LDA dims=1) ===\")\n",
        "    print(f\"logistic: {np.mean(acc['log'])*100:.2f}%\")\n",
        "    print(f\"knn     : {np.mean(acc['knn'])*100:.2f}%\")\n",
        "    print(f\"dt      : {np.mean(acc['dt'])*100:.2f}%\")\n",
        "    print(f\"mlp     : {np.mean(acc['mlp'])*100:.2f}%\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 731
        },
        "id": "Xs3PlcR3HoxG",
        "outputId": "4736195a-66f0-4261-fa17-5def7002c445"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x400 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "=== Full (PCA dims=2 / LDA dims=1) ===\n",
            "logistic: 78.23%\n",
            "knn     : 75.32%\n",
            "dt      : 79.24%\n",
            "mlp     : 74.99%\n",
            "\n",
            "=== PCA (PCA dims=2 / LDA dims=1) ===\n",
            "logistic: 78.23%\n",
            "knn     : 75.10%\n",
            "dt      : 79.01%\n",
            "mlp     : 78.12%\n",
            "\n",
            "=== LDA (PCA dims=2 / LDA dims=1) ===\n",
            "logistic: 78.56%\n",
            "knn     : 78.56%\n",
            "dt      : 79.35%\n",
            "mlp     : 78.56%\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "\n",
        "# --- 1. Load data & select features ---\n",
        "train_df = pd.read_csv('process1_result.csv')\n",
        "test_df  = pd.read_csv('process2_result.csv')\n",
        "\n",
        "features = ['Pclass','Name','Embarked']\n",
        "X_full = train_df[features].values\n",
        "y_full = train_df['Survived'].values\n",
        "\n",
        "X_test2 = test_df[features].values\n",
        "ids_test2 = test_df['PassengerId'].values\n",
        "\n",
        "# --- 2. Impute & standardize on train ---\n",
        "col_means = np.nanmean(X_full, axis=0)\n",
        "mask_full = np.isnan(X_full)\n",
        "X_full[mask_full] = np.take(col_means, np.where(mask_full)[1])\n",
        "\n",
        "mask_t2 = np.isnan(X_test2)\n",
        "X_test2[mask_t2] = np.take(col_means, np.where(mask_t2)[1])\n",
        "\n",
        "means = X_full.mean(axis=0)\n",
        "stds  = X_full.std(axis=0)\n",
        "stds[stds == 0] = 1.0\n",
        "\n",
        "X_full_s  = (X_full  - means) / stds\n",
        "X_test2_s = (X_test2 - means) / stds\n",
        "\n",
        "# --- 3. PCA → 2 components ---\n",
        "cov    = np.cov(X_full_s, rowvar=False)\n",
        "eigvals, eigvecs = np.linalg.eigh(cov)\n",
        "order = np.argsort(eigvals)[::-1]\n",
        "V_pca = eigvecs[:, order[:2]]   # take top-2 eigenvectors\n",
        "\n",
        "X_full_pca  = X_full_s.dot(V_pca)\n",
        "X_test2_pca = X_test2_s.dot(V_pca)\n",
        "\n",
        "# --- 4. Decision Tree (max_depth=10) implementation ---\n",
        "def gini(labels):\n",
        "    _, cnt = np.unique(labels, return_counts=True)\n",
        "    p = cnt / cnt.sum()\n",
        "    return 1 - (p**2).sum()\n",
        "\n",
        "def weighted_gini(col, labels, t):\n",
        "    left  = labels[col <= t]\n",
        "    right = labels[col >  t]\n",
        "    if len(left)==0 or len(right)==0:\n",
        "        return None\n",
        "    n = len(labels)\n",
        "    return len(left)/n * gini(left) + len(right)/n * gini(right)\n",
        "\n",
        "def find_best_split(X, y):\n",
        "    parent = gini(y)\n",
        "    best_gain, best_feat, best_t = 0, None, None\n",
        "    for f in range(X.shape[1]):\n",
        "        vals = np.unique(X[:, f])\n",
        "        thresholds = (vals[:-1] + vals[1:]) / 2.0\n",
        "        for t in thresholds:\n",
        "            wg = weighted_gini(X[:, f], y, t)\n",
        "            if wg is None:\n",
        "                continue\n",
        "            gain = parent - wg\n",
        "            if gain > best_gain:\n",
        "                best_gain, best_feat, best_t = gain, f, t\n",
        "    return best_feat, best_t\n",
        "\n",
        "def build_tree(X, y, depth=0, max_depth=10):\n",
        "    # stopping\n",
        "    if len(np.unique(y)) == 1 or depth == max_depth:\n",
        "        vals, cnt = np.unique(y, return_counts=True)\n",
        "        return {'leaf': True, 'pred': vals[cnt.argmax()]}\n",
        "    feat, thresh = find_best_split(X, y)\n",
        "    if feat is None:\n",
        "        vals, cnt = np.unique(y, return_counts=True)\n",
        "        return {'leaf': True, 'pred': vals[cnt.argmax()]}\n",
        "    mask = X[:, feat] <= thresh\n",
        "    left  = build_tree(X[mask],    y[mask],    depth+1, max_depth)\n",
        "    right = build_tree(X[~mask],   y[~mask],   depth+1, max_depth)\n",
        "    return {'leaf': False, 'feat': feat, 'thresh': thresh, 'left': left, 'right': right}\n",
        "\n",
        "def predict_tree(tree, x):\n",
        "    if tree['leaf']:\n",
        "        return tree['pred']\n",
        "    if x[tree['feat']] <= tree['thresh']:\n",
        "        return predict_tree(tree['left'], x)\n",
        "    else:\n",
        "        return predict_tree(tree['right'], x)\n",
        "\n",
        "# --- 5. Train on full PCA data & predict Test2 ---\n",
        "tree = build_tree(X_full_pca, y_full, depth=0, max_depth=10)\n",
        "preds_test2 = np.array([predict_tree(tree, x) for x in X_test2_pca])\n",
        "\n",
        "# --- 6. Save submission ---\n",
        "submission = pd.DataFrame({\n",
        "    'PassengerId': ids_test2,\n",
        "    'Survived':    preds_test2\n",
        "})\n",
        "submission.to_csv('submission_pca_dt10.csv', index=False)\n",
        "print(\"Saved → submission_pca_dt10.csv\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Bo72sGUFI3zB",
        "outputId": "a25d9b8e-7bd5-49ce-9ad7-61d94ae1c482"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Saved → submission_pca_dt10.csv\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "\n",
        "# --- 1. Load train & test2, select features ---\n",
        "train_df = pd.read_csv('process1_result.csv')\n",
        "test_df  = pd.read_csv('process2_result.csv')\n",
        "\n",
        "features = ['Sex', 'Name']  # Spearman-best subset\n",
        "X_full = train_df[features].values\n",
        "y_full = train_df['Survived'].values\n",
        "\n",
        "X_test2 = test_df[features].values\n",
        "ids_test2 = test_df['PassengerId'].values\n",
        "\n",
        "# --- 2. Impute missing with train-means & standardize ---\n",
        "col_means = np.nanmean(X_full, axis=0)\n",
        "mask = np.isnan(X_full)\n",
        "X_full[mask] = np.take(col_means, np.where(mask)[1])\n",
        "\n",
        "mask2 = np.isnan(X_test2)\n",
        "X_test2[mask2] = np.take(col_means, np.where(mask2)[1])\n",
        "\n",
        "means = X_full.mean(axis=0)\n",
        "stds  = X_full.std(axis=0)\n",
        "stds[stds == 0] = 1.0\n",
        "\n",
        "X_full_s  = (X_full  - means) / stds\n",
        "X_test2_s = (X_test2 - means) / stds\n",
        "\n",
        "# --- 3. Compute LDA direction (1D) ---\n",
        "mu0 = X_full_s[y_full==0].mean(axis=0)\n",
        "mu1 = X_full_s[y_full==1].mean(axis=0)\n",
        "d   = X_full_s.shape[1]\n",
        "\n",
        "SW = np.zeros((d,d))\n",
        "for xi, yi in zip(X_full_s, y_full):\n",
        "    m = mu1 if yi==1 else mu0\n",
        "    diff = (xi - m).reshape(-1,1)\n",
        "    SW += diff.dot(diff.T)\n",
        "\n",
        "w_lda = np.linalg.inv(SW).dot(mu1 - mu0)\n",
        "w_lda /= np.linalg.norm(w_lda)\n",
        "\n",
        "# Project both train & test2 onto that 1D axis\n",
        "X_train_lda = X_full_s.dot(w_lda).reshape(-1,1)\n",
        "X_test2_lda = X_test2_s.dot(w_lda).reshape(-1,1)\n",
        "\n",
        "# --- 4. Decision Tree (max_depth=10) implementation ---\n",
        "def gini(labels):\n",
        "    _, cnt = np.unique(labels, return_counts=True)\n",
        "    p = cnt / cnt.sum()\n",
        "    return 1 - (p**2).sum()\n",
        "\n",
        "def weighted_gini(col, labels, thresh):\n",
        "    left  = labels[col <= thresh]\n",
        "    right = labels[col >  thresh]\n",
        "    if len(left)==0 or len(right)==0:\n",
        "        return None\n",
        "    n = len(labels)\n",
        "    return len(left)/n * gini(left) + len(right)/n * gini(right)\n",
        "\n",
        "def find_best_split(X, y):\n",
        "    parent = gini(y)\n",
        "    best_gain, best_feat, best_thresh = 0, None, None\n",
        "    for f in range(X.shape[1]):\n",
        "        vals = np.unique(X[:, f])\n",
        "        thr = (vals[:-1] + vals[1:]) / 2.0\n",
        "        for t in thr:\n",
        "            wg = weighted_gini(X[:, f], y, t)\n",
        "            if wg is None: continue\n",
        "            gain = parent - wg\n",
        "            if gain > best_gain:\n",
        "                best_gain, best_feat, best_thresh = gain, f, t\n",
        "    return best_feat, best_thresh\n",
        "\n",
        "def build_tree(X, y, depth=0, max_depth=10):\n",
        "    if len(np.unique(y))==1 or depth==max_depth:\n",
        "        vals, cnt = np.unique(y, return_counts=True)\n",
        "        return {'leaf':True, 'pred': vals[cnt.argmax()]}\n",
        "    feat, thresh = find_best_split(X, y)\n",
        "    if feat is None:\n",
        "        vals, cnt = np.unique(y, return_counts=True)\n",
        "        return {'leaf':True, 'pred': vals[cnt.argmax()]}\n",
        "    mask = X[:, feat] <= thresh\n",
        "    return {\n",
        "        'leaf': False,\n",
        "        'feat': feat,\n",
        "        'thresh': thresh,\n",
        "        'left':  build_tree(X[mask],  y[mask],  depth+1, max_depth),\n",
        "        'right': build_tree(X[~mask], y[~mask], depth+1, max_depth)\n",
        "    }\n",
        "\n",
        "def predict_tree(tree, x):\n",
        "    if tree['leaf']:\n",
        "        return tree['pred']\n",
        "    if x[tree['feat']] <= tree['thresh']:\n",
        "        return predict_tree(tree['left'], x)\n",
        "    else:\n",
        "        return predict_tree(tree['right'], x)\n",
        "\n",
        "# --- 5. Train on full LDA data & predict Test2 ---\n",
        "tree = build_tree(X_train_lda, y_full, depth=0, max_depth=10)\n",
        "preds_test2 = np.array([predict_tree(tree, x) for x in X_test2_lda])\n",
        "\n",
        "# --- 6. Save submission ---\n",
        "submission = pd.DataFrame({\n",
        "    'PassengerId': ids_test2,\n",
        "    'Survived':    preds_test2\n",
        "})\n",
        "submission.to_csv('submission_lda_dt10.csv', index=False)\n",
        "print(\"Saved → submission_lda_dt10.csv\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fOhb6sNYJk56",
        "outputId": "1c2e7154-6ecb-4c55-b330-a715c1c56e06"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Saved → submission_lda_dt10.csv\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "# 1) 두 모델의 결과 불러오기\n",
        "sub_pca = pd.read_csv('submission_pca_dt10.csv')      # PCA+DT 모델\n",
        "sub5    = pd.read_csv('submission_mlp_full.csv')  # 기존 5-feature 최고 모델\n",
        "\n",
        "# 2) 병합 (PassengerId 기준)\n",
        "df = pd.merge(sub_pca, sub5, on='PassengerId', suffixes=('_pca', '_5feat'))\n",
        "\n",
        "# 3) AND 룰 적용\n",
        "#    두 모델이 모두 1(생존)일 때만 1, 아니면 0\n",
        "df['Survived'] = ((df['Survived_pca'] == 1) & (df['Survived_5feat'] == 1)).astype(int)\n",
        "\n",
        "# 4) 최종 제출 파일 만들기\n",
        "final = df[['PassengerId', 'Survived']]\n",
        "final.to_csv('submission_ensemble_and.csv', index=False)\n",
        "print(\"Saved → submission_ensemble_and.csv\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "o5uhAnU7NfAL",
        "outputId": "a18cd622-7e20-4e81-be12-4931b55e116d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Saved → submission_ensemble_and.csv\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "# 1) 두 모델의 결과 불러오기\n",
        "sub_pca = pd.read_csv('submission_pca_dt10.csv')      # PCA+DT 모델\n",
        "sub5    = pd.read_csv('submission_mlp_full.csv')     # 기존 5-feature MLP 최고 모델\n",
        "\n",
        "# 2) 병합\n",
        "df = pd.merge(sub_pca, sub5, on='PassengerId', suffixes=('_pca','_5feat'))\n",
        "\n",
        "# 3) OR 룰 적용\n",
        "#    둘 중 하나라도 생존(1)이라 예측하면 1, 둘 다 0일 때만 0\n",
        "df['Survived'] = ((df['Survived_pca'] == 1) | (df['Survived_5feat'] == 1)).astype(int)\n",
        "\n",
        "# 4) 제출 파일 생성\n",
        "df[['PassengerId','Survived']] \\\n",
        "  .to_csv('submission_ensemble_or.csv', index=False)\n",
        "\n",
        "print(\"Saved → submission_ensemble_or.csv\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mhBd9dJMN5FU",
        "outputId": "8991d0ec-c030-4872-b9a2-5dd94bc16316"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Saved → submission_ensemble_or.csv\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "\n",
        "sub_pca = pd.read_csv('submission_pca_dt10.csv')    # PCA+DT 모델\n",
        "sub5    = pd.read_csv('submission_mlp_full.csv')   # 5-feature MLP 모델\n",
        "\n",
        "sub_pca = sub_pca.sort_values('PassengerId').reset_index(drop=True)\n",
        "sub5    = sub5.sort_values('PassengerId').reset_index(drop=True)\n",
        "\n",
        "w_mlp = 0.51\n",
        "w_pca = 0.49\n",
        "votes = w_pca * sub_pca['Survived'].values + w_mlp * sub5['Survived'].values\n",
        "\n",
        "# 평균 ≥ 0.5 → 1, else 0\n",
        "final = (votes >= 0.5).astype(int)\n",
        "\n",
        "submission = pd.DataFrame({\n",
        "    'PassengerId': sub_pca['PassengerId'],\n",
        "    'Survived':    final\n",
        "})\n",
        "submission.to_csv('submission_weighted_0.49_0.51.csv', index=False)\n",
        "print(\"Saved → submission_weighted_0.49_0.51.csv\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wWEXekLlOoX5",
        "outputId": "a83a5fca-22de-4dd1-c5b5-43902a182fa3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Saved → submission_weighted_0.49_0.51.csv\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "# 두 모델 결과 불러오기\n",
        "sub_pca = pd.read_csv('submission_pca_dt10.csv')\n",
        "sub5    = pd.read_csv('submission_mlp_full.csv')\n",
        "\n",
        "# PassengerId 기준으로 병합\n",
        "df = pd.merge(sub_pca, sub5, on='PassengerId',\n",
        "              suffixes=('_pca','_5feat'))\n",
        "\n",
        "# 1) 두 예측이 몇 퍼센트 동일한지\n",
        "same_cnt = (df['Survived_pca'] == df['Survived_5feat']).sum()\n",
        "total   = len(df)\n",
        "print(f\"Identical predictions: {same_cnt}/{total} ({same_cnt/total*100:.2f}%)\")\n",
        "\n",
        "# 2) 각 모델이 예측한 생존 수\n",
        "print(\"PCA+DT survivors :\", df['Survived_pca'].sum())\n",
        "print(\"5-feat MLP survivors:\", df['Survived_5feat'].sum())\n",
        "\n",
        "# 3) AND 했을 때 survivor 개수\n",
        "and_cnt = ((df['Survived_pca']==1) & (df['Survived_5feat']==1)).sum()\n",
        "print(\"AND intersection survivors:\", and_cnt)\n",
        "\n",
        "# 4) 차이 나는 PassengerId 예시\n",
        "diff = df[df['Survived_pca'] != df['Survived_5feat']]\n",
        "print(\"Disagreements (up to 10 rows):\")\n",
        "print(diff.head(10))\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Pur20v2EPJQ0",
        "outputId": "9e10d3c0-5ee0-4266-eaf6-6cbec8bab0a9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Identical predictions: 370/418 (88.52%)\n",
            "PCA+DT survivors : 123\n",
            "5-feat MLP survivors: 145\n",
            "AND intersection survivors: 110\n",
            "Disagreements (up to 10 rows):\n",
            "    PassengerId  Survived_pca  Survived_5feat\n",
            "1           893             0               1\n",
            "2           894             1               0\n",
            "16          908             1               0\n",
            "18          910             0               1\n",
            "32          924             0               1\n",
            "33          925             0               1\n",
            "36          928             0               1\n",
            "37          929             0               1\n",
            "49          941             0               1\n",
            "80          972             1               0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "# 1) 두 모델 결과 불러오기\n",
        "sub_pca = pd.read_csv('submission_pca_dt10.csv')    # PCA+DT 모델\n",
        "sub5    = pd.read_csv('submission_mlp_full.csv')   # 5-feature MLP 모델\n",
        "\n",
        "# 2) PassengerId 기준으로 병합\n",
        "df = pd.merge(\n",
        "    sub_pca, sub5,\n",
        "    on='PassengerId',\n",
        "    suffixes=('_pca','_5feat')\n",
        ")\n",
        "\n",
        "# 3) AND 룰 적용: 둘 다 1일 때만 1\n",
        "df['Survived'] = ((df['Survived_pca'] == 1) & (df['Survived_5feat'] == 1)).astype(int)\n",
        "\n",
        "# 4) 최종 제출 파일 저장\n",
        "df[['PassengerId','Survived']] \\\n",
        "  .to_csv('submission_ensemble_and.csv', index=False)\n",
        "\n",
        "print(\"Saved → submission_ensemble_and.csv\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Q7jmjQBAQnzz",
        "outputId": "91ae57a5-bf28-44e5-bba6-6be310412dad"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Saved → submission_ensemble_and.csv\n"
          ]
        }
      ]
    }
  ]
}